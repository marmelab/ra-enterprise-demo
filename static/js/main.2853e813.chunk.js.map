{"version":3,"sources":["authProvider.ts","configuration/actions.ts","themeReducer.js","layout/Logo.tsx","layout/AppBar.tsx","segments/data.js","visitors/SegmentsField.tsx","visitors/SegmentInput.tsx","visitors/AvatarField.tsx","visitors/FullNameField.tsx","visitors/CustomerLinkField.tsx","visitors/ColoredNumberField.tsx","visitors/MobileGrid.tsx","visitors/VisitorList.tsx","visitors/VisitorCreate.tsx","orders/NbItemsField.js","visitors/CustomerReferenceField.tsx","orders/MobileGrid.js","orders/OrderList.js","orders/Basket.tsx","orders/OrderEdit.js","orders/index.js","reviews/BulkAcceptButton.js","reviews/BulkRejectButton.js","reviews/ReviewListMobile.js","products/ProductReferenceField.js","reviews/StarRatingField.tsx","reviews/rowStyle.js","reviews/ReviewListDesktop.js","reviews/ReviewFilter.js","reviews/AcceptButton.js","reviews/RejectButton.js","reviews/ReviewEditToolbar.js","reviews/ReviewEdit.js","reviews/ReviewList.js","reviews/index.js","visitors/Aside.js","visitors/SegmentsInput.tsx","visitors/VisitorEdit.tsx","visitors/index.ts","visitors/AddressField.tsx","invoices/InvoiceShow.tsx","invoices/InvoiceList.tsx","invoices/index.ts","products/GridList.js","products/ProductList.js","products/Poster.js","products/ProductCreate.js","products/ProductEdit.js","products/index.js","categories/LinkToRelatedProducts.tsx","categories/CategoryList.tsx","products/ThumbnailField.tsx","products/ProductRefField.tsx","guide/guides.js","categories/CategoryEdit.tsx","categories/index.ts","layout/SubMenu.tsx","layout/Menu.tsx","layout/themes.ts","guide/Tooltip.js","guide/index.js","layout/Layout.tsx","layout/Login.tsx","dashboard/Welcome.tsx","dashboard/CardIcon.tsx","dashboard/MonthlyRevenue.tsx","dashboard/NbNewOrders.tsx","dashboard/PendingOrders.tsx","dashboard/PendingReviews.tsx","dashboard/NewCustomers.tsx","dashboard/Dashboard.tsx","dashboard/index.ts","configuration/Configuration.tsx","segments/LinkToRelatedCustomers.js","segments/Segments.js","routes.js","i18n/en.ts","tours/Tour.js","tours/TourList.js","tours/index.js","dataProvider/index.js","fakeServer/index.js","App.tsx","index.tsx"],"names":["authProvider","login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","checkAuth","getItem","reject","getPermissions","changeTheme","theme","type","payload","previousState","Logo","props","width","height","viewBox","aria-label","style","lineHeight","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","strokeWidth","fill","d","useStyles","makeStyles","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","forwardRef","ref","translate","useTranslate","MenuItemLink","to","primaryText","leftIcon","onClick","CustomUserMenu","UserMenu","CustomAppBar","classes","version","useVersion","data","useQuery","resource","filter","playedOn","numberOfTours","length","AppBar","userMenu","Typography","variant","color","className","id","IconButton","component","Link","Badge","badgeContent","name","main","display","flexWrap","marginTop","marginBottom","chip","margin","SegmentsField","record","groups","map","segmentId","segment","segments","find","s","Chip","key","label","defaultProps","addLabel","source","input","SegmentInput","SelectInput","choices","AvatarField","size","Avatar","src","avatar","parseInt","root","alignItems","marginRight","spacing","PureFullNameField","pure","first_name","last_name","CustomerLinkField","ColoredNumberField","WrappedComponent","Colored","displayName","colored","NumberField","card","flexDirection","cardTitleContent","justifyContent","cardContent","typography","body1","MobileGrid","ids","basePath","Card","CardHeader","CardContent","DateField","nb_commands","options","currency","VisitorFilter","Filter","SearchInput","alwaysOn","DateInput","NullableBooleanInput","defaultValue","VisitorList","isXsmall","useMediaQuery","breakpoints","down","List","filters","sort","field","order","perPage","Datagrid","optimized","rowClick","showTime","BooleanField","marginLeft","email","address","maxWidth","zipcode","city","comment","password","confirm_password","validatePasswords","errors","requiredValidate","required","SectionTitle","gutterBottom","Separator","Box","pt","VisitorCreate","Create","SimpleForm","validate","TextInput","autoFocus","formClassName","validation","fullWidth","multiline","PasswordInput","render","basket","NbItemsField","FunctionField","textAlign","CustomerReferenceField","ReferenceField","reference","useListStyles","cardContentRow","TextField","total","OrderFilter","ReferenceInput","AutocompleteInput","optionText","choice","useDatagridStyles","TabbedDatagrid","tabs","state","ordered","delivered","cancelled","handleChange","event","value","filterValues","setFilters","status","this","isXSmall","Tabs","centered","indicatorColor","onChange","Tab","Divider","React","Component","StyledTabbedDatagrid","OrderList","filterDefaultValues","container","minWidth","rightAlignedCell","boldCell","Basket","useQueryWithStore","item","product_id","productId","admin","resources","products","r","reduce","prev","next","loaded","Paper","elevation","Table","TableHead","TableRow","TableCell","TableBody","price","toLocaleString","undefined","quantity","colSpan","total_ex_taxes","delivery_fees","tax_rate","classnames","OrderTitle","useEditStyles","list","edit","Edit","aside","disabled","BooleanInput","icon","OrderIcon","BulkAcceptButton","selectedIds","notify","useNotify","redirectTo","useRedirect","unselectAll","useUnselectAll","useUpdateMany","action","CRUD_UPDATE_MANY","undoable","onSuccess","onFailure","approve","loading","Button","BulkRejectButton","link","textDecoration","inline","ReviewMobileList","linkToRecord","ListItem","button","ListItemAvatar","linkType","ListItemText","primary","secondary","secondaryTypographyProps","noWrap","hasBulkActions","ProductReferenceField","opacity","large","small","StarRatingField","Array","rating","_","i","rowStyle","selectedRow","index","defaultStyle","backgroundColor","palette","selected","borderLeftColor","green","borderLeftWidth","borderLeftStyle","orange","red","headerRow","headerCell","padding","rowCell","ReviewListDesktop","useTheme","cellClassName","useFilterStyles","ReviewFilter","AcceptButton","useUpdate","paddingRight","RejectButton","background","paper","ReviewEditToolbar","handleSubmitWithRedirect","invalid","saving","SaveButton","redirect","submitOnEnter","DeleteButton","paddingTop","form","up","inlineField","ReviewEdit","onCancel","controllerProps","useEditController","save","toolbar","rowsMax","ReviewsBulkActionButtons","BulkDeleteButton","flexGrow","transition","transitions","create","duration","enteringScreen","listWithDrawer","drawerPaper","zIndex","ReviewList","history","useHistory","handleClose","useCallback","push","path","match","isMatch","params","bulkActionButtons","ReviewListMobile","Drawer","open","anchor","onClose","ReviewIcon","useAsideStyles","EventList","useGetList","page","customer_id","orders","orderIds","reviews","reviewIds","events","mixOrdersAndReviews","m","mb","mr","smart_count","eventsFromOrders","date","eventsFromReviews","concat","e1","e2","Date","useEventStyles","cardHeader","clamp","Order","subheader","Review","EditButton","Tooltip","Aside","SegmentsInput","addField","rest","SelectArrayInput","VisitorTitle","VisitorForm","FormWithRedirect","formProps","md","lg","xs","sm","ml","mt","Toolbar","handleSubmit","VisitorIcon","AddressField","CustomerField","InvoiceShow","useShowController","Grid","align","alignContent","toLocaleDateString","invoices","ListFilters","expand","InvoiceIcon","gridList","tileBar","placeholder","grey","getColsForWidth","LoadingGridList","nbChildren","fn","nbItems","cellHeight","cols","GridListTile","from","LoadedGridList","data-tour-id","thumbnail","alt","GridListTileBar","subtitle","withWidth","useQuickFilterStyles","QuickFilter","ProductFilter","NumberInput","ProductList","pagination","Pagination","rowsPerPageOptions","content","img","maxHeight","Poster","image","styles","stock","widthFormGroup","heightFormGroup","ProductCreate","TabbedForm","FormTab","InputProps","startAdornment","InputAdornment","position","endAdornment","allowEmpty","ProductTitle","createStyles","ReferenceManyField","target","ProductIcon","LinkToRelatedProducts","pathname","search","stringify","JSON","category_id","CategoryList","ThumbnailField","ProductRefField","min","max","CategoryTitle","minimumFractionDigits","CategoryIcon","sidebarIsOpen","paddingLeft","sidebarIsClosed","SubMenu","handleToggle","isOpen","children","dense","header","MenuItem","ListItemIcon","placement","Collapse","in","timeout","unmountOnExit","disablePadding","Menu","onMenuClick","useState","menuCatalog","menuSales","menuCustomers","setState","useSelector","ui","sidebarOpen","menu","DashboardMenuItem","categories","darkTheme","lightTheme","light","dark","contrastText","overrides","MuiFilledInput","JoyrideTooltipContainer","tooltipProps","continuous","backProps","closeProps","primaryProps","skipProps","isLastStep","step","hideBackButton","locale","showSkipButton","back","close","last","skip","output","top","right","tooltip","tooltipContainer","tooltipTitle","tooltipContent","tooltipFooter","StateContext","createContext","DispatchContext","reducer","run","stepIndex","activeGuide","guide","guides","steps","Error","GuideProvider","tools","useReducer","dispatch","actions","start","before","setTimeout","stop","after","previous","Provider","usePlayback","context","useContext","ErrorBoundary","hasError","error","errorInfo","console","warn","Guide","useGuide","joyrideProps","callback","document","querySelector","EVENTS","STEP_BEFORE","beforeFunction","STEP_AFTER","afterFunction","ACTIONS","PREV","TARGET_NOT_FOUND","TOUR_END","STATUS","FINISHED","SKIPPED","TOOLTIP_CLOSE","showProgress","disableCloseOnEsc","disableOverlayClose","spotlightClicks","tooltipComponent","Math","ceil","floor","random","beacon","getAttribute","slice","click","CustomSidebar","Sidebar","Layout","appBar","sidebar","minHeight","backgroundRepeat","backgroundSize","hint","renderInput","meta","touched","inputProps","helperText","Form","withTypes","Login","setLoading","useLogin","location","useLocation","onSubmit","auth","nextPathname","catch","message","values","noValidate","CardActions","CircularProgress","thickness","Notification","LoginWithTheme","ThemeProvider","createMuiTheme","media","mediaUrl","toString","Welcome","CardMedia","href","float","borderRadius","CardIcon","Icon","bgColor","MonthlyRevenue","DollarIcon","NbNewOrders","ShoppingCartIcon","cost","text","PendingOrders","customers","nb_items","customer_name","ListItemSecondaryAction","titleLink","listItemText","overflowY","WebkitLineClamp","WebkitBoxOrient","query","PendingReviews","nb","CommentIcon","NewCustomers","aMonthAgo","useMemo","setDate","getDate","setHours","setMinutes","setSeconds","setMilliseconds","has_ordered","first_seen_gte","toISOString","visitors","CustomerIcon","flexColumn","leftCol","rightCol","singleCol","Dashboard","dataProvider","useDataProvider","isSmall","fetchOrders","a","getList","date_gte","recentOrders","aggregations","stats","revenue","nbNewOrders","pendingOrders","maximumFractionDigits","getMany","pendingOrdersCustomers","customer","fetchReviews","nbPendingReviews","pendingReviews","review","pendingReviewsCustomers","useEffect","Configuration","useLocale","setLocale","useSetLocale","useDispatch","Title","LinkToRelatedCustomers","Segments","exact","customEnglishMessages","englishMessages","pos","configuration","language","dashboard","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","items","welcome","aor_button","demo_button","sales","catalog","fields","commands","first_seen","last_seen","last_seen_gte","total_spent","fieldGroups","identity","change_password","delete","password_mismatch","amount","delivery","sum","unit_price","date_lte","total_gte","returned","command_id","height_gte","height_lte","stock_lte","width_gte","width_lte","details","description","relative_to_poster","detail","accept","notification","approved_success","approved_error","rejected_success","rejected_error","compulsive","collector","ordered_once","regular","returns","reviewer","cursor","visited","rightButton","newIcon","paddingBottom","buyIcon","playedOnIndicator","refresh","useRefresh","useMutation","setPlayed","tour","process","markdownToReact","startIcon","boxShadow","gridContainer","ListActions","currentSort","displayedFilters","exporter","showFilter","permanentFilter","hasCreate","onUnselectItems","maxResults","reset","resetLoading","markAsPlayed","markAsPlayedLoading","TopToolbar","sanitizeListRestProps","cloneElement","GridList","Tour","DirectionsBusIcon","then","factory","default","provider","i18nProvider","polyglotI18nProvider","messages","App","setDataProvider","restoreFetch","fakeServerFactory","REACT_APP_DATA_PROVIDER","dataProviderFactory","dataProviderInstance","fetchDataProvider","Admin","customReducers","themeReducer","customRoutes","loginPage","layout","Resource","tours","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2853e813.chunk.js","sourcesContent":["import { AuthProvider } from 'ra-core';\n\nconst authProvider: AuthProvider = {\n    login: ({ username }) => {\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    },\n    logout: () => {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    },\n    checkError: () => Promise.resolve(),\n    checkAuth: () =>\n        localStorage.getItem('username') ? Promise.resolve() : Promise.reject(),\n    getPermissions: () => Promise.reject('Unknown method'),\n};\n\nexport default authProvider;\n","import { ThemeName } from '../types';\n\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme: ThemeName) => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});\n","import { CHANGE_THEME } from './configuration/actions';\n\nexport default (previousState = 'light', { type, payload }) => {\n    if (type === CHANGE_THEME) {\n        return payload;\n    }\n    return previousState;\n};\n","import React, { SVGProps } from 'react';\n\nconst Logo = (props: SVGProps<SVGSVGElement>) => (\n    <svg width={234.532} height={20.475} viewBox=\"0 0 62.053 5.417\" {...props}>\n        <g\n            aria-label=\"~Posters Galore~\"\n            style={{\n                lineHeight: 1.25,\n            }}\n            fontWeight={400}\n            fontSize={7.056}\n            fontFamily=\"Permanent Marker\"\n            letterSpacing={0}\n            wordSpacing={0}\n            strokeWidth={0.265}\n            fill=\"#fff\"\n        >\n            <path d=\"M.227 3.659Q.124 3.652.062 3.61 0 3.562 0 3.486q0-.068.062-.124.041-.103.083-.165L.24 3.06q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.103.048.165.09.07.04.131.096.076.04.118.09.048.04.082.089.02.027.083.09.062.061.151.061.083 0 .138-.075.062-.076.124-.131.055-.145.18-.22.055-.028.089-.035l.076-.014q.02-.007.041-.007l.035-.014.075-.007h.09q.117-.034.207-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.09.131l-.137.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.056.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035zM4.417 3.225q.007-.028.027-.021.028 0 .048-.007-.055-.055-.068-.145-.014-.096-.07-.158.014-.035.021-.069.014-.034.062-.028-.02-.151.007-.282.028-.131.083-.248.062-.117.138-.228.082-.117.158-.234.062-.014.076.014.014.02.048-.014.11-.076.152-.165.041-.097.041-.207.062-.179.138-.351.083-.18.186-.331.103-.152.22-.262.118-.117.255-.179.097-.083.242-.152.151-.068.316-.103.173-.041.352-.041.179-.007.33.034.035.014.042-.014Q7.228 0 7.255 0q.345.041.614.138.275.096.468.269.131.206.248.447.117.235.18.496.068.255.061.531-.007.276-.117.551-.241.303-.585.49-.345.179-.745.303-.392.117-.82.193-.42.075-.82.165.007.186 0 .4-.006.206-.048.42-.034.207-.11.406-.069.2-.193.372-.138-.006-.29.028-.144.034-.261.069l-.11-.069q-.049-.028-.124-.034.02-.083-.042-.173-.055-.09-.117-.172-.055-.09-.076-.172-.013-.09.083-.159-.055-.048-.055-.151.028.027.069.027-.014-.124.027-.296.049-.172.076-.338.035-.172.014-.31-.02-.144-.165-.206zm1.791-1.613l-.048.138q-.014.055-.035.103-.02.049-.048.097l-.048.11q.014.042.055.062.041.02.055.062.097-.048.193-.069.097-.027.193-.041.096-.014.193-.035.096-.02.2-.068.103-.049.213-.076l.228-.07q.11-.034.213-.075.104-.048.18-.124-.097-.09-.29-.158-.193-.07-.42-.083-.22-.02-.448.028-.22.048-.386.2zM12.506 3.1q-.007.083.013.16.021.075.049.15.034.07.062.145.027.076.041.152.014.096 0 .214-.014.11-.048.22-.035.103-.09.193-.055.083-.13.124-.097.124-.235.193-.138.069-.255.165-.076.048-.172.07l-.186.04q-.076.042-.18.09l-.213.083q-.11.034-.22.055-.11.014-.193.007-.207.076-.407.096-.193.028-.455-.027-.248.034-.461-.021-.207-.055-.372-.172-.159-.124-.283-.29-.117-.172-.193-.358-.055-.393.028-.71.083-.323.234-.592.159-.276.358-.503.2-.234.386-.455.042.014.062 0 .028-.02.048-.048.021-.035.042-.062.027-.028.062-.035.048-.103.138-.151.096-.055.151-.152.062-.014.104-.041.04-.028.075-.062.042-.035.083-.062.041-.035.097-.048v-.076q.124-.055.179-.124l.144-.18q.062-.006.097-.006.041 0 .117-.014.055-.096.096-.145.049-.048.138-.103.083.041.18.055.103.014.178.09.007.069.042.11.034.034.076.069.041.027.075.062.042.034.056.096.027.007.034-.007.014-.013.041-.007.021.097.049.131.027.028.055.117-.035.07-.055.145-.014.07-.083.104-.007.048.027.055.035 0 .042.034.007.062-.02.09.164.268.295.572.131.296.297.565zm-.862.655q.028-.076.07-.124.048-.048.054-.145-.034-.055-.04-.082-.008-.035-.008-.104-.151-.213-.262-.454-.11-.248-.248-.462-.013.028-.048.055-.034.028-.076-.014-.013.055-.048.083-.034.02-.076.02-.041-.006-.09-.02-.04-.02-.075-.048-.2.158-.4.31-.2.151-.358.351-.028.014-.034.014-.007-.007-.042.007-.055.13-.138.241-.075.103-.151.214-.076.11-.131.234-.055.124-.062.29.117.096.276.116.158.021.323.007.173-.013.331-.041.165-.034.303-.034.29-.07.496-.18.207-.117.434-.234zM12.898 2.067q.049-.145.152-.248.11-.103.234-.172.131-.076.269-.124t.262-.083q.275-.117.585-.22.317-.11.641-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.07.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.076.096.104 0 .18.049.075.048.124.117.048.069.069.151.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.082.09.13.2.014.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.138.007-.075 0-.158-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.44-.014.215-.048.4-.13.187-.083.352-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.076-.02q-.13-.076-.296-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.414-.124-.013-.035-.034-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145z\" />\n            <path d=\"M19.988 1.853q-.172 0-.372.028-.2.02-.392.048-.138.02-.27.035-.123.013-.226.02-.049.152-.097.27-.048.116-.103.226-.055.118-.104.242-.041.117-.082.255-.07.11-.117.206-.042.09-.07.207-.082.103-.123.22-.042.11-.062.193l-.028.083q-.041.041-.048.069-.007.02-.035.041-.007.076-.048.152-.014.034-.02.069-.007.027-.007.041 0 .069-.035.09.007.034 0 .075l-.014.07q-.02.082-.013.13l.034.049q.02.02.028.055.04.027.062.034.027.02.082.048l.062.07q.035.199-.062.316-.103.131-.351.131h-.083q-.034-.034-.041-.055l-.09-.034q-.034-.014-.062-.056-.09-.04-.144-.068l-.062-.035v-.083q-.049-.062-.076-.137-.02-.076-.035-.152-.013-.062-.034-.117-.014-.055-.041-.097-.014-.4.075-.675.09-.275.186-.53l.11-.276q.056-.145.097-.296l.062-.07.076-.178.069-.152q.02-.048.034-.09l.035-.082q-.042 0-.076.007-.035 0-.069.007l-.076.013h-.069q-.048 0-.069-.006-.075.034-.165.034H17.019q-.014-.007-.028-.007-.069 0-.11.02h-.228q-.013 0-.034.008h-.034q-.049 0-.104-.007-.055-.014-.117-.048-.082-.11-.11-.118l-.062-.082q-.007-.042-.02-.076-.014-.041-.028-.09-.028-.069-.055-.144-.021-.083-.021-.193.007-.055.028-.083l.034-.048.02-.104.09.007h.193q.22 0 .448-.013l.469-.042.275-.027.296-.028q.028-.062.056-.117l.068-.034q.124-.007.173.034.055.034.09.069l.302-.028q.159-.02.317-.048.235-.034.469-.062.241-.027.462-.027.096 0 .186.006.09.007.165.021l.069.048q.02.042.055.076l.083.069q.082.076.165.18.083.103.062.302-.055.083-.083.097l-.062.082-.069-.006q-.04 0-.075.013-.035.007-.07.021l-.054.028-.062.013h-.104q-.034-.007-.076-.007z\" />\n            <path d=\"M23.303 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.338.324-.186.082-.407.124-.22.034-.454.075-.228.042-.455.18-.09-.035-.166 0-.068.034-.206.02-.042.042-.104.062-.062.014-.124.035.028.062.021.13 0 .063.02.104.242.02.531-.007.297-.028.58-.034.006.034-.008.048-.014.007-.007.034.049.035.097.09l.096.096q.048.049.097.083.055.028.124.02.027.056.034.125.014.062-.014.13-.11.076-.22.159-.11.076-.234.138-.118.062-.255.103-.131.035-.297.028h-.055q-.014 0-.041-.02-.055.034-.159.02-.096-.014-.151.02-.076-.034-.186-.027-.104 0-.186-.028-.11.145-.2.31-.09.166-.159.352.235.034.386.027.159-.007.297-.02.137-.021.282-.035.145-.02.365-.014.138-.075.324-.096.193-.028.352-.083.055.021.096.076.041.048.076.097.041.04.082.075.042.035.104.028.027.027.034.069.014.034.02.069.008.034.022.062.02.02.062.013-.104.228-.242.352-.13.117-.303.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.04-.014-.096-.014-.158.035-.379.062-.22.028-.448.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.075-.11-.014-.07-.09-.104-.007-.09-.027-.2l-.042-.227q-.02-.124-.034-.24-.007-.118.014-.215.02-.103.082-.186.07-.082.048-.179.035-.007.042-.034.007-.035.055-.028.041-.124.09-.234.048-.11.096-.214.055-.103.103-.206.055-.11.104-.241-.097-.09-.145-.193-.041-.11-.062-.214-.02-.11-.035-.22-.013-.118-.048-.235.07-.103.166-.165.103-.069.22-.11.117-.042.255-.07.138-.027.29-.061.275-.09.489-.138.22-.048.427-.076.213-.034.44-.062.228-.027.518-.083.062.062.117.062.027-.062.062-.034.041.02.034-.041.07.117.172.2.11.075.242.13zM24.185 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.125.02-.034.035-.075.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.014-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.035 0-.056-.048-.02-.049-.048-.097.02-.124.042-.234.02-.11.048-.207.034-.096.055-.193.02-.096-.02-.2.027.021.04-.007.014-.034.021-.082.007-.055.007-.104 0-.055-.007-.09.07-.178.11-.364.049-.193.083-.38.041-.185.083-.364.041-.18.11-.331.076-.014.165.02.097.028.118.076.179-.138.317-.33.137-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.172.104.282.276.056.027.09.062.041.028.097.062v.083q.082.075.13.179.056.096.097.213l.083.228q.04.11.096.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.008.027 0 .076-.02.303-.199.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .02.035.166.103.262.165.097.062.18.103.09.042.186.076.103.028.282.07.18.04.276.068.103.02.186.041l.165.028.248.02q.062.063.104.152.048.083.062.172.013.083.006.166-.006.076-.048.124.007.02.028.02.027-.006.055 0-.041.028-.069.07l-.055.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.406-.165-.152-.076-.27-.145-.11-.075-.206-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.151.206-.069.11-.097.262.242-.027.503-.13.262-.111.496-.208-.027-.213-.151-.344-.117-.13-.248-.172zM27.01 2.067q.048-.145.151-.248.11-.103.234-.172.131-.076.27-.124.137-.048.26-.083.277-.117.587-.22.317-.11.64-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.069.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.077.096.103 0 .179.049.076.048.124.117t.069.151q.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.083.09.13.2.015.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.137.007-.076 0-.159-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.441-.014.214-.048.4-.13.186-.083.351-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.075-.02q-.131-.076-.297-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.413-.124-.014-.035-.035-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145zM32.797 3.535q0-.076.021-.138.02-.062.007-.159.213-.454.482-.84.276-.393.655-.69.062-.047.096-.096.042-.055.076-.103.041-.048.09-.083.048-.041.124-.055.172-.2.413-.365.241-.165.503-.317t.524-.31q.268-.159.482-.345.076.049.117.035.048-.02.097-.007.062.13.158.186.103.048.207.103.11.049.2.124.096.07.144.193-.048 0-.048.035.007.034.02.076.014.04.014.075 0 .035-.062.035 0 .048.049.048.048 0 .048.048 0 .042-.02.07-.015.02 0 .075-.166.11-.373.214l-.427.206q-.22.11-.455.241-.227.124-.455.29-.227.165-.461.365-.228.2-.441.427-.214.22-.4.462-.186.234-.317.461.014.035.035.062.027.028.041.063.262.013.49 0 .227-.021.454.027.028-.02.034-.055.007-.035.042-.048.468-.049.875-.152.406-.11.827-.22-.124-.049-.22-.076-.042-.041 0-.069.047-.034.075-.069-.11-.062-.186-.165-.069-.104-.083-.269.049-.041.049-.096 0-.056-.049-.09-.034-.014-.041 0l-.014.027q0 .014-.014.028-.007.014-.034 0 .007-.076.034-.124.028-.048.042-.117l.572-.38q.09.07.22.146.131.075.276.151.144.076.296.159.152.075.282.151.125.055.214.138.09.076.172.165l.166.166q.082.082.2.138-.014.11.013.179.028.069.014.165-.13.234-.317.4-.186.158-.42.275-.228.117-.49.2-.261.076-.537.152-.275.069-.558.151-.276.076-.544.18-.117 0-.2.006-.083.007-.159.021l-.151.028q-.076.013-.165.02-.035-.007-.049.014-.007.02-.027.035-.138.02-.248.02h-.186q-.097 0-.2.028-.104.027-.193.02-.62-.027-.972-.44-.351-.414-.385-1.137.006-.035-.014-.042-.02-.014-.035-.027z\" />\n            <path d=\"M42.01 4.589q-.042.117-.125.241-.075.117-.186.214-.103.09-.234.151-.13.062-.275.07-.09-.022-.124-.05-.028-.02-.062-.04-.021-.014-.042-.021-.014-.014-.027-.02l-.083-.035.028-.09q.013-.055-.007-.083-.021-.034-.083-.09l-.041-.04q-.021-.021-.035-.042l-.117-.13.186-.049q.172-.048.227-.124.062-.076.049-.255-.138-.027-.235-.007-.09.02-.186.048-.124.035-.255.062-.124.021-.275.021h-.104l-.103-.014-.069-.013q-.014-.076-.027-.083l-.028-.028q-.034-.034-.076-.09-.034-.061-.013-.15-.035-.063-.042-.125-.041.083-.062.172l-.027.07-.07.013q-.013.007-.02.035-.007.02-.007.034l-.034.117-.028.028q-.014.007-.027.02-.014.062-.035.124-.02.062-.041.118-.035.09-.062.179-.02.082-.014.165l-.028.076q-.034.041-.075.069l-.083.041q-.014.014-.041.028l-.035.013-.02.076-.083.014-.11.02q-.028.008-.07.008l-.068-.007-.117-.097q-.042-.041-.097-.076-.062-.082-.069-.124l-.014-.075q-.013-.042-.013-.07-.007-.027-.021-.04l-.09-.083.076-.062.007-.117q.138-.352.29-.676l.323-.661q.056-.11.104-.22l.11-.221q-.007-.02-.007-.048t.014-.062q.076-.118.124-.207l.096-.193q.055-.117.11-.227.063-.11.152-.228l.11-.048.049-.014q.027-.014.062-.014l.103.014q.193-.09.338-.248.144-.165.296-.393l.069-.096.09.055q.034.02.096.041.062.014.13.035.125.027.235.062.11.034.18.103.04.11.047.166.007.055.021.11.02.117.035.234.02.117.027.262.035.117.055.234.028.11.048.228l.07.323q.034.152.089.29.055 0 .069.007.034-.014.069-.021l.09-.014.075-.007.028.07q.007.034.069.068.09.007.13.042.042.027.076.062.028.027.055.04l.104.042-.055.104q-.07.124-.2.24-.124.111-.283.187.007.041.007.082.007.035.02.076.022.117.035.241.014.124 0 .255zm-1.992-1.192q.207-.014.372-.028.173-.02.38-.062-.049-.206-.104-.427-.055-.227-.117-.448l-.042.07q-.137.144-.268.323-.124.18-.214.338l-.083.124q-.04.062-.075.124.041-.007.075-.007.042 0 .076-.007zM44.29 5.092q-.193.062-.42.124-.228.062-.455.062-.344 0-.544-.172-.035-.076-.062-.104l-.042-.055q-.013-.034-.02-.09-.083-.096-.131-.22-.048-.13-.07-.262-.013-.138-.006-.275.014-.138.048-.262.014-.028.014-.055l.014-.062q.027-.11.055-.214.034-.103.09-.179-.028-.062 0-.138.027-.076.061-.138.097-.261.159-.44.069-.187.138-.366.117-.31.22-.613.104-.303.186-.655.055-.034.083-.048.041-.014.069-.02.124.062.29.124.165.055.275.055.055.034.069.055l.027.027q.076.09.131.186.055.09.035.242-.042.062-.062.062-.035.137-.076.234-.035.096-.076.193-.048.103-.09.206-.04.104-.068.255-.028.035-.042.062-.007.028-.02.062-.014.035-.035.076-.014.035-.048.062-.02.18-.069.29-.041.11-.09.22-.082.2-.151.4-.062.2-.076.454.035-.013.062-.013h.062q.062 0 .145.02.207-.11.448-.13.248-.021.489-.028H45q.096 0 .179-.014.062.035.076.041h.055q.048 0 .083.007.082.076.158.11.076.035.159.063.075.027.144.062.076.027.145.082l.048.297q.048.062.041.082 0 .055-.027.083l.014.076q-.104.02-.145.048-.034.027-.069.062-.055.007-.083.007h-.04q-.097 0-.235.034-.186-.062-.386-.062-.076 0-.159.007l-.165.014q-.083.014-.172.02-.083.008-.172.008zM50.25 3.1q-.007.083.014.16.02.075.048.15.035.07.062.145.028.076.041.152.014.096 0 .214-.013.11-.048.22-.034.103-.09.193-.054.083-.13.124-.097.124-.235.193-.137.069-.254.165-.076.048-.173.07l-.186.04q-.076.042-.179.09l-.213.083q-.11.034-.221.055-.11.014-.193.007-.207.076-.406.096-.193.028-.455-.027-.248.034-.462-.021-.207-.055-.372-.172-.158-.124-.282-.29-.118-.172-.193-.358-.055-.393.027-.71.083-.323.235-.592.158-.276.358-.503.2-.234.386-.455.041.014.062 0 .027-.02.048-.048.02-.035.041-.062.028-.028.062-.035.048-.103.138-.151.097-.055.152-.152.062-.014.103-.041.041-.028.076-.062.041-.035.082-.062.042-.035.097-.048v-.076q.124-.055.18-.124l.144-.18q.062-.006.096-.006.042 0 .117-.014.056-.096.097-.145.048-.048.138-.103.082.041.179.055.103.014.179.09.007.069.041.11.035.034.076.069.041.027.076.062.041.034.055.096.028.007.034-.007.014-.013.042-.007.02.097.048.131.028.028.055.117-.034.07-.055.145-.014.07-.083.104-.007.048.028.055.034 0 .041.034.007.062-.02.09.165.268.296.572.13.296.296.565zm-.861.655q.027-.076.069-.124.048-.048.055-.145-.035-.055-.041-.082-.007-.035-.007-.104-.152-.213-.262-.454-.11-.248-.248-.462-.014.028-.048.055-.035.028-.076-.014-.014.055-.048.083-.035.02-.076.02-.042-.006-.09-.02-.041-.02-.076-.048-.2.158-.4.31-.2.151-.358.351-.027.014-.034.014-.007-.007-.041.007-.055.13-.138.241-.076.103-.152.214-.076.11-.13.234-.056.124-.063.29.118.096.276.116.158.021.324.007.172-.013.33-.041.166-.034.304-.034.29-.07.496-.18.207-.117.434-.234zM51.78 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.124.02-.035.035-.076.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.013-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.034 0-.055-.048-.02-.049-.048-.097.02-.124.04-.234.022-.11.05-.207.034-.096.054-.193.02-.096-.02-.2.027.021.04-.007.015-.034.022-.082.007-.055.007-.104 0-.055-.007-.09.068-.178.11-.364.048-.193.082-.38l.083-.364q.041-.18.11-.331.076-.014.166.02.096.028.117.076.179-.138.317-.33.138-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.173.104.283.276.055.027.09.062.04.028.096.062v.083q.083.075.13.179.056.096.097.213.042.11.083.228.041.11.097.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.007.027 0 .076-.02.303-.2.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .021.035.166.103.262.165.097.062.18.103.089.042.185.076.104.028.283.07.179.04.275.068.104.02.186.041l.166.028.248.02q.062.063.103.152.048.083.062.172.014.083.007.166-.007.076-.048.124.007.02.028.02.027-.006.055 0-.042.028-.07.07l-.054.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.407-.165-.151-.076-.268-.145-.11-.075-.207-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.15.206-.07.11-.097.262.24-.027.503-.13.261-.111.496-.208-.028-.213-.152-.344-.117-.13-.248-.172zM58.332 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.337.324-.186.082-.407.124-.22.034-.455.075-.227.042-.454.18-.09-.035-.166 0-.069.034-.207.02-.04.042-.103.062-.062.014-.124.035.028.062.02.13 0 .063.021.104.242.02.531-.007.296-.028.579-.034.007.034-.007.048-.014.007-.007.034.048.035.096.09l.097.096q.048.049.096.083.055.028.124.02.028.056.035.125.014.062-.014.13-.11.076-.22.159-.11.076-.235.138-.117.062-.255.103-.13.035-.296.028h-.055q-.014 0-.041-.02-.056.034-.159.02-.096-.014-.152.02-.075-.034-.186-.027-.103 0-.186-.028-.11.145-.2.31-.089.166-.158.352.234.034.386.027.158-.007.296-.02.138-.021.283-.035.144-.02.365-.014.138-.075.324-.096.193-.028.351-.083.055.021.097.076.041.048.075.097.042.04.083.075.041.035.104.028.027.027.034.069.014.034.02.069.008.034.021.062.021.02.062.013-.103.228-.24.352-.132.117-.304.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.041-.014-.096-.014-.159.035-.38.062-.22.028-.447.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.076-.11-.013-.07-.09-.104-.006-.09-.027-.2l-.041-.227q-.02-.124-.035-.24-.007-.118.014-.215.02-.103.083-.186.069-.082.048-.179.035-.007.041-.034.007-.035.056-.028.04-.124.09-.234.047-.11.096-.214.055-.103.103-.206.055-.11.103-.241-.096-.09-.144-.193-.042-.11-.062-.214-.021-.11-.035-.22-.014-.118-.048-.235.069-.103.165-.165.104-.069.22-.11.118-.042.256-.07.138-.027.29-.061.275-.09.488-.138.22-.048.427-.076.214-.034.441-.062.228-.027.517-.083.062.062.117.062.028-.062.062-.034.042.02.035-.041.069.117.172.2.11.075.241.13zM58.394 3.659q-.103-.007-.165-.049-.062-.048-.062-.124 0-.068.062-.124.041-.103.083-.165l.096-.138q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.104.048.166.09.068.04.13.096.076.04.118.09.048.04.082.089.021.027.083.09.062.061.152.061.082 0 .137-.075.062-.076.124-.131.056-.145.18-.22.055-.028.09-.035l.075-.014q.02-.007.041-.007.021-.007.035-.014l.076-.007h.09q.116-.034.206-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.089.131l-.138.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.055.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035z\" />\n        </g>\n    </svg>\n);\n\nexport default Logo;\n","import React, { forwardRef } from \"react\";\nimport {\n  AppBar,\n  UserMenu,\n  MenuItemLink,\n  useTranslate,\n  useQuery,\n  useVersion,\n} from \"react-admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Link } from \"react-router-dom\";\n\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport TourIcon from \"@material-ui/icons/HelpOutline\";\n\nimport Logo from \"./Logo\";\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\nconst ConfigurationMenu = forwardRef<any, any>((props, ref) => {\n  const translate = useTranslate();\n  return (\n    <MenuItemLink\n      ref={ref}\n      to=\"/configuration\"\n      primaryText={translate(\"pos.configuration\")}\n      leftIcon={<SettingsIcon />}\n      onClick={props.onClick}\n    />\n  );\n});\n\nconst CustomUserMenu = (props: any) => (\n  <UserMenu {...props}>\n    <ConfigurationMenu />\n  </UserMenu>\n);\n\nconst CustomAppBar = (props: any) => {\n  const classes = useStyles();\n\n  const version = useVersion();\n  const { data } = useQuery(\n    {\n      type: \"getList\",\n      resource: \"tours\",\n      payload: { filter: { playedOn: null } },\n    },\n    {\n      version,\n    }\n  );\n\n  let numberOfTours = 0;\n  if (data) {\n    numberOfTours = data.length;\n  }\n\n  return (\n    <AppBar {...props} userMenu={<CustomUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      <Logo />\n      <span className={classes.spacer} />\n      <IconButton to=\"tours\" component={Link} color=\"inherit\">\n        <Badge badgeContent={numberOfTours} color=\"error\" variant=\"dot\">\n          <TourIcon />\n        </Badge>\n      </IconButton>\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","export default [\n    { id: 'compulsive', name: 'resources.segments.data.compulsive' },\n    { id: 'collector', name: 'resources.segments.data.collector' },\n    { id: 'ordered_once', name: 'resources.segments.data.ordered_once' },\n    { id: 'regular', name: 'resources.segments.data.regular' },\n    { id: 'returns', name: 'resources.segments.data.returns' },\n    { id: 'reviewer', name: 'resources.segments.data.reviewer' },\n];\n","import React, { FC } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { useTranslate } from 'react-admin';\nimport segments from '../segments/data';\nimport { FieldProps, Customer } from '../types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    main: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: -8,\n        marginBottom: -8,\n    },\n    chip: { margin: 4 },\n});\n\nconst SegmentsField: FC<FieldProps<Customer>> = ({ record }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    return record ? (\n        <span className={classes.main}>\n            {record.groups &&\n                record.groups.map(segmentId => {\n                    const segment = segments.find(s => s.id === segmentId);\n\n                    return segment ? (\n                        <Chip\n                            key={segment.id}\n                            className={classes.chip}\n                            label={translate(segment.name)}\n                        />\n                    ) : null;\n                })}\n        </span>\n    ) : null;\n};\n\nSegmentsField.defaultProps = {\n    addLabel: true,\n    source: 'groups',\n};\n\nexport default SegmentsField;\n","import React, { FC } from 'react';\nimport { useTranslate, SelectInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InputProps } from 'ra-core';\n\nimport segments from '../segments/data';\n\nconst useStyles = makeStyles({\n    input: { width: 150 },\n});\n\ninterface Props extends Omit<InputProps, 'source'> {\n    source?: string;\n}\n\nconst SegmentInput: FC<Props> = props => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <SelectInput\n            {...props}\n            choices={segments.map(segment => ({\n                id: segment.id,\n                name: translate(segment.name),\n            }))}\n            className={classes.input}\n        />\n    );\n};\n\nSegmentInput.defaultProps = {\n    source: 'groups',\n};\n\nexport default SegmentInput;\n","import React, { FC } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Customer, FieldProps } from '../types';\n\ninterface Props extends FieldProps<Customer> {\n    className?: string;\n    size?: string;\n}\n\nconst AvatarField: FC<Props> = ({ record, size = '25', className }) =>\n    record ? (\n        <Avatar\n            src={`${record.avatar}?size=${size}x${size}`}\n            style={{ width: parseInt(size, 10), height: parseInt(size, 10) }}\n            className={className}\n        />\n    ) : null;\n\nexport default AvatarField;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport pure from 'recompose/pure';\n\nimport AvatarField from './AvatarField';\nimport { FieldProps, Customer } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n    },\n    avatar: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props extends FieldProps<Customer> {\n    size?: string;\n}\n\nconst FullNameField: FC<Props> = ({ record, size }) => {\n    const classes = useStyles();\n    return record ? (\n        <div className={classes.root}>\n            <AvatarField\n                className={classes.avatar}\n                record={record}\n                size={size}\n            />\n            {record.first_name} {record.last_name}\n        </div>\n    ) : null;\n};\n\nconst PureFullNameField = pure(FullNameField);\n\nPureFullNameField.defaultProps = {\n    source: 'last_name',\n    label: 'resources.customers.fields.name',\n};\n\nexport default PureFullNameField;\n","import React, { FC } from 'react';\nimport { Link } from 'react-admin';\n\nimport FullNameField from './FullNameField';\nimport { FieldProps, Customer } from '../types';\n\nconst CustomerLinkField: FC<FieldProps<Customer>> = props =>\n    props.record ? (\n        <Link to={`/customers/${props.record.id}`}>\n            <FullNameField {...props} />\n        </Link>\n    ) : null;\n\nCustomerLinkField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerLinkField;\n","import React, { ComponentType } from 'react';\nimport { NumberField } from 'react-admin';\nimport { FieldProps } from '../types';\n\nconst colored = <T extends FieldProps>(\n    WrappedComponent: ComponentType<T>\n): ComponentType<T> => {\n    const Colored = (props: T) =>\n        props.record && props.source ? (\n            props.record[props.source] > 500 ? (\n                <span style={{ color: 'red' }}>\n                    <WrappedComponent {...props} />\n                </span>\n            ) : (\n                <WrappedComponent {...props} />\n            )\n        ) : null;\n\n    Colored.displayName = `Colored(${WrappedComponent.displayName})`;\n\n    return Colored;\n};\n\nconst ColoredNumberField = colored<typeof NumberField>(NumberField);\nColoredNumberField.defaultProps = NumberField.defaultProps;\n\nexport default ColoredNumberField;\n","// in src/comments.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DateField, EditButton, useTranslate, NumberField } from 'react-admin';\n\nimport AvatarField from './AvatarField';\nimport ColoredNumberField from './ColoredNumberField';\nimport SegmentsField from './SegmentsField';\nimport { Identifier } from 'ra-core';\nimport { Customer } from '../types';\nimport { FC } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    root: { margin: '1em' },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: {\n        ...theme.typography.body1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\ninterface Props {\n    ids?: Identifier[];\n    data?: { [key: string]: Customer };\n    basePath?: string;\n}\n\nconst MobileGrid: FC<Props> = ({ ids, data, basePath }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    if (!ids || !data) {\n        return null;\n    }\n\n    return (\n        <div className={classes.root}>\n            {ids.map(id => (\n                <Card key={id} className={classes.card}>\n                    <CardHeader\n                        title={\n                            <div className={classes.cardTitleContent}>\n                                <h2>{`${data[id].first_name} ${\n                                    data[id].last_name\n                                }`}</h2>\n                                <EditButton\n                                    resource=\"visitors\"\n                                    basePath={basePath}\n                                    record={data[id]}\n                                />\n                            </div>\n                        }\n                        avatar={<AvatarField record={data[id]} size=\"45\" />}\n                    />\n                    <CardContent className={classes.cardContent}>\n                        <div>\n                            {translate(\n                                'resources.customers.fields.last_seen_gte'\n                            )}\n                            &nbsp;\n                            <DateField\n                                record={data[id]}\n                                source=\"last_seen\"\n                                type=\"date\"\n                            />\n                        </div>\n                        <div>\n                            {translate(\n                                'resources.commands.name',\n                                data[id].nb_commands || 1\n                            )}\n                            &nbsp;:&nbsp;\n                            <NumberField\n                                record={data[id]}\n                                source=\"nb_commands\"\n                                label=\"resources.customers.fields.commands\"\n                            />\n                        </div>\n                        <div>\n                            {translate(\n                                'resources.customers.fields.total_spent'\n                            )}\n                            &nbsp; :{' '}\n                            <ColoredNumberField\n                                record={data[id]}\n                                source=\"total_spent\"\n                                options={{ style: 'currency', currency: 'USD' }}\n                            />\n                        </div>\n                    </CardContent>\n                    {data[id].groups && data[id].groups.length > 0 && (\n                        <CardContent className={classes.cardContent}>\n                            <SegmentsField record={data[id]} />\n                        </CardContent>\n                    )}\n                </Card>\n            ))}\n        </div>\n    );\n};\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nexport default MobileGrid;\n","import React from 'react';\nimport {\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    SearchInput,\n} from 'react-admin';\nimport { useMediaQuery, makeStyles, Theme } from '@material-ui/core';\n\nimport SegmentsField from './SegmentsField';\nimport SegmentInput from './SegmentInput';\nimport CustomerLinkField from './CustomerLinkField';\nimport ColoredNumberField from './ColoredNumberField';\nimport MobileGrid from './MobileGrid';\n\nconst VisitorFilter = (props: any) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <DateInput source=\"last_seen_gte\" />\n        <NullableBooleanInput source=\"has_ordered\" />\n        <NullableBooleanInput source=\"has_newsletter\" defaultValue />\n        <SegmentInput />\n    </Filter>\n);\n\nconst useStyles = makeStyles({\n    nb_commands: { color: 'purple' },\n});\n\nconst VisitorList = (props: any) => {\n    const classes = useStyles();\n    const isXsmall = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.down('xs')\n    );\n    return (\n        <List\n            {...props}\n            filters={<VisitorFilter />}\n            sort={{ field: 'last_seen', order: 'DESC' }}\n            perPage={25}\n        >\n            {isXsmall ? (\n                <MobileGrid />\n            ) : (\n                <Datagrid optimized rowClick=\"edit\">\n                    <CustomerLinkField />\n                    <DateField source=\"last_seen\" type=\"date\" />\n                    <NumberField\n                        source=\"nb_commands\"\n                        label=\"resources.customers.fields.commands\"\n                        className={classes.nb_commands}\n                    />\n                    <ColoredNumberField\n                        source=\"total_spent\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <DateField source=\"latest_purchase\" showTime />\n                    <BooleanField source=\"has_newsletter\" label=\"News.\" />\n                    <SegmentsField />\n                </Datagrid>\n            )}\n        </List>\n    );\n};\n\nexport default VisitorList;\n","import React from 'react';\nimport {\n    Create,\n    DateInput,\n    SimpleForm,\n    TextInput,\n    useTranslate,\n    PasswordInput,\n    required,\n} from 'react-admin';\nimport { Typography, Box } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Styles } from '@material-ui/styles/withStyles';\n\nexport const styles: Styles<Theme, any> = {\n    first_name: { display: 'inline-block' },\n    last_name: { display: 'inline-block', marginLeft: 32 },\n    email: { width: 544 },\n    address: { maxWidth: 544 },\n    zipcode: { display: 'inline-block' },\n    city: { display: 'inline-block', marginLeft: 32 },\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    password: { display: 'inline-block' },\n    confirm_password: { display: 'inline-block', marginLeft: 32 },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport const validatePasswords = ({\n    password,\n    confirm_password,\n}: {\n    password: string;\n    confirm_password: string;\n}) => {\n    const errors = {} as any;\n\n    if (password && confirm_password && password !== confirm_password) {\n        errors.confirm_password = [\n            'resources.customers.errors.password_mismatch',\n        ];\n    }\n\n    return errors;\n};\n\nconst VisitorCreate = (props: any) => {\n    const classes = useStyles();\n\n    return (\n        <Create {...props}>\n            <SimpleForm validate={validatePasswords}>\n                <SectionTitle label=\"resources.customers.fieldGroups.identity\" />\n                <TextInput\n                    autoFocus\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                    validate={requiredValidate}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                    validate={requiredValidate}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                    validate={requiredValidate}\n                />\n                <DateInput source=\"birthday\" />\n                <Separator />\n                <SectionTitle label=\"resources.customers.fieldGroups.address\" />\n                <TextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                    multiline={true}\n                    fullWidth={true}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n                <Separator />\n                <SectionTitle label=\"resources.customers.fieldGroups.password\" />\n                <PasswordInput\n                    source=\"password\"\n                    formClassName={classes.password}\n                />\n                <PasswordInput\n                    source=\"confirm_password\"\n                    formClassName={classes.confirm_password}\n                />\n            </SimpleForm>\n        </Create>\n    );\n};\n\nconst requiredValidate = [required()];\n\nconst SectionTitle = ({ label }: { label: string }) => {\n    const translate = useTranslate();\n\n    return (\n        <Typography variant=\"h6\" gutterBottom>\n            {translate(label)}\n        </Typography>\n    );\n};\n\nconst Separator = () => <Box pt=\"1em\" />;\n\nexport default VisitorCreate;\n","import React from 'react';\nimport { FunctionField } from 'react-admin';\n\nconst render = record => record.basket.length;\n\nconst NbItemsField = props => <FunctionField {...props} render={render} />;\n\nNbItemsField.defaultProps = {\n    label: 'Nb Items',\n    textAlign: 'right',\n};\n\nexport default NbItemsField;\n","import React, { FC } from 'react';\nimport { ReferenceField } from 'react-admin';\n\nimport FullNameField from './FullNameField';\nimport { FieldProps } from '../types';\n\nconst CustomerReferenceField: FC<FieldProps> = props => (\n    <ReferenceField source=\"customer_id\" reference=\"customers\" {...props}>\n        <FullNameField />\n    </ReferenceField>\n);\n\nCustomerReferenceField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerReferenceField;\n","// in src/comments.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    DateField,\n    EditButton,\n    NumberField,\n    TextField,\n    BooleanField,\n    useTranslate,\n} from 'react-admin';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\n\nconst useListStyles = makeStyles(theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: theme.typography.body1,\n    cardContentRow: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        margin: '0.5rem 0',\n    },\n}));\n\nconst MobileGrid = ({ ids, data, basePath }) => {\n    const translate = useTranslate();\n    const classes = useListStyles();\n    return (\n        <div style={{ margin: '1em' }}>\n            {ids.map(id => (\n                <Card key={id} className={classes.card}>\n                    <CardHeader\n                        title={\n                            <div className={classes.cardTitleContent}>\n                                <span>\n                                    {translate('resources.commands.name', 1)}\n                                    :&nbsp;\n                                    <TextField\n                                        record={data[id]}\n                                        source=\"reference\"\n                                    />\n                                </span>\n                                <EditButton\n                                    resource=\"commands\"\n                                    basePath={basePath}\n                                    record={data[id]}\n                                />\n                            </div>\n                        }\n                    />\n                    <CardContent className={classes.cardContent}>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.customers.name', 1)}:&nbsp;\n                            <CustomerReferenceField\n                                record={data[id]}\n                                basePath={basePath}\n                            />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.reviews.fields.date')}:&nbsp;\n                            <DateField\n                                record={data[id]}\n                                source=\"date\"\n                                showTime\n                            />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate(\n                                'resources.commands.fields.basket.total'\n                            )}\n                            :&nbsp;\n                            <NumberField\n                                record={data[id]}\n                                source=\"total\"\n                                options={{ style: 'currency', currency: 'USD' }}\n                                className={classes.total}\n                            />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.commands.fields.status')}\n                            :&nbsp;\n                            <TextField source=\"status\" record={data[id]} />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.commands.fields.returned')}\n                            :&nbsp;\n                            <BooleanField record={data[id]} source=\"returned\" />\n                        </span>\n                    </CardContent>\n                </Card>\n            ))}\n        </div>\n    );\n};\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nexport default MobileGrid;\n","import React, { Fragment } from 'react';\nimport {\n    AutocompleteInput,\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceInput,\n    SearchInput,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport {\n    makeStyles,\n    useMediaQuery,\n    Divider,\n    Tabs,\n    Tab,\n} from '@material-ui/core';\n\nimport NbItemsField from './NbItemsField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport MobileGrid from './MobileGrid';\n\nconst OrderFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    choice.first_name && choice.last_name\n                        ? `${choice.first_name} ${choice.last_name}`\n                        : ''\n                }\n            />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n        <TextInput source=\"total_gte\" />\n        <NullableBooleanInput source=\"returned\" />\n    </Filter>\n);\n\nconst useDatagridStyles = makeStyles({\n    total: { fontWeight: 'bold' },\n});\n\nclass TabbedDatagrid extends React.Component {\n    tabs = [\n        { id: 'ordered', name: 'ordered' },\n        { id: 'delivered', name: 'delivered' },\n        { id: 'cancelled', name: 'cancelled' },\n    ];\n\n    state = { ordered: [], delivered: [], cancelled: [] };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.ids !== state[props.filterValues.status]) {\n            return { ...state, [props.filterValues.status]: props.ids };\n        }\n        return null;\n    }\n\n    handleChange = (event, value) => {\n        const { filterValues, setFilters } = this.props;\n        setFilters({ ...filterValues, status: value });\n    };\n\n    render() {\n        const { isXSmall, classes, filterValues, ...props } = this.props;\n\n        return (\n            <Fragment>\n                <Tabs\n                    variant=\"fullWidth\"\n                    centered\n                    value={filterValues.status}\n                    indicatorColor=\"primary\"\n                    onChange={this.handleChange}\n                >\n                    {this.tabs.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.id}\n                        />\n                    ))}\n                </Tabs>\n                <Divider />\n                {isXSmall ? (\n                    <MobileGrid\n                        {...props}\n                        ids={this.state[filterValues.status]}\n                    />\n                ) : (\n                    <div>\n                        {filterValues.status === 'ordered' && (\n                            <Datagrid\n                                {...props}\n                                ids={this.state.ordered}\n                                optimized\n                                rowClick=\"edit\"\n                            >\n                                <DateField source=\"date\" showTime />\n                                <TextField source=\"reference\" />\n                                <CustomerReferenceField />\n                                <NbItemsField />\n                                <NumberField\n                                    source=\"total\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                    className={classes.total}\n                                />\n                            </Datagrid>\n                        )}\n                        {filterValues.status === 'delivered' && (\n                            <Datagrid {...props} ids={this.state.delivered}>\n                                <DateField source=\"date\" showTime />\n                                <TextField source=\"reference\" />\n                                <CustomerReferenceField />\n                                <NbItemsField />\n                                <NumberField\n                                    source=\"total\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                    className={classes.total}\n                                />\n                                <BooleanField source=\"returned\" />\n                                <EditButton />\n                            </Datagrid>\n                        )}\n                        {filterValues.status === 'cancelled' && (\n                            <Datagrid {...props} ids={this.state.cancelled}>\n                                <DateField source=\"date\" showTime />\n                                <TextField source=\"reference\" />\n                                <CustomerReferenceField />\n                                <NbItemsField />\n                                <NumberField\n                                    source=\"total\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                    className={classes.total}\n                                />\n                                <BooleanField source=\"returned\" />\n                                <EditButton />\n                            </Datagrid>\n                        )}\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nconst StyledTabbedDatagrid = props => {\n    const classes = useDatagridStyles();\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n    return <TabbedDatagrid classes={classes} isXSmall={isXSmall} {...props} />;\n};\n\nconst OrderList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filterDefaultValues={{ status: 'ordered' }}\n        sort={{ field: 'date', order: 'DESC' }}\n        perPage={25}\n        filters={<OrderFilter />}\n    >\n        <StyledTabbedDatagrid />\n    </List>\n);\n\nexport default OrderList;\n","import React, { FC } from 'react';\nimport classnames from 'classnames';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, useTranslate, useQueryWithStore } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldProps, AppState, Order, Product } from '../types';\n\nconst useStyles = makeStyles({\n    container: { minWidth: '35em', marginLeft: '1em' },\n    rightAlignedCell: { textAlign: 'right' },\n    boldCell: { fontWeight: 'bold' },\n});\n\nconst Basket: FC<FieldProps<Order>> = ({ record }) => {\n    const classes = useStyles();\n    const translate = useTranslate();\n\n    const { loaded, data: products } = useQueryWithStore(\n        {\n            type: 'getMany',\n            resource: 'products',\n            payload: {\n                ids: record ? record.basket.map(item => item.product_id) : [],\n            },\n        },\n        {},\n        (state: AppState) => {\n            const productIds = record\n                ? record.basket.map(item => item.product_id)\n                : [];\n\n            return productIds\n                .map<Product>(\n                    (productId: string) =>\n                        state.admin.resources.products.data[\n                            productId\n                        ] as Product\n                )\n                .filter(r => typeof r !== 'undefined')\n                .reduce(\n                    (prev, next) => {\n                        prev[next.id] = next;\n                        return prev;\n                    },\n                    {} as { [key: string]: Product }\n                );\n        }\n    );\n\n    if (!loaded || !record) return null;\n\n    return (\n        <Paper className={classes.container} elevation={2}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            {translate(\n                                'resources.commands.fields.basket.reference'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {translate(\n                                'resources.commands.fields.basket.unit_price'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {translate(\n                                'resources.commands.fields.basket.quantity'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {translate(\n                                'resources.commands.fields.basket.total'\n                            )}\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {record.basket.map(\n                        (item: any) =>\n                            products[item.product_id] && (\n                                <TableRow key={item.product_id}>\n                                    <TableCell>\n                                        <Link\n                                            to={`/products/${item.product_id}`}\n                                        >\n                                            {\n                                                products[item.product_id]\n                                                    .reference\n                                            }\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.rightAlignedCell}\n                                    >\n                                        {products[\n                                            item.product_id\n                                        ].price.toLocaleString(undefined, {\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        })}\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.rightAlignedCell}\n                                    >\n                                        {item.quantity}\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.rightAlignedCell}\n                                    >\n                                        {(\n                                            products[item.product_id].price *\n                                            item.quantity\n                                        ).toLocaleString(undefined, {\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        })}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                    )}\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>\n                            {translate('resources.commands.fields.basket.sum')}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {record.total_ex_taxes.toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>\n                            {translate(\n                                'resources.commands.fields.basket.delivery'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {record.delivery_fees.toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>\n                            {translate(\n                                'resources.commands.fields.basket.tax_rate'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {record.tax_rate.toLocaleString(undefined, {\n                                style: 'percent',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell className={classes.boldCell}>\n                            {translate(\n                                'resources.commands.fields.basket.total'\n                            )}\n                        </TableCell>\n                        <TableCell\n                            className={classnames(\n                                classes.boldCell,\n                                classes.rightAlignedCell\n                            )}\n                        >\n                            {record.total.toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\n\nexport default Basket;\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    BooleanInput,\n    DateInput,\n    Edit,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    useTranslate,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Basket from './Basket';\n\nconst OrderTitle = ({ record }) => {\n    const translate = useTranslate();\n    return (\n        <span>\n            {translate('resources.commands.title', {\n                reference: record.reference,\n            })}\n        </span>\n    );\n};\n\nconst useEditStyles = makeStyles({\n    root: { alignItems: 'flex-start' },\n});\n\nconst OrderEdit = props => {\n    const classes = useEditStyles();\n    return (\n        <Edit\n            title={<OrderTitle />}\n            aside={<Basket />}\n            classes={classes}\n            {...props}\n        >\n            <SimpleForm>\n                <DateInput source=\"date\" />\n                <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                    <AutocompleteInput\n                        optionText={choice =>\n                            `${choice.first_name} ${choice.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n                <SelectInput\n                    source=\"status\"\n                    choices={[\n                        { id: 'delivered', name: 'delivered' },\n                        { id: 'ordered', name: 'ordered' },\n                        { id: 'cancelled', name: 'cancelled' },\n                        {\n                            id: 'unknown',\n                            name: 'unknown',\n                            disabled: true,\n                        },\n                    ]}\n                />\n                <BooleanInput source=\"returned\" />\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nexport default OrderEdit;\n","import OrderIcon from '@material-ui/icons/AttachMoney';\n\nimport OrderList from './OrderList';\nimport OrderEdit from './OrderEdit';\n\nexport default {\n    list: OrderList,\n    edit: OrderEdit,\n    icon: OrderIcon,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport {\n    Button,\n    useUpdateMany,\n    useNotify,\n    useRedirect,\n    useUnselectAll,\n    CRUD_UPDATE_MANY,\n} from 'react-admin';\n\nconst BulkAcceptButton = ({ selectedIds }) => {\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n    const unselectAll = useUnselectAll('reviews');\n\n    const [approve, { loading }] = useUpdateMany(\n        'reviews',\n        selectedIds,\n        { status: 'accepted' },\n        {\n            action: CRUD_UPDATE_MANY,\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.approved_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n                unselectAll();\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.approved_error',\n                    'warning'\n                );\n            },\n        }\n    );\n\n    return (\n        <Button\n            label=\"resources.reviews.action.accept\"\n            onClick={approve}\n            disabled={loading}\n        >\n            <ThumbUp />\n        </Button>\n    );\n};\n\nBulkAcceptButton.propTypes = {\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default BulkAcceptButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport {\n    Button,\n    useUpdateMany,\n    useNotify,\n    useRedirect,\n    useUnselectAll,\n    CRUD_UPDATE_MANY,\n} from 'react-admin';\n\nconst BulkRejectButton = ({ selectedIds }) => {\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n    const unselectAll = useUnselectAll('reviews');\n\n    const [reject, { loading }] = useUpdateMany(\n        'reviews',\n        selectedIds,\n        { status: 'rejected' },\n        {\n            action: CRUD_UPDATE_MANY,\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.approved_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n                unselectAll();\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.approved_error',\n                    'warning'\n                );\n            },\n        }\n    );\n\n    return (\n        <Button\n            label=\"resources.reviews.action.reject\"\n            onClick={reject}\n            disabled={loading}\n        >\n            <ThumbDown />\n        </Button>\n    );\n};\n\nBulkRejectButton.propTypes = {\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default BulkRejectButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport {\n    linkToRecord,\n    ReferenceField,\n    FunctionField,\n    TextField,\n} from 'react-admin';\n\nimport AvatarField from '../visitors/AvatarField';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n    inline: {\n        display: 'inline',\n    },\n});\n\nconst ReviewMobileList = ({ basePath, data, ids, loading, total }) => {\n    const classes = useStyles();\n    return (\n        (loading || total > 0) && (\n            <List className={classes.root}>\n                {ids.map(id => (\n                    <Link\n                        to={linkToRecord(basePath, id)}\n                        className={classes.link}\n                        key={id}\n                    >\n                        <ListItem button>\n                            <ListItemAvatar>\n                                <ReferenceField\n                                    record={data[id]}\n                                    source=\"customer_id\"\n                                    reference=\"customers\"\n                                    basePath={basePath}\n                                    linkType={false}\n                                >\n                                    <AvatarField size={40} />\n                                </ReferenceField>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Fragment>\n                                        <ReferenceField\n                                            record={data[id]}\n                                            source=\"customer_id\"\n                                            reference=\"customers\"\n                                            basePath={basePath}\n                                            linkType={false}\n                                        >\n                                            <FunctionField\n                                                render={record =>\n                                                    `${record.first_name} ${\n                                                        record.last_name\n                                                    }`\n                                                }\n                                                variant=\"subtitle1\"\n                                                className={classes.inline}\n                                            />\n                                        </ReferenceField>{' '}\n                                        on{' '}\n                                        <ReferenceField\n                                            record={data[id]}\n                                            source=\"product_id\"\n                                            reference=\"products\"\n                                            basePath={basePath}\n                                            linkType={false}\n                                        >\n                                            <TextField\n                                                source=\"reference\"\n                                                variant=\"subtitle1\"\n                                                className={classes.inline}\n                                            />\n                                        </ReferenceField>\n                                    </Fragment>\n                                }\n                                secondary={data[id].comment}\n                                secondaryTypographyProps={{ noWrap: true }}\n                            />\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        )\n    );\n};\n\nReviewMobileList.propTypes = {\n    basePath: PropTypes.string,\n    data: PropTypes.object,\n    hasBulkActions: PropTypes.bool.isRequired,\n    ids: PropTypes.array,\n    leftAvatar: PropTypes.func,\n    leftIcon: PropTypes.func,\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n        .isRequired,\n    onToggleItem: PropTypes.func,\n    primaryText: PropTypes.func,\n    rightAvatar: PropTypes.func,\n    rightIcon: PropTypes.func,\n    secondaryText: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    tertiaryText: PropTypes.func,\n};\n\nReviewMobileList.defaultProps = {\n    linkType: 'edit',\n    hasBulkActions: false,\n    selectedIds: [],\n};\n\nexport default ReviewMobileList;\n","import React from 'react';\nimport { ReferenceField, TextField } from 'react-admin';\n\nconst ProductReferenceField = props => (\n    <ReferenceField\n        label=\"Product\"\n        source=\"product_id\"\n        reference=\"products\"\n        {...props}\n    >\n        <TextField source=\"reference\" />\n    </ReferenceField>\n);\n\nProductReferenceField.defaultProps = {\n    source: 'product_id',\n    addLabel: true,\n};\n\nexport default ProductReferenceField;\n","import React, { FC } from 'react';\nimport Icon from '@material-ui/icons/Stars';\nimport { makeStyles } from '@material-ui/core';\n\nimport { FieldProps } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        opacity: 0.87,\n        whiteSpace: 'nowrap',\n    },\n    large: {\n        width: 20,\n        height: 20,\n    },\n    small: {\n        width: 15,\n        height: 15,\n    },\n});\n\ninterface OwnProps {\n    size: 'large' | 'small';\n}\n\nconst StarRatingField: FC<FieldProps & OwnProps> = ({\n    record,\n    size = 'large',\n}) => {\n    const classes = useStyles();\n    return record ? (\n        <span>\n            {Array(record.rating)\n                .fill(true)\n                .map((_, i) => (\n                    <Icon\n                        key={i}\n                        className={\n                            size === 'large' ? classes.large : classes.small\n                        }\n                    />\n                ))}\n        </span>\n    ) : null;\n};\n\nStarRatingField.defaultProps = {\n    label: 'resources.reviews.fields.rating',\n    source: 'rating',\n    addLabel: true,\n};\n\nexport default StarRatingField;\n","import green from '@material-ui/core/colors/green';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\nconst rowStyle = (selectedRow, theme) => (record, index, defaultStyle = {}) => {\n    let style = defaultStyle;\n    if (selectedRow === record.id) {\n        style = {\n            ...style,\n            backgroundColor: theme.palette.action.selected,\n        };\n    }\n    if (record.status === 'accepted')\n        return {\n            ...style,\n            borderLeftColor: green[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'pending')\n        return {\n            ...style,\n            borderLeftColor: orange[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'rejected')\n        return {\n            ...style,\n            borderLeftColor: red[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    return style;\n};\n\nexport default rowStyle;\n","import React from 'react';\nimport { Datagrid, DateField, TextField } from 'react-admin';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\n\nimport rowStyle from './rowStyle';\n\nconst useListStyles = makeStyles({\n    headerRow: {\n        borderLeftColor: 'white',\n        borderLeftWidth: 5,\n        borderLeftStyle: 'solid',\n    },\n    headerCell: {\n        padding: '6px 8px 6px 8px',\n    },\n    rowCell: {\n        padding: '6px 8px 6px 8px',\n    },\n    comment: {\n        maxWidth: '18em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n});\n\nconst ReviewListDesktop = ({ selectedRow, ...props }) => {\n    const classes = useListStyles();\n    const theme = useTheme();\n    return (\n        <Datagrid\n            rowClick=\"edit\"\n            rowStyle={rowStyle(selectedRow, theme)}\n            classes={{\n                headerRow: classes.headerRow,\n                headerCell: classes.headerCell,\n                rowCell: classes.rowCell,\n            }}\n            optimized\n            {...props}\n        >\n            <DateField source=\"date\" />\n            <CustomerReferenceField link={false} />\n            <ProductReferenceField link={false} />\n            <StarRatingField size=\"small\" />\n            <TextField source=\"comment\" cellClassName={classes.comment} />\n            <TextField source=\"status\" />\n        </Datagrid>\n    );\n};\n\nexport default ReviewListDesktop;\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    DateInput,\n    Filter,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useFilterStyles = makeStyles({\n    status: { width: 150 },\n});\n\nconst ReviewFilter = props => {\n    const classes = useFilterStyles();\n    return (\n        <Filter {...props}>\n            <SearchInput source=\"q\" alwaysOn />\n            <SelectInput\n                source=\"status\"\n                choices={[\n                    { id: 'accepted', name: 'Accepted' },\n                    { id: 'pending', name: 'Pending' },\n                    { id: 'rejected', name: 'Rejected' },\n                ]}\n                className={classes.status}\n            />\n            <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                <AutocompleteInput\n                    optionText={choice =>\n                        `${choice.first_name} ${choice.last_name}`\n                    }\n                />\n            </ReferenceInput>\n            <ReferenceInput source=\"product_id\" reference=\"products\">\n                <AutocompleteInput optionText=\"reference\" />\n            </ReferenceInput>\n            <DateInput source=\"date_gte\" />\n            <DateInput source=\"date_lte\" />\n        </Filter>\n    );\n};\n\nexport default ReviewFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport { useTranslate, useUpdate, useNotify, useRedirect } from 'react-admin';\n\n/**\n * This custom button demonstrate using useUpdate to update data\n */\nconst AcceptButton = ({ record }) => {\n    const translate = useTranslate();\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n\n    const [approve, { loading }] = useUpdate(\n        'reviews',\n        record.id,\n        { status: 'accepted' },\n        record,\n        {\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.approved_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.approved_error',\n                    'warning'\n                );\n            },\n        }\n    );\n    return record && record.status === 'pending' ? (\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={approve}\n            disabled={loading}\n        >\n            <ThumbUp\n                color=\"primary\"\n                style={{ paddingRight: '0.5em', color: 'green' }}\n            />\n            {translate('resources.reviews.action.accept')}\n        </Button>\n    ) : (\n        <span />\n    );\n};\n\nAcceptButton.propTypes = {\n    record: PropTypes.object,\n};\n\nexport default AcceptButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport { useTranslate, useUpdate, useNotify, useRedirect } from 'react-admin';\n\n/**\n * This custom button demonstrate using a custom action to update data\n */\nconst RejectButton = ({ record }) => {\n    const translate = useTranslate();\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n\n    const [reject, { loading }] = useUpdate(\n        'reviews',\n        record.id,\n        { status: 'rejected' },\n        record,\n        {\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.rejected_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.rejected_error',\n                    'warning'\n                );\n            },\n        }\n    );\n\n    return record && record.status === 'pending' ? (\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={reject}\n            disabled={loading}\n        >\n            <ThumbDown\n                color=\"primary\"\n                style={{ paddingRight: '0.5em', color: 'red' }}\n            />\n            {translate('resources.reviews.action.reject')}\n        </Button>\n    ) : (\n        <span />\n    );\n};\n\nRejectButton.propTypes = {\n    record: PropTypes.object,\n};\n\nexport default RejectButton;\n","import React, { Fragment } from 'react';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SaveButton, DeleteButton } from 'react-admin';\nimport AcceptButton from './AcceptButton';\nimport RejectButton from './RejectButton';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n\nconst ReviewEditToolbar = ({\n    basePath,\n    handleSubmitWithRedirect,\n    invalid,\n    record,\n    resource,\n    saving,\n}) => {\n    const classes = useStyles();\n    return (\n        <MuiToolbar className={classes.root}>\n            {record.status === 'pending' ? (\n                <Fragment>\n                    <AcceptButton record={record} />\n                    <RejectButton record={record} />\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <SaveButton\n                        handleSubmitWithRedirect={handleSubmitWithRedirect}\n                        invalid={invalid}\n                        saving={saving}\n                        redirect=\"list\"\n                        submitOnEnter={true}\n                    />\n                    <DeleteButton\n                        basePath={basePath}\n                        record={record}\n                        resource={resource}\n                    />\n                </Fragment>\n            )}\n        </MuiToolbar>\n    );\n};\n\nexport default ReviewEditToolbar;\n","import React from 'react';\nimport {\n    useEditController,\n    useTranslate,\n    TextInput,\n    SimpleForm,\n    DateField,\n} from 'react-admin';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport ReviewEditToolbar from './ReviewEditToolbar';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: 40,\n    },\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        margin: '1em',\n    },\n    form: {\n        [theme.breakpoints.up('xs')]: {\n            width: 400,\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: '100vw',\n            marginTop: -30,\n        },\n    },\n    inlineField: {\n        display: 'inline-block',\n        width: '50%',\n    },\n}));\n\nconst ReviewEdit = ({ onCancel, ...props }) => {\n    const classes = useStyles();\n    const controllerProps = useEditController(props);\n    const translate = useTranslate();\n    if (!controllerProps.record) {\n        return null;\n    }\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant=\"h6\">\n                    {translate('resources.reviews.detail')}\n                </Typography>\n                <IconButton onClick={onCancel}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <SimpleForm\n                className={classes.form}\n                basePath={controllerProps.basePath}\n                record={controllerProps.record}\n                save={controllerProps.save}\n                version={controllerProps.version}\n                redirect=\"list\"\n                resource=\"reviews\"\n                toolbar={<ReviewEditToolbar />}\n            >\n                <CustomerReferenceField formClassName={classes.inlineField} />\n\n                <ProductReferenceField formClassName={classes.inlineField} />\n                <DateField source=\"date\" formClassName={classes.inlineField} />\n                <StarRatingField formClassName={classes.inlineField} />\n                <TextInput source=\"comment\" rowsMax={15} multiline fullWidth />\n            </SimpleForm>\n        </div>\n    );\n};\n\nexport default ReviewEdit;\n","import React, { Fragment, useCallback } from 'react';\nimport classnames from 'classnames';\nimport { BulkDeleteButton, List } from 'react-admin';\nimport { Route, useHistory } from 'react-router-dom';\nimport { Drawer, useMediaQuery, makeStyles } from '@material-ui/core';\nimport BulkAcceptButton from './BulkAcceptButton';\nimport BulkRejectButton from './BulkRejectButton';\nimport ReviewListMobile from './ReviewListMobile';\nimport ReviewListDesktop from './ReviewListDesktop';\nimport ReviewFilter from './ReviewFilter';\nimport ReviewEdit from './ReviewEdit';\n\nconst ReviewsBulkActionButtons = props => (\n    <Fragment>\n        <BulkAcceptButton {...props} />\n        <BulkRejectButton {...props} />\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    list: {\n        flexGrow: 1,\n        transition: theme.transitions.create(['all'], {\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n    listWithDrawer: {\n        marginRight: 400,\n    },\n    drawerPaper: {\n        zIndex: 100,\n    },\n}));\n\nconst ReviewList = props => {\n    const classes = useStyles();\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n    const history = useHistory();\n\n    const handleClose = useCallback(() => {\n        history.push('/reviews');\n    }, [history]);\n\n    return (\n        <div className={classes.root}>\n            <Route path=\"/reviews/:id\">\n                {({ match }) => {\n                    const isMatch = !!(\n                        match &&\n                        match.params &&\n                        match.params.id !== 'create'\n                    );\n\n                    return (\n                        <Fragment>\n                            <List\n                                {...props}\n                                className={classnames(classes.list, {\n                                    [classes.listWithDrawer]: isMatch,\n                                })}\n                                bulkActionButtons={<ReviewsBulkActionButtons />}\n                                filters={<ReviewFilter />}\n                                perPage={25}\n                                sort={{ field: 'date', order: 'DESC' }}\n                            >\n                                {isXSmall ? (\n                                    <ReviewListMobile />\n                                ) : (\n                                    <ReviewListDesktop\n                                        selectedRow={\n                                            isMatch &&\n                                            parseInt(match.params.id, 10)\n                                        }\n                                    />\n                                )}\n                            </List>\n                            <Drawer\n                                variant=\"persistent\"\n                                open={isMatch}\n                                anchor=\"right\"\n                                onClose={handleClose}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                            >\n                                {/* To avoid any errors if the route does not match, we don't render at all the component in this case */}\n                                {isMatch ? (\n                                    <ReviewEdit\n                                        id={match.params.id}\n                                        onCancel={handleClose}\n                                        {...props}\n                                    />\n                                ) : null}\n                            </Drawer>\n                        </Fragment>\n                    );\n                }}\n            </Route>\n        </div>\n    );\n};\n\nexport default ReviewList;\n","import ReviewIcon from '@material-ui/icons/Comment';\nimport ReviewList from './ReviewList';\n\nexport default {\n    icon: ReviewIcon,\n    list: ReviewList,\n};\n","import React from 'react';\nimport {\n    NumberField,\n    TextField,\n    DateField,\n    useTranslate,\n    useGetList,\n    linkToRecord,\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nimport {\n    Tooltip,\n    Typography,\n    Card,\n    CardContent,\n    CardHeader,\n    Avatar,\n    IconButton,\n    Box,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport ContentCreate from '@material-ui/icons/Create';\nimport order from '../orders';\nimport review from '../reviews';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\n\nconst useAsideStyles = makeStyles(theme => ({\n    root: {\n        width: 400,\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nconst Aside = ({ record, basePath }) => {\n    const classes = useAsideStyles();\n    return (\n        <div className={classes.root}>\n            {record && <EventList record={record} basePath={basePath} />}\n        </div>\n    );\n};\n\nAside.propTypes = {\n    record: PropTypes.any,\n    basePath: PropTypes.string,\n};\n\nconst EventList = ({ record, basePath }) => {\n    const translate = useTranslate();\n    const { data: orders, ids: orderIds } = useGetList(\n        'commands',\n        { page: 1, perPage: 100 },\n        { field: 'date', order: 'DESC' },\n        { customer_id: record && record.id }\n    );\n    const { data: reviews, ids: reviewIds } = useGetList(\n        'reviews',\n        { page: 1, perPage: 100 },\n        { field: 'date', order: 'DESC' },\n        { customer_id: record && record.id }\n    );\n    const events = mixOrdersAndReviews(orders, orderIds, reviews, reviewIds);\n\n    return (\n        <>\n            <Box m=\"0 0 1em 1em\">\n                <Card>\n                    <CardContent>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {translate(\n                                'resources.customers.fieldGroups.history'\n                            )}\n                        </Typography>\n                        <Box display=\"flex\">\n                            <Box flexGrow={1}>\n                                <Box display=\"flex\" mb=\"1em\">\n                                    <Box mr=\"1em\">\n                                        <AccessTimeIcon\n                                            fontSize=\"small\"\n                                            color=\"disabled\"\n                                        />\n                                    </Box>\n                                    <Box flexGrow={1}>\n                                        <Typography>\n                                            {translate(\n                                                'resources.customers.fields.first_seen'\n                                            )}\n                                        </Typography>\n                                        <DateField\n                                            record={record}\n                                            source=\"first_seen\"\n                                        />\n                                    </Box>\n                                </Box>\n                                {orderIds.length > 0 && (\n                                    <Box display=\"flex\">\n                                        <Box mr=\"1em\">\n                                            <order.icon\n                                                fontSize=\"small\"\n                                                color=\"disabled\"\n                                            />\n                                        </Box>\n                                        <Box flexGrow={1}>\n                                            <Typography>\n                                                {translate(\n                                                    'resources.commands.amount',\n                                                    {\n                                                        smart_count:\n                                                            orderIds.length,\n                                                    }\n                                                )}\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box flexGrow={1}>\n                                <Box display=\"flex\" mb=\"1em\">\n                                    <Box mr=\"1em\">\n                                        <AccessTimeIcon\n                                            fontSize=\"small\"\n                                            color=\"disabled\"\n                                        />\n                                    </Box>\n                                    <Box flexGrow={1}>\n                                        <Typography>\n                                            {translate(\n                                                'resources.customers.fields.last_seen'\n                                            )}\n                                        </Typography>\n                                        <DateField\n                                            record={record}\n                                            source=\"last_seen\"\n                                        />\n                                    </Box>\n                                </Box>\n                                {reviewIds.length > 0 && (\n                                    <Box display=\"flex\">\n                                        <Box mr=\"1em\">\n                                            <review.icon\n                                                fontSize=\"small\"\n                                                color=\"disabled\"\n                                            />\n                                        </Box>\n                                        <Box flexGrow={1}>\n                                            <Typography>\n                                                {translate(\n                                                    'resources.reviews.amount',\n                                                    {\n                                                        smart_count:\n                                                            reviewIds.length,\n                                                    }\n                                                )}\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n\n            {events.map(event =>\n                event.type === 'order' ? (\n                    <Order\n                        record={event.data}\n                        key={`event_${event.data.id}`}\n                        basePath={basePath}\n                    />\n                ) : (\n                    <Review\n                        record={event.data}\n                        key={`review_${event.data.id}`}\n                        basePath={basePath}\n                    />\n                )\n            )}\n        </>\n    );\n};\n\nconst mixOrdersAndReviews = (orders, orderIds, reviews, reviewIds) => {\n    const eventsFromOrders = orderIds.map(id => ({\n        type: 'order',\n        date: orders[id].date,\n        data: orders[id],\n    }));\n    const eventsFromReviews = reviewIds.map(id => ({\n        type: 'review',\n        date: reviews[id].date,\n        data: reviews[id],\n    }));\n    const events = eventsFromOrders.concat(eventsFromReviews);\n    events.sort((e1, e2) => new Date(e1.date) - new Date(e2.date));\n    return events;\n};\n\nconst useEventStyles = makeStyles({\n    card: {\n        margin: '0 0 1em 1em',\n    },\n    cardHeader: {\n        alignItems: 'flex-start',\n    },\n    clamp: {\n        display: '-webkit-box',\n        '-webkit-line-clamp': 3,\n        '-webkit-box-orient': 'vertical',\n        overflow: 'hidden',\n    },\n});\n\nconst Order = ({ record, basePath }) => {\n    const translate = useTranslate();\n    const classes = useEventStyles();\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                avatar={\n                    <Avatar\n                        aria-label={translate('resources.commands.name', {\n                            smart_count: 1,\n                        })}\n                        className={classes.avatar}\n                    >\n                        <order.icon />\n                    </Avatar>\n                }\n                action={<EditButton record={record} basePath=\"/commands\" />}\n                title={`${translate('resources.commands.name', {\n                    smart_count: 1,\n                })} #${record.reference}`}\n                subheader={\n                    <>\n                        <Typography variant=\"body2\">{record.date}</Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            {translate('resources.commands.nb_items', {\n                                smart_count: record.basket.length,\n                                _: '1 item |||| %{smart_count} items',\n                            })}\n                            &nbsp;-&nbsp;\n                            <NumberField\n                                source=\"total\"\n                                options={{\n                                    style: 'currency',\n                                    currency: 'USD',\n                                }}\n                                record={record}\n                                basePath={basePath}\n                            />\n                            &nbsp;-&nbsp;\n                            <TextField\n                                source=\"status\"\n                                record={record}\n                                basePath={basePath}\n                            />\n                        </Typography>\n                    </>\n                }\n            />\n        </Card>\n    );\n};\n\nconst Review = ({ record, basePath }) => {\n    const translate = useTranslate();\n    const classes = useEventStyles();\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                avatar={\n                    <Avatar\n                        aria-label={translate('resources.reviews.name', {\n                            smart_count: 1,\n                        })}\n                        className={classes.avatar}\n                    >\n                        <review.icon />\n                    </Avatar>\n                }\n                action={<EditButton record={record} basePath=\"/reviews\" />}\n                title={\n                    <span>\n                        {translate('resources.reviews.relative_to_poster')}{' '}\n                        <ProductReferenceField\n                            resource=\"reviews\"\n                            record={record}\n                            basePath={basePath}\n                        />\n                    </span>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"body2\">{record.date}</Typography>\n                        <StarRatingField record={record} />\n                        <Typography variant=\"inherit\" className={classes.clamp}>\n                            {record.comment}\n                        </Typography>\n                    </>\n                }\n            />\n        </Card>\n    );\n};\n\nconst EditButton = ({ record, basePath }) => {\n    const translate = useTranslate();\n    return (\n        <Tooltip title={translate('ra.action.edit')}>\n            <IconButton\n                aria-label={translate('ra.action.edit')}\n                component={Link}\n                to={linkToRecord(basePath, record && record.id)}\n            >\n                <ContentCreate />\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default Aside;\n","import React, { FC } from 'react';\nimport { useTranslate, SelectArrayInput } from 'react-admin';\nimport { InputProps } from 'ra-core';\n\nimport segments from '../segments/data';\n\ninterface Props extends Omit<InputProps, 'source'> {\n    source?: string;\n}\n\nconst SegmentsInput: FC<Props> = ({ addField, ...rest }) => {\n    const translate = useTranslate();\n    return (\n        <SelectArrayInput\n            {...rest}\n            choices={segments.map(segment => ({\n                id: segment.id,\n                name: translate(segment.name),\n            }))}\n        />\n    );\n};\n\nSegmentsInput.defaultProps = {\n    addField: true,\n    source: 'groups',\n    resource: 'customers',\n};\n\nexport default SegmentsInput;\n","import React, { FC } from 'react';\nimport {\n    DateInput,\n    Edit,\n    NullableBooleanInput,\n    TextInput,\n    PasswordInput,\n    Toolbar,\n    useTranslate,\n    FormWithRedirect,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport Aside from './Aside';\nimport FullNameField from './FullNameField';\nimport SegmentsInput from './SegmentsInput';\nimport { validatePasswords } from './VisitorCreate';\nimport { Customer, FieldProps } from '../types';\n\nconst VisitorEdit = (props: any) => {\n    return (\n        <Edit\n            title={<VisitorTitle />}\n            aside={<Aside />}\n            component=\"div\"\n            {...props}\n        >\n            <VisitorForm />\n        </Edit>\n    );\n};\n\nconst VisitorTitle: FC<FieldProps<Customer>> = ({ record }) =>\n    record ? <FullNameField record={record} size=\"32\" /> : null;\n\nconst VisitorForm = (props: any) => {\n    const translate = useTranslate();\n\n    return (\n        <FormWithRedirect\n            {...props}\n            validate={validatePasswords}\n            render={(formProps: any) => (\n                <Card>\n                    <form>\n                        <CardContent>\n                            <Box display={{ md: 'block', lg: 'flex' }}>\n                                <Box flex={2} mr={{ md: 0, lg: '1em' }}>\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.identity'\n                                        )}\n                                    </Typography>\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"first_name\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={1}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"last_name\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                    </Box>\n                                    <TextInput\n                                        type=\"email\"\n                                        source=\"email\"\n                                        resource=\"customers\"\n                                        validation={{ email: true }}\n                                        fullWidth\n                                    />\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <DateInput\n                                                source=\"birthday\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={2}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        />\n                                    </Box>\n\n                                    <Box mt=\"1em\" />\n\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.address'\n                                        )}\n                                    </Typography>\n                                    <TextInput\n                                        source=\"address\"\n                                        resource=\"customers\"\n                                        multiline\n                                        fullWidth\n                                    />\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"zipcode\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={2}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"city\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                    </Box>\n\n                                    <Box mt=\"1em\" />\n\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.change_password'\n                                        )}\n                                    </Typography>\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <PasswordInput\n                                                source=\"password\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={1}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <PasswordInput\n                                                source=\"confirm_password\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                    </Box>\n                                </Box>\n                                <Box\n                                    flex={1}\n                                    ml={{ xs: 0, lg: '1em' }}\n                                    mt={{ xs: '1em', lg: 0 }}\n                                >\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.stats'\n                                        )}\n                                    </Typography>\n                                    <div>\n                                        <SegmentsInput fullWidth />\n                                    </div>\n                                    <div>\n                                        <NullableBooleanInput\n                                            source=\"has_newsletter\"\n                                            resource=\"customers\"\n                                        />\n                                    </div>\n                                </Box>\n                            </Box>\n                        </CardContent>\n                        <Toolbar\n                            record={formProps.record}\n                            basePath={formProps.basePath}\n                            undoable={true}\n                            invalid={formProps.invalid}\n                            handleSubmit={formProps.handleSubmit}\n                            saving={formProps.saving}\n                            resource=\"customers\"\n                        />\n                    </form>\n                </Card>\n            )}\n        />\n    );\n};\n\nexport default VisitorEdit;\n","import VisitorIcon from '@material-ui/icons/People';\n\nimport VisitorList from './VisitorList';\nimport VisitorCreate from './VisitorCreate';\nimport VisitorEdit from './VisitorEdit';\n\nexport default {\n    list: VisitorList,\n    create: VisitorCreate,\n    edit: VisitorEdit,\n    icon: VisitorIcon,\n};\n","import React, { FC } from 'react';\nimport { FieldProps, Customer } from '../types';\n\nconst AddressField: FC<FieldProps<Customer>> = ({ record }) =>\n    record ? (\n        <span>\n            {record.address}, {record.city} {record.zipcode}\n        </span>\n    ) : null;\n\nexport default AddressField;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useShowController, ReferenceField, TextField } from 'react-admin';\n\nimport Basket from '../orders/Basket';\nimport { FieldProps, Customer } from '../types';\n\nconst CustomerField: FC<FieldProps<Customer>> = ({ record }) =>\n    record ? (\n        <Typography>\n            {record.first_name} {record.last_name}\n            <br />\n            {record.address}\n            <br />\n            {record.city}, {record.zipcode}\n        </Typography>\n    ) : null;\n\nconst InvoiceShow = (props: any) => {\n    const { record } = useShowController(props);\n    const classes = useStyles();\n\n    if (!record) return null;\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Posters Galore\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" gutterBottom align=\"right\">\n                            Invoice {record.id}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} container alignContent=\"flex-end\">\n                        <ReferenceField\n                            resource=\"invoices\"\n                            reference=\"customers\"\n                            source=\"customer_id\"\n                            basePath=\"/invoices\"\n                            record={record}\n                            link={false}\n                        >\n                            <CustomerField />\n                        </ReferenceField>\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer}>&nbsp;</div>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\n                            Date{' '}\n                        </Typography>\n                        <Typography gutterBottom align=\"center\">\n                            {new Date(record.date).toLocaleDateString()}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={5}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\n                            Order\n                        </Typography>\n                        <ReferenceField\n                            resource=\"invoices\"\n                            reference=\"commands\"\n                            source=\"command_id\"\n                            basePath=\"/invoices\"\n                            record={record}\n                            link={false}\n                        >\n                            <TextField\n                                source=\"reference\"\n                                align=\"center\"\n                                component=\"p\"\n                                gutterBottom\n                            />\n                        </ReferenceField>\n                    </Grid>\n                </Grid>\n                <div className={classes.invoices}>\n                    <ReferenceField\n                        resource=\"invoices\"\n                        reference=\"commands\"\n                        source=\"command_id\"\n                        basePath=\"/invoices\"\n                        record={record}\n                        link={false}\n                    >\n                        <Basket />\n                    </ReferenceField>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default InvoiceShow;\n\nconst useStyles = makeStyles({\n    root: { width: 600, margin: 'auto' },\n    spacer: { height: 20 },\n    invoices: { margin: '10px 0' },\n});\n","import React from 'react';\nimport {\n    List,\n    Datagrid,\n    TextField,\n    DateField,\n    ReferenceField,\n    NumberField,\n    Filter,\n    DateInput,\n} from 'react-admin';\n\nimport FullNameField from '../visitors/FullNameField';\nimport AddressField from '../visitors/AddressField';\nimport InvoiceShow from './InvoiceShow';\n\nconst ListFilters = (props: any) => (\n    <Filter {...props}>\n        <DateInput source=\"date_gte\" alwaysOn />\n        <DateInput source=\"date_lte\" alwaysOn />\n    </Filter>\n);\n\nconst InvoiceList = (props: any) => (\n    <List {...props} filters={<ListFilters />} perPage={25}>\n        <Datagrid rowClick=\"expand\" expand={<InvoiceShow />}>\n            <TextField source=\"id\" />\n            <DateField source=\"date\" />\n            <ReferenceField source=\"customer_id\" reference=\"customers\">\n                <FullNameField />\n            </ReferenceField>\n            <ReferenceField\n                source=\"customer_id\"\n                reference=\"customers\"\n                link={false}\n                label=\"resources.invoices.fields.address\"\n            >\n                <AddressField />\n            </ReferenceField>\n            <ReferenceField source=\"command_id\" reference=\"commands\">\n                <TextField source=\"reference\" />\n            </ReferenceField>\n            <NumberField source=\"total_ex_taxes\" />\n            <NumberField source=\"delivery_fees\" />\n            <NumberField source=\"taxes\" />\n            <NumberField source=\"total\" />\n        </Datagrid>\n    </List>\n);\n\nexport default InvoiceList;\n","import InvoiceIcon from '@material-ui/icons/LibraryBooks';\n\nimport InvoiceList from './InvoiceList';\n\nexport default {\n    list: InvoiceList,\n    icon: InvoiceIcon,\n};\n","import React from 'react';\nimport MuiGridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport { Link } from 'react-router-dom';\nimport { NumberField } from 'react-admin';\nimport { linkToRecord } from 'ra-core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: '-2px',\n    },\n    gridList: {\n        width: '100%',\n        margin: 0,\n    },\n    tileBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.4) 70%,rgba(0,0,0,0) 100%)',\n    },\n    placeholder: {\n        backgroundColor: theme.palette.grey[300],\n        height: '100%',\n    },\n    price: {\n        display: 'inline',\n        fontSize: '1em',\n    },\n    link: {\n        color: '#fff',\n    },\n}));\n\nconst getColsForWidth = width => {\n    if (width === 'xs') return 2;\n    if (width === 'sm') return 3;\n    if (width === 'md') return 4;\n    if (width === 'lg') return 5;\n    return 6;\n};\n\nconst times = (nbChildren, fn) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = ({ width, nbItems = 10 }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <MuiGridList\n                cellHeight={180}\n                cols={getColsForWidth(width)}\n                className={classes.gridList}\n            >\n                {' '}\n                {times(nbItems, key => (\n                    <GridListTile key={key}>\n                        <div className={classes.placeholder} />\n                    </GridListTile>\n                ))}\n            </MuiGridList>\n        </div>\n    );\n};\n\nconst LoadedGridList = ({ ids, data, basePath, width }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <MuiGridList\n                cellHeight={180}\n                cols={getColsForWidth(width)}\n                className={classes.gridList}\n            >\n                {ids.map(id => (\n                    <GridListTile\n                        component={Link}\n                        key={id}\n                        to={linkToRecord(basePath, data[id].id)}\n                        data-tour-id=\"grid-line\"\n                    >\n                        <img src={data[id].thumbnail} alt=\"\" />\n                        <GridListTileBar\n                            className={classes.tileBar}\n                            title={data[id].reference}\n                            subtitle={\n                                <span>\n                                    {data[id].width}x{data[id].height},{' '}\n                                    <NumberField\n                                        className={classes.price}\n                                        source=\"price\"\n                                        record={data[id]}\n                                        color=\"inherit\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                    />\n                                </span>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </MuiGridList>\n        </div>\n    );\n};\n\nconst GridList = ({ loaded, ...props }) =>\n    loaded ? <LoadedGridList {...props} /> : <LoadingGridList {...props} />;\n\nexport default withWidth()(GridList);\n","import React from 'react';\nimport {\n    Filter,\n    List,\n    NumberInput,\n    Pagination,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n    useTranslate,\n} from 'react-admin';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from './GridList';\n\nconst useQuickFilterStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst QuickFilter = ({ label }) => {\n    const translate = useTranslate();\n    const classes = useQuickFilterStyles();\n    return <Chip className={classes.root} label={translate(label)} />;\n};\n\nexport const ProductFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput\n            source=\"category_id\"\n            reference=\"categories\"\n            sort={{ field: 'id', order: 'ASC' }}\n        >\n            <SelectInput source=\"name\" />\n        </ReferenceInput>\n        <NumberInput source=\"width_gte\" />\n        <NumberInput source=\"width_lte\" />\n        <NumberInput source=\"height_gte\" />\n        <NumberInput source=\"height_lte\" />\n        <QuickFilter\n            label=\"resources.products.fields.stock_lte\"\n            source=\"stock_lte\"\n            defaultValue={10}\n        />\n    </Filter>\n);\n\nconst ProductList = props => (\n    <List\n        {...props}\n        filters={<ProductFilter />}\n        perPage={20}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 40]} />}\n        sort={{ field: 'id', order: 'ASC' }}\n    >\n        <GridList />\n    </List>\n);\n\nexport default ProductList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: { display: 'inline-block', marginTop: '1em', zIndex: 2 },\n    content: { padding: 0, '&:last-child': { padding: 0 } },\n    img: {\n        width: 'initial',\n        minWidth: 'initial',\n        maxWidth: '42em',\n        maxHeight: '15em',\n    },\n});\n\nconst Poster = ({ record }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardContent className={classes.content}>\n                <img src={record.image} alt=\"\" className={classes.img} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Poster;\n","import React from 'react';\nimport {\n    Create,\n    FormTab,\n    NumberInput,\n    ReferenceInput,\n    SelectInput,\n    TabbedForm,\n    TextInput,\n    required,\n} from 'react-admin';\nimport { InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MarkdownInput } from '@react-admin/ra-markdown';\n\nexport const styles = {\n    price: { width: '7em' },\n    width: { width: '7em' },\n    height: { width: '7em' },\n    stock: { width: '7em' },\n    widthFormGroup: { display: 'inline-block' },\n    heightFormGroup: { display: 'inline-block', marginLeft: 32 },\n};\n\nconst useStyles = makeStyles(styles);\n\nconst ProductCreate = props => {\n    const classes = useStyles();\n    return (\n        <Create {...props}>\n            <TabbedForm>\n                <FormTab label=\"resources.products.tabs.image\">\n                    <TextInput\n                        autoFocus\n                        source=\"image\"\n                        fullWidth\n                        validate={required()}\n                    />\n                    <TextInput\n                        source=\"thumbnail\"\n                        fullWidth\n                        validate={required()}\n                    />\n                </FormTab>\n                <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                    <TextInput source=\"reference\" validate={required()} />\n                    <NumberInput\n                        source=\"price\"\n                        validate={required()}\n                        className={classes.price}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    €\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"width\"\n                        validate={required()}\n                        className={classes.width}\n                        formClassName={classes.widthFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"height\"\n                        validate={required()}\n                        className={classes.height}\n                        formClassName={classes.heightFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <ReferenceInput\n                        source=\"category_id\"\n                        reference=\"categories\"\n                        allowEmpty\n                    >\n                        <SelectInput source=\"name\" />\n                    </ReferenceInput>\n                    <NumberInput\n                        source=\"stock\"\n                        validate={required()}\n                        className={classes.stock}\n                    />\n                </FormTab>\n                <FormTab\n                    label=\"resources.products.tabs.description\"\n                    path=\"description\"\n                >\n                    <MarkdownInput source=\"description\" label=\"\" />\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    );\n};\n\nexport default ProductCreate;\n","import React from 'react';\nimport {\n    Datagrid,\n    DateField,\n    Edit,\n    EditButton,\n    FormTab,\n    NumberInput,\n    Pagination,\n    ReferenceInput,\n    ReferenceManyField,\n    SelectInput,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport { InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MarkdownInput } from '@react-admin/ra-markdown';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport Poster from './Poster';\nimport { styles as createStyles } from './ProductCreate';\n\nconst ProductTitle = ({ record }) => <span>Poster #{record.reference}</span>;\n\nconst styles = {\n    ...createStyles,\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst useStyles = makeStyles(styles);\n\nconst ProductEdit = props => {\n    const classes = useStyles();\n    return (\n        <Edit {...props} title={<ProductTitle />}>\n            <TabbedForm>\n                <FormTab label=\"resources.products.tabs.image\">\n                    <Poster />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput source=\"thumbnail\" fullWidth />\n                </FormTab>\n                <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                    <TextInput source=\"reference\" />\n                    <NumberInput\n                        source=\"price\"\n                        className={classes.price}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    €\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"width\"\n                        className={classes.width}\n                        formClassName={classes.widthFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"height\"\n                        className={classes.height}\n                        formClassName={classes.heightFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <ReferenceInput source=\"category_id\" reference=\"categories\">\n                        <SelectInput source=\"name\" />\n                    </ReferenceInput>\n                    <NumberInput source=\"stock\" className={classes.stock} />\n                </FormTab>\n                <FormTab\n                    label=\"resources.products.tabs.description\"\n                    path=\"description\"\n                    data-tour-id=\"description-tab\"\n                >\n                    <MarkdownInput source=\"description\" label=\"\" />\n                </FormTab>\n                <FormTab label=\"resources.products.tabs.reviews\" path=\"reviews\">\n                    <ReferenceManyField\n                        reference=\"reviews\"\n                        target=\"product_id\"\n                        addLabel={false}\n                        pagination={<Pagination />}\n                        fullWidth\n                    >\n                        <Datagrid>\n                            <DateField source=\"date\" />\n                            <CustomerReferenceField />\n                            <StarRatingField />\n                            <TextField\n                                source=\"comment\"\n                                cellClassName={classes.comment}\n                            />\n                            <TextField source=\"status\" />\n                            <EditButton />\n                        </Datagrid>\n                    </ReferenceManyField>\n                </FormTab>\n            </TabbedForm>\n        </Edit>\n    );\n};\n\nexport default ProductEdit;\n","import ProductIcon from '@material-ui/icons/Collections';\nimport ProductList from './ProductList';\nimport ProductEdit from './ProductEdit';\nimport ProductCreate from './ProductCreate';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    icon: ProductIcon,\n};\n","import React, { FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport products from '../products';\nimport { FieldProps, Category } from '../types';\n\nconst useStyles = makeStyles({\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n});\n\nconst LinkToRelatedProducts: FC<FieldProps<Category>> = ({ record }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return record ? (\n        <Button\n            size=\"small\"\n            color=\"primary\"\n            component={Link}\n            to={{\n                pathname: '/products',\n                search: stringify({\n                    page: 1,\n                    perPage: 25,\n                    sort: 'id',\n                    order: 'DESC',\n                    filter: JSON.stringify({ category_id: record.id }),\n                }),\n            }}\n            className={classes.link}\n        >\n            <products.icon className={classes.icon} />\n            {translate('resources.categories.fields.products')}\n        </Button>\n    ) : null;\n};\n\nexport default LinkToRelatedProducts;\n","import React from 'react';\nimport { Datagrid, EditButton, List, TextField } from 'react-admin';\n\nimport LinkToRelatedProducts from './LinkToRelatedProducts';\n\nconst CategoryList = (props: any) => (\n    <List {...props} sort={{ field: 'name', order: 'ASC' }}>\n        <Datagrid>\n            <TextField source=\"name\" />\n            <LinkToRelatedProducts />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport default CategoryList;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldProps, Product } from '../types';\n\nconst useStyles = makeStyles({\n    root: { width: 25, maxWidth: 25, maxHeight: 25 },\n});\n\nconst ThumbnailField: FC<FieldProps<Product>> = ({ record }) => {\n    const classes = useStyles();\n    return record ? (\n        <img src={record.thumbnail} className={classes.root} alt=\"\" />\n    ) : null;\n};\n\nexport default ThumbnailField;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FieldProps, Product } from '../types';\n\nconst ProductRefField: FC<FieldProps<Product>> = ({ record }) =>\n    record ? (\n        <Link to={`products/${record.id}`}>{record.reference}</Link>\n    ) : null;\n\nProductRefField.defaultProps = {\n    source: 'id',\n    label: 'Reference',\n};\n\nexport default ProductRefField;\n","const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n\nconst guides = {\n  \"ra-markdown\": {\n    before: ({ notify, redirect }) => {\n      notify(\"Taking you to the product page\");\n      redirect(\"/products\");\n    },\n    steps: [\n      {\n        target: `[data-tour-id='grid-line']:nth-child(${getRandomInt(1, 5)})`,\n        event: \"hover\",\n        content:\n          \"This is a poster, one of the products our shop is selling, let's go to its details\",\n        joyrideProps: {\n          styles: {\n            beacon: {\n              marginTop: -100,\n            },\n          },\n        },\n        after: ({ target, notify, redirect }) => {\n          const productUrl = target.getAttribute(\"href\").slice(1);\n          redirect(productUrl);\n        },\n      },\n      {\n        target: \"[data-tour-id='description-tab']\",\n        content: \"The markdown editor is in the description tab\",\n        after: ({ target, notify, redirect }) => {\n          target.click();\n        },\n      },\n    ],\n  },\n};\n\nexport default guides;\n","import React, { FC } from 'react';\nimport {\n    Datagrid,\n    Edit,\n    EditButton,\n    NumberField,\n    ReferenceManyField,\n    SimpleForm,\n    TextInput,\n    useTranslate,\n} from 'react-admin';\n\nimport ThumbnailField from '../products/ThumbnailField';\nimport ProductRefField from '../products/ProductRefField';\nimport { FieldProps, Category } from '../types';\n\nconst CategoryTitle: FC<FieldProps<Category>> = ({ record }) => {\n    const translate = useTranslate();\n    return record ? (\n        <span>\n            {translate('resources.categories.name', { smart_count: 1 })} &quot;\n            {record.name}&quot;\n        </span>\n    ) : null;\n};\n\nconst CategoryEdit = (props: any) => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n            <ReferenceManyField\n                reference=\"products\"\n                target=\"category_id\"\n                label=\"resources.categories.fields.products\"\n                perPage={5}\n            >\n                <Datagrid>\n                    <ThumbnailField />\n                    <ProductRefField source=\"reference\" />\n                    <NumberField\n                        source=\"price\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <NumberField\n                        source=\"width\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField\n                        source=\"height\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField source=\"stock\" />\n                    <EditButton />\n                </Datagrid>\n            </ReferenceManyField>\n        </SimpleForm>\n    </Edit>\n);\n\nexport default CategoryEdit;\n","import CategoryIcon from '@material-ui/icons/Bookmark';\n\nimport CategoryList from './CategoryList';\nimport CategoryEdit from './CategoryEdit';\n\nexport default {\n    list: CategoryList,\n    edit: CategoryEdit,\n    icon: CategoryIcon,\n};\n","import React, { FC, Fragment, ReactElement } from 'react';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        paddingLeft: 25,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n    sidebarIsClosed: {\n        paddingLeft: 0,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n}));\n\ninterface Props {\n    dense: boolean;\n    handleToggle: () => void;\n    icon: ReactElement;\n    isOpen: boolean;\n    name: string;\n    sidebarIsOpen: boolean;\n}\n\nconst SubMenu: FC<Props> = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense,\n}) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n                <Divider />\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default SubMenu;\n","import React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { useMediaQuery, Theme } from '@material-ui/core';\nimport { useTranslate, DashboardMenuItem, MenuItemLink } from 'react-admin';\n\nimport visitors from '../visitors';\nimport orders from '../orders';\nimport invoices from '../invoices';\nimport products from '../products';\nimport categories from '../categories';\nimport reviews from '../reviews';\nimport SubMenu from './SubMenu';\nimport { AppState } from '../types';\n\ntype MenuName = 'menuCatalog' | 'menuSales' | 'menuCustomers';\n\ninterface Props {\n    dense: boolean;\n    logout: () => void;\n    onMenuClick: () => void;\n}\n\nconst Menu: FC<Props> = ({ onMenuClick, dense, logout }) => {\n    const [state, setState] = useState({\n        menuCatalog: false,\n        menuSales: false,\n        menuCustomers: false,\n    });\n    const translate = useTranslate();\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('xs')\n    );\n    const open = useSelector((state: AppState) => state.admin.ui.sidebarOpen);\n    useSelector((state: AppState) => state.theme); // force rerender on theme change\n\n    const handleToggle = (menu: MenuName) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    return (\n        <div>\n            {' '}\n            <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n            <SubMenu\n                handleToggle={() => handleToggle('menuSales')}\n                isOpen={state.menuSales}\n                sidebarIsOpen={open}\n                name=\"pos.menu.sales\"\n                icon={<orders.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/commands`}\n                    primaryText={translate(`resources.commands.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<orders.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/invoices`}\n                    primaryText={translate(`resources.invoices.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<invoices.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuCatalog')}\n                isOpen={state.menuCatalog}\n                sidebarIsOpen={open}\n                name=\"pos.menu.catalog\"\n                icon={<products.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/products`}\n                    primaryText={translate(`resources.products.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<products.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/categories`}\n                    primaryText={translate(`resources.categories.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<categories.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuCustomers')}\n                isOpen={state.menuCustomers}\n                sidebarIsOpen={open}\n                name=\"pos.menu.customers\"\n                icon={<visitors.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/customers`}\n                    primaryText={translate(`resources.customers.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<visitors.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/segments`}\n                    primaryText={translate(`resources.segments.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<LabelIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <MenuItemLink\n                to={`/reviews`}\n                primaryText={translate(`resources.reviews.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<reviews.icon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            {isXSmall && (\n                <MenuItemLink\n                    to=\"/configuration\"\n                    primaryText={translate('pos.configuration')}\n                    leftIcon={<SettingsIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            )}\n            {isXSmall && logout}\n        </div>\n    );\n};\n\nexport default Menu;\n","export const darkTheme = {\n    palette: {\n        primary: {\n            main: '#90caf9',\n        },\n        type: 'dark', // Switching the dark mode on is a single property value change.\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n    },\n    overrides: {\n        MuiFilledInput: {\n            root: {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                '&$disabled': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n            },\n        },\n    },\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst JoyrideTooltipContainer = ({\n  tooltipProps,\n  continuous,\n  backProps,\n  closeProps,\n  primaryProps,\n  skipProps,\n  index,\n  isLastStep,\n  step,\n}) => {\n  const {\n    content,\n    hideBackButton,\n    locale,\n    showSkipButton,\n    title,\n    styles,\n  } = step;\n  const { back, close, last, next, skip } = locale;\n  const output = {\n    primary: close,\n  };\n\n  if (continuous) {\n    if (isLastStep) {\n      output.primary = last;\n    } else {\n      output.primary = next;\n    }\n  }\n\n  if (showSkipButton && !isLastStep) {\n    output.skip = <Button {...skipProps}>{skip}</Button>;\n  }\n\n  if (!hideBackButton && index > 0) {\n    output.back = (\n      <Button {...backProps}>\n        {back}\n      </Button>\n    );\n  }\n\n  output.close = (\n    <IconButton\n      {...closeProps}\n      size=\"small\"\n      style={{ position: \"absolute\", top: 10, right: 10 }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n\n  return (\n    <div key=\"JoyrideTooltip\" style={styles.tooltip} {...tooltipProps}>\n      <div style={styles.tooltipContainer}>\n        {output.close}\n        {title && <h4 style={styles.tooltipTitle}>{title}</h4>}\n        {content && <div style={styles.tooltipContent}>{content}</div>}\n      </div>\n      <div style={styles.tooltipFooter}>\n        {output.skip}\n        {output.back}\n        <Button variant=\"contained\" color=\"primary\" {...primaryProps}>\n          {output.primary}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nJoyrideTooltipContainer.propTypes = {\n  backProps: PropTypes.object.isRequired,\n  closeProps: PropTypes.object.isRequired,\n  continuous: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  isLastStep: PropTypes.bool.isRequired,\n  primaryProps: PropTypes.object.isRequired,\n  skipProps: PropTypes.object.isRequired,\n  step: PropTypes.object.isRequired,\n};\n\nexport default JoyrideTooltipContainer;\n","import React, { useReducer, createContext, useContext } from \"react\";\nimport { useRedirect, useNotify } from \"react-admin\";\nimport Joyride, { ACTIONS, EVENTS, STATUS } from \"react-joyride\";\n\nimport Tooltip from \"./Tooltip\";\n\nconst StateContext = createContext();\nconst DispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"start\": {\n      return {\n        ...state,\n        run: true,\n        stepIndex: 0,\n        activeGuide: action.payload.guide,\n      };\n    }\n    case \"stop\": {\n      return { ...state, run: false, stepIndex: 0, activeGuide: null };\n    }\n    case \"next\": {\n      if (!state.activeGuide || !state.run) {\n        return state;\n      }\n      if (state.stepIndex > state.guides[state.activeGuide].steps.length) {\n        return state;\n      }\n      return { ...state, stepIndex: state.stepIndex + 1 };\n    }\n    case \"previous\": {\n      if (!state.activeGuide || !state.run) {\n        return state;\n      }\n      if (state.stepIndex - 1 < 0) {\n        return state;\n      }\n      return { ...state, stepIndex: state.stepIndex - 1 };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n};\n\nconst GuideProvider = ({ guides = {}, children }) => {\n  const redirect = useRedirect();\n  const notify = useNotify();\n\n  const tools = {\n    redirect,\n    notify,\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    run: false,\n    stepIndex: 0,\n    activeGuide: null,\n    guides,\n  });\n\n  const actions = {\n    start: (guide) => {\n      const { before } = state.guides[guide];\n      if (before) {\n        before(tools);\n        setTimeout(() => {\n          dispatch({ type: \"stop\" });\n          dispatch({ type: \"start\", payload: { guide } });\n        }, 1000);\n      }\n      dispatch({ type: \"stop\" });\n      dispatch({ type: \"start\", payload: { guide } });\n    },\n    stop: () => {\n      const { after } = state.guides[state.activeGuide];\n      if (after) {\n        after(tools);\n        setTimeout(() => {\n          dispatch({ type: \"stop\" });\n        }, 1000);\n      }\n      dispatch({ type: \"stop\" });\n    },\n    next: () => dispatch({ type: \"next\" }),\n    previous: () => dispatch({ type: \"previous\" }),\n  };\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={actions}>\n        {children}\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nconst useGuide = () => {\n  const context = useContext(StateContext);\n  if (context === undefined) {\n    throw new Error(\"useGuide must be used within a GuideProvider\");\n  }\n  return context;\n};\n\nconst usePlayback = () => {\n  const context = useContext(DispatchContext);\n  if (context === undefined) {\n    throw new Error(\"usePlayback must be used within a GuideProvider\");\n  }\n  return context;\n};\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.warn(\"Joyride error\", { error, errorInfo });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nconst Guide = () => {\n  const { run, stepIndex, activeGuide, guides } = useGuide();\n  const { stop, next, previous } = usePlayback();\n  const redirect = useRedirect();\n  const notify = useNotify();\n\n  const tools = { redirect, notify };\n\n  if (!activeGuide) {\n    return null;\n  }\n  const { steps } = guides[activeGuide];\n\n  const handleJoyrideCallback = (data) => {\n    const { action, index, type, step } = data;\n\n    const target = document.querySelector(step.target);\n\n    switch (type) {\n      case EVENTS.STEP_BEFORE:\n        const beforeFunction = steps[index].before;\n        if (beforeFunction) {\n          beforeFunction({ ...tools, target });\n        }\n        break;\n      case EVENTS.STEP_AFTER:\n        const afterFunction = steps[index].after;\n        if (afterFunction) {\n          afterFunction({ ...tools, target });\n          setTimeout(() => {\n            // Update state to advance the tour\n            if (action === ACTIONS.PREV) {\n              previous();\n              return;\n            }\n            next();\n          });\n          break;\n        }\n        // Update state to advance the tour\n        if (action === ACTIONS.PREV) {\n          previous();\n          break;\n        }\n        next();\n        break;\n      case EVENTS.TARGET_NOT_FOUND:\n        next();\n        break;\n      case EVENTS.TOUR_END:\n      case STATUS.FINISHED:\n      case STATUS.SKIPPED:\n        // Need to set our running state to false, so we can restart if we click start again.\n        stop();\n        break;\n      case EVENTS.TOOLTIP_CLOSE:\n        break;\n      default:\n    }\n  };\n\n  if (!run) {\n    return null;\n  }\n\n  let joyrideProps = {};\n  if (steps[stepIndex]) {\n    joyrideProps = steps[stepIndex].joyrideProps;\n  }\n\n  return (\n    <ErrorBoundary>\n      <Joyride\n        steps={steps}\n        callback={handleJoyrideCallback}\n        run={true}\n        stepIndex={stepIndex}\n        continuous\n        showProgress\n        showSkipButton\n        {...joyrideProps}\n        disableCloseOnEsc\n        disableOverlayClose\n        spotlightClicks\n        tooltipComponent={Tooltip}\n      />\n    </ErrorBoundary>\n  );\n};\n\nexport { Guide, GuideProvider, useGuide, usePlayback };\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Layout, Sidebar } from \"react-admin\";\n\nimport AppBar from \"./AppBar\";\nimport Menu from \"./Menu\";\nimport { darkTheme, lightTheme } from \"./themes\";\nimport { AppState } from \"../types\";\n\nimport { Guide } from \"../guide\";\nimport { GuideProvider } from \"../guide\";\nimport guides from \"../guide/guides\";\n\nconst CustomSidebar = (props: any) => <Sidebar {...props} size={200} />;\n\nexport default (props: any) => {\n  const theme = useSelector((state: AppState) =>\n    state.theme === \"dark\" ? darkTheme : lightTheme\n  );\n  return (\n    <GuideProvider guides={guides}>\n      <Guide />\n      <Layout\n        {...props}\n        appBar={AppBar}\n        sidebar={CustomSidebar}\n        menu={Menu}\n        theme={theme}\n      />\n    </GuideProvider>\n  );\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, withTypes } from 'react-final-form';\nimport { useLocation } from 'react-router-dom';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport { Notification } from 'react-admin';\nimport { useTranslate, useLogin, useNotify } from 'ra-core';\nimport { lightTheme } from './themes';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        background: 'url(https://source.unsplash.com/random/1600x900)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n    },\n}));\n\nconst renderInput = ({\n    meta: { touched, error } = { touched: false, error: undefined },\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    username?: string;\n    password?: string;\n}\n\nconst { Form } = withTypes<FormValues>();\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false);\n    const translate = useTranslate();\n    const classes = useStyles();\n    const notify = useNotify();\n    const login = useLogin();\n    const location = useLocation<{ nextPathname: string } | null>();\n\n    const handleSubmit = (auth: FormValues) => {\n        setLoading(true);\n        login(auth, location.state ? location.state.nextPathname : '/').catch(\n            (error: Error) => {\n                setLoading(false);\n                notify(\n                    typeof error === 'string'\n                        ? error\n                        : typeof error === 'undefined' || !error.message\n                        ? 'ra.auth.sign_in_error'\n                        : error.message,\n                    'warning'\n                );\n            }\n        );\n    };\n\n    const validate = (values: FormValues) => {\n        const errors: FormValues = {};\n        if (!values.username) {\n            errors.username = translate('ra.validation.required');\n        }\n        if (!values.password) {\n            errors.password = translate('ra.validation.required');\n        }\n        return errors;\n    };\n\n    return (\n        <Form\n            onSubmit={handleSubmit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className={classes.main}>\n                        <Card className={classes.card}>\n                            <div className={classes.avatar}>\n                                <Avatar className={classes.icon}>\n                                    <LockIcon />\n                                </Avatar>\n                            </div>\n                            <div className={classes.hint}>\n                                Hint: demo / demo\n                            </div>\n                            <div className={classes.form}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        name=\"username\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                    />\n                                </div>\n                                <div className={classes.input}>\n                                    <Field\n                                        name=\"password\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                    />\n                                </div>\n                            </div>\n                            <CardActions className={classes.actions}>\n                                <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    fullWidth\n                                >\n                                    {loading && (\n                                        <CircularProgress\n                                            size={25}\n                                            thickness={2}\n                                        />\n                                    )}\n                                    {translate('ra.auth.sign_in')}\n                                </Button>\n                            </CardActions>\n                        </Card>\n                        <Notification />\n                    </div>\n                </form>\n            )}\n        />\n    );\n};\n\nLogin.propTypes = {\n    authProvider: PropTypes.func,\n    previousRoute: PropTypes.string,\n};\n\n// We need to put the ThemeProvider decoration in another component\n// Because otherwise the useStyles() hook used in Login won't get\n// the right theme\nconst LoginWithTheme = (props: any) => (\n    <ThemeProvider theme={createMuiTheme(lightTheme)}>\n        <Login {...props} />\n    </ThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles({\n    media: {\n        height: '18em',\n    },\n});\n\nconst mediaUrl = `https://marmelab.com/posters/beard-${parseInt(\n    (Math.random() * 10).toString(),\n    10\n) + 1}.jpeg`;\n\nconst Welcome: FC = () => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardMedia image={mediaUrl} className={classes.media} />\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {translate('pos.dashboard.welcome.title')}\n                </Typography>\n                <Typography component=\"p\">\n                    {translate('pos.dashboard.welcome.subtitle')}\n                </Typography>\n            </CardContent>\n            <CardActions style={{ justifyContent: 'flex-end' }}>\n                <Button href=\"https://marmelab.com/react-admin\">\n                    <HomeIcon style={{ paddingRight: '0.5em' }} />\n                    {translate('pos.dashboard.welcome.aor_button')}\n                </Button>\n                <Button href=\"https://github.com/marmelab/react-admin/tree/master/examples/demo\">\n                    <CodeIcon style={{ paddingRight: '0.5em' }} />\n                    {translate('pos.dashboard.welcome.demo_button')}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default Welcome;\n","import React, { FC, ComponentType } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\n\ninterface Props {\n    bgColor: string;\n    Icon: ComponentType<SvgIconProps>;\n}\n\nconst useStyles = makeStyles({\n    card: {\n        float: 'left',\n        margin: '-20px 20px 0 15px',\n        zIndex: 100,\n        borderRadius: 3,\n    },\n    icon: {\n        float: 'right',\n        width: 54,\n        height: 54,\n        padding: 14,\n        color: '#fff',\n    },\n});\n\nconst CardIcon: FC<Props> = ({ Icon, bgColor }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card} style={{ backgroundColor: bgColor }}>\n            <Icon className={classes.icon} />\n        </Card>\n    );\n};\n\nexport default CardIcon;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport DollarIcon from '@material-ui/icons/AttachMoney';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\ninterface Props {\n    value?: number;\n}\n\nconst useStyles = makeStyles({\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n    title: {},\n});\n\nconst MonthlyRevenue: FC<Props> = ({ value }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={DollarIcon} bgColor=\"#31708f\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.monthly_revenue')}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {value}\n                </Typography>\n            </Card>\n        </div>\n    );\n};\n\nexport default MonthlyRevenue;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\ninterface Props {\n    value?: number;\n}\n\nconst useStyles = makeStyles({\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n    title: {},\n});\n\nconst NbNewOrders: FC<Props> = ({ value }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={ShoppingCartIcon} bgColor=\"#ff9800\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.new_orders')}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {value}\n                </Typography>\n            </Card>\n        </div>\n    );\n};\n\nexport default NbNewOrders;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\nimport { Customer, Order } from '../types';\n\ninterface Props {\n    orders?: Order[];\n    customers?: { [key: string]: Customer };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flex: 1,\n    },\n    cost: {\n        marginRight: '1em',\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst PendingOrders: FC<Props> = ({ orders = [], customers = {} }) => {\n    const classes = useStyles();\n    const translate = useTranslate();\n    return (\n        <Card className={classes.root}>\n            <CardHeader title={translate('pos.dashboard.pending_orders')} />\n            <List dense={true}>\n                {orders.map(record => (\n                    <ListItem\n                        key={record.id}\n                        button\n                        component={Link}\n                        to={`/commands/${record.id}`}\n                    >\n                        <ListItemAvatar>\n                            {customers[record.customer_id] ? (\n                                <Avatar\n                                    src={`${\n                                        customers[record.customer_id].avatar\n                                    }?size=32x32`}\n                                />\n                            ) : (\n                                <Avatar />\n                            )}\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={new Date(record.date).toLocaleString(\n                                'en-GB'\n                            )}\n                            secondary={translate('pos.dashboard.order.items', {\n                                smart_count: record.basket.length,\n                                nb_items: record.basket.length,\n                                customer_name: customers[record.customer_id]\n                                    ? `${\n                                          customers[record.customer_id]\n                                              .first_name\n                                      } ${\n                                          customers[record.customer_id]\n                                              .last_name\n                                      }`\n                                    : '',\n                            })}\n                        />\n                        <ListItemSecondaryAction>\n                            <span className={classes.cost}>\n                                {record.total}$\n                            </span>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))}\n            </List>\n        </Card>\n    );\n};\n\nexport default PendingOrders;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nimport StarRatingField from '../reviews/StarRatingField';\nimport { Customer, Review } from '../types';\n\ninterface Props {\n    reviews?: Review[];\n    customers?: { [key: string]: Customer };\n    nb?: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    titleLink: { textDecoration: 'none', color: 'inherit' },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n    avatar: {\n        background: theme.palette.background.paper,\n    },\n    listItemText: {\n        overflowY: 'hidden',\n        height: '4em',\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n    },\n}));\n\nconst location = {\n    pathname: 'reviews',\n    query: { filter: JSON.stringify({ status: 'pending' }) },\n};\n\nconst PendingReviews: FC<Props> = ({ reviews = [], customers = {}, nb }) => {\n    const classes = useStyles();\n    const translate = useTranslate();\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={CommentIcon} bgColor=\"#f44336\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.pending_reviews')}\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                    className={classes.value}\n                >\n                    <Link to={location} className={classes.titleLink}>\n                        {nb}\n                    </Link>\n                </Typography>\n                <Divider />\n                <List>\n                    {reviews.map((record: Review) => (\n                        <ListItem\n                            key={record.id}\n                            button\n                            component={Link}\n                            to={`/reviews/${record.id}`}\n                            alignItems=\"flex-start\"\n                        >\n                            <ListItemAvatar>\n                                {customers[record.customer_id] ? (\n                                    <Avatar\n                                        src={`${\n                                            customers[record.customer_id].avatar\n                                        }?size=32x32`}\n                                        className={classes.avatar}\n                                    />\n                                ) : (\n                                    <Avatar />\n                                )}\n                            </ListItemAvatar>\n\n                            <ListItemText\n                                primary={\n                                    <StarRatingField\n                                        record={record}\n                                        size=\"small\"\n                                    />\n                                }\n                                secondary={record.comment}\n                                className={classes.listItemText}\n                                style={{ paddingRight: 0 }}\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            </Card>\n        </div>\n    );\n};\n\nexport default PendingReviews;\n","import React, { useMemo } from 'react';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CustomerIcon from '@material-ui/icons/PersonAdd';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useQueryWithStore } from 'react-admin';\n\nimport CardIcon from './CardIcon';\nimport { Customer } from '../types';\n\nconst useStyles = makeStyles({\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n});\n\nconst NewCustomers = () => {\n    const classes = useStyles();\n    const translate = useTranslate();\n    const aMonthAgo = useMemo(() => {\n        const date = new Date();\n        date.setDate(date.getDate() - 30);\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n    }, []);\n\n    const { loaded, data: visitors } = useQueryWithStore({\n        type: 'getList',\n        resource: 'customers',\n        payload: {\n            filter: {\n                has_ordered: true,\n                first_seen_gte: aMonthAgo.toISOString(),\n            },\n            sort: { field: 'first_seen', order: 'DESC' },\n            pagination: { page: 1, perPage: 100 },\n        },\n    });\n\n    if (!loaded) return null;\n\n    const nb = visitors ? visitors.reduce((nb: number) => ++nb, 0) : 0;\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={CustomerIcon} bgColor=\"#4caf50\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.new_customers')}\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                    className={classes.value}\n                >\n                    {nb}\n                </Typography>\n                <Divider />\n                <List>\n                    {visitors\n                        ? visitors.map((record: Customer) => (\n                              <ListItem\n                                  button\n                                  to={`/customers/${record.id}`}\n                                  component={Link}\n                                  key={record.id}\n                              >\n                                  <ListItemAvatar>\n                                      <Avatar\n                                          src={`${record.avatar}?size=32x32`}\n                                      />\n                                  </ListItemAvatar>\n                                  <ListItemText\n                                      primary={`${record.first_name} ${\n                                          record.last_name\n                                      }`}\n                                  />\n                              </ListItem>\n                          ))\n                        : null}\n                </List>\n            </Card>\n        </div>\n    );\n};\n\nexport default NewCustomers;\n","import React, {\n    useState,\n    useEffect,\n    useCallback,\n    FC,\n    CSSProperties,\n} from 'react';\nimport { useVersion, useDataProvider } from 'react-admin';\nimport { useMediaQuery, Theme } from '@material-ui/core';\n\nimport Welcome from './Welcome';\nimport MonthlyRevenue from './MonthlyRevenue';\nimport NbNewOrders from './NbNewOrders';\nimport PendingOrders from './PendingOrders';\nimport PendingReviews from './PendingReviews';\nimport NewCustomers from './NewCustomers';\n\nimport { Customer, Order, Review } from '../types';\n\ninterface OrderStats {\n    revenue: number;\n    nbNewOrders: number;\n    pendingOrders: Order[];\n}\n\ninterface CustomerData {\n    [key: string]: Customer;\n}\n\ninterface State {\n    nbNewOrders?: number;\n    nbPendingReviews?: number;\n    pendingOrders?: Order[];\n    pendingOrdersCustomers?: CustomerData;\n    pendingReviews?: Review[];\n    pendingReviewsCustomers?: CustomerData;\n    revenue?: number;\n}\n\nconst styles = {\n    flex: { display: 'flex' },\n    flexColumn: { display: 'flex', flexDirection: 'column' },\n    leftCol: { flex: 1, marginRight: '1em' },\n    rightCol: { flex: 1, marginLeft: '1em' },\n    singleCol: { marginTop: '2em', marginBottom: '2em' },\n};\n\nconst Dashboard: FC = () => {\n    const [state, setState] = useState<State>({});\n    const version = useVersion();\n    const dataProvider = useDataProvider();\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('xs')\n    );\n    const isSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n\n    const fetchOrders = useCallback(async () => {\n        const aMonthAgo = new Date();\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\n        const { data: recentOrders } = await dataProvider.getList('commands', {\n            filter: { date_gte: aMonthAgo.toISOString() },\n            sort: { field: 'date', order: 'DESC' },\n            pagination: { page: 1, perPage: 50 },\n        });\n        const aggregations = recentOrders\n            .filter((order: Order) => order.status !== 'cancelled')\n            .reduce(\n                (stats: OrderStats, order: Order) => {\n                    if (order.status !== 'cancelled') {\n                        stats.revenue += order.total;\n                        stats.nbNewOrders++;\n                    }\n                    if (order.status === 'ordered') {\n                        stats.pendingOrders.push(order);\n                    }\n                    return stats;\n                },\n                {\n                    revenue: 0,\n                    nbNewOrders: 0,\n                    pendingOrders: [],\n                }\n            );\n        setState(state => ({\n            ...state,\n            revenue: aggregations.revenue.toLocaleString(undefined, {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            }),\n            nbNewOrders: aggregations.nbNewOrders,\n            pendingOrders: aggregations.pendingOrders,\n        }));\n        const { data: customers } = await dataProvider.getMany('customers', {\n            ids: aggregations.pendingOrders.map(\n                (order: Order) => order.customer_id\n            ),\n        });\n        setState(state => ({\n            ...state,\n            pendingOrdersCustomers: customers.reduce(\n                (prev: CustomerData, customer: Customer) => {\n                    prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                    return prev;\n                },\n                {}\n            ),\n        }));\n    }, [dataProvider]);\n\n    const fetchReviews = useCallback(async () => {\n        const { data: reviews } = await dataProvider.getList('reviews', {\n            filter: { status: 'pending' },\n            sort: { field: 'date', order: 'DESC' },\n            pagination: { page: 1, perPage: 100 },\n        });\n        const nbPendingReviews = reviews.reduce((nb: number) => ++nb, 0);\n        const pendingReviews = reviews.slice(0, Math.min(10, reviews.length));\n        setState(state => ({ ...state, pendingReviews, nbPendingReviews }));\n        const { data: customers } = await dataProvider.getMany('customers', {\n            ids: pendingReviews.map((review: Review) => review.customer_id),\n        });\n        setState(state => ({\n            ...state,\n            pendingReviewsCustomers: customers.reduce(\n                (prev: CustomerData, customer: Customer) => {\n                    prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                    return prev;\n                },\n                {}\n            ),\n        }));\n    }, [dataProvider]);\n\n    useEffect(() => {\n        fetchOrders();\n        fetchReviews();\n    }, [version]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const {\n        nbNewOrders,\n        nbPendingReviews,\n        pendingOrders,\n        pendingOrdersCustomers,\n        pendingReviews,\n        pendingReviewsCustomers,\n        revenue,\n    } = state;\n    return isXSmall ? (\n        <div>\n            <div style={styles.flexColumn as CSSProperties}>\n                <div style={{ marginBottom: '2em' }}>\n                    <Welcome />\n                </div>\n                <div style={styles.flex}>\n                    <MonthlyRevenue value={revenue} />\n                    <NbNewOrders value={nbNewOrders} />\n                </div>\n                <div style={styles.singleCol}>\n                    <PendingOrders\n                        orders={pendingOrders}\n                        customers={pendingOrdersCustomers}\n                    />\n                </div>\n            </div>\n        </div>\n    ) : isSmall ? (\n        <div style={styles.flexColumn as CSSProperties}>\n            <div style={styles.singleCol}>\n                <Welcome />\n            </div>\n            <div style={styles.flex}>\n                <MonthlyRevenue value={revenue} />\n                <NbNewOrders value={nbNewOrders} />\n            </div>\n            <div style={styles.singleCol}>\n                <PendingOrders\n                    orders={pendingOrders}\n                    customers={pendingOrdersCustomers}\n                />\n            </div>\n        </div>\n    ) : (\n        <div style={styles.flex}>\n            <div style={styles.leftCol}>\n                <div style={styles.flex}>\n                    <MonthlyRevenue value={revenue} />\n                    <NbNewOrders value={nbNewOrders} />\n                </div>\n                <div style={styles.singleCol}>\n                    <Welcome />\n                </div>\n                <div style={styles.singleCol}>\n                    <PendingOrders\n                        orders={pendingOrders}\n                        customers={pendingOrdersCustomers}\n                    />\n                </div>\n            </div>\n            <div style={styles.rightCol}>\n                <div style={styles.flex}>\n                    <PendingReviews\n                        nb={nbPendingReviews}\n                        reviews={pendingReviews}\n                        customers={pendingReviewsCustomers}\n                    />\n                    <NewCustomers />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import DashboardComponent from './Dashboard';\n\nexport const Dashboard = DashboardComponent;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { useTranslate, useLocale, useSetLocale, Title } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { changeTheme } from './actions';\nimport { AppState } from '../types';\n\nconst useStyles = makeStyles({\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n});\n\nconst Configuration = () => {\n    const translate = useTranslate();\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    const theme = useSelector((state: AppState) => state.theme);\n    const dispatch = useDispatch();\n    return (\n        <Card>\n            <Title title={translate('pos.configuration')} />\n            <CardContent>\n                <div className={classes.label}>\n                    {translate('pos.theme.name')}\n                </div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'light' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('light'))}\n                >\n                    {translate('pos.theme.light')}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'dark' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('dark'))}\n                >\n                    {translate('pos.theme.dark')}\n                </Button>\n            </CardContent>\n            <CardContent>\n                <div className={classes.label}>{translate('pos.language')}</div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'en' ? 'primary' : 'default'}\n                    onClick={() => setLocale('en')}\n                >\n                    en\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'fr' ? 'primary' : 'default'}\n                    onClick={() => setLocale('fr')}\n                >\n                    fr\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Configuration;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport visitors from '../visitors';\n\nconst useStyles = makeStyles({\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n});\n\nconst LinkToRelatedCustomers = ({ segment }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <Button\n            size=\"small\"\n            color=\"primary\"\n            component={Link}\n            to={{\n                pathname: '/customers',\n                search: stringify({\n                    page: 1,\n                    perPage: 25,\n                    filter: JSON.stringify({ groups: segment }),\n                }),\n            }}\n            className={classes.link}\n        >\n            <visitors.icon className={classes.icon} />\n            {translate('resources.segments.fields.customers')}\n        </Button>\n    );\n};\n\nexport default LinkToRelatedCustomers;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate, Title } from 'react-admin';\n\nimport LinkToRelatedCustomers from './LinkToRelatedCustomers';\nimport segments from './data';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 16,\n    },\n});\n\nconst Segments = () => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <Title title={translate('resources.segments.name')} />\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            {translate('resources.segments.fields.name')}\n                        </TableCell>\n                        <TableCell />\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {segments.map(segment => (\n                        <TableRow key={segment.id}>\n                            <TableCell>{translate(segment.name)}</TableCell>\n                            <TableCell>\n                                <LinkToRelatedCustomers segment={segment.id} />\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Card>\n    );\n};\n\nexport default Segments;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Configuration from './configuration/Configuration';\nimport Segments from './segments/Segments';\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\n    <Route exact path=\"/segments\" render={() => <Segments />} />,\n];\n","import { TranslationMessages } from 'ra-core';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n    ...englishMessages,\n    pos: {\n        search: 'Search',\n        configuration: 'Configuration',\n        language: 'Language',\n        theme: {\n            name: 'Theme',\n            light: 'Light',\n            dark: 'Dark',\n        },\n        dashboard: {\n            monthly_revenue: 'Monthly Revenue',\n            new_orders: 'New Orders',\n            pending_reviews: 'Pending Reviews',\n            new_customers: 'New Customers',\n            pending_orders: 'Pending Orders',\n            order: {\n                items:\n                    'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',\n            },\n            welcome: {\n                title: 'Welcome to react-admin demo',\n                subtitle:\n                    \"This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n                aor_button: 'react-admin site',\n                demo_button: 'Source for this demo',\n            },\n        },\n        menu: {\n            sales: 'Sales',\n            catalog: 'Catalog',\n            customers: 'Customers',\n        },\n    },\n    resources: {\n        customers: {\n            name: 'Customer |||| Customers',\n            fields: {\n                commands: 'Orders',\n                first_seen: 'First seen',\n                groups: 'Segments',\n                last_seen: 'Last seen',\n                last_seen_gte: 'Visited Since',\n                name: 'Name',\n                total_spent: 'Total spent',\n                password: 'Password',\n                confirm_password: 'Confirm password',\n            },\n            fieldGroups: {\n                identity: 'Identity',\n                address: 'Address',\n                stats: 'Stats',\n                history: 'History',\n                password: 'Password',\n                change_password: 'Change Password',\n            },\n            page: {\n                delete: 'Delete Customer',\n            },\n            errors: {\n                password_mismatch:\n                    'The password confirmation is not the same as the password.',\n            },\n        },\n        commands: {\n            name: 'Order |||| Orders',\n            amount: '1 order |||| %{smart_count} orders',\n            title: 'Order %{reference}',\n            fields: {\n                basket: {\n                    delivery: 'Delivery',\n                    reference: 'Reference',\n                    quantity: 'Quantity',\n                    sum: 'Sum',\n                    tax_rate: 'Tax Rate',\n                    total: 'Total',\n                    unit_price: 'Unit Price',\n                },\n                customer_id: 'Customer',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                status: 'Status',\n                returned: 'Returned',\n            },\n        },\n        invoices: {\n            name: 'Invoice |||| Invoices',\n            fields: {\n                date: 'Invoice date',\n                customer_id: 'Customer',\n                command_id: 'Order',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                address: 'Address',\n            },\n        },\n        products: {\n            name: 'Poster |||| Posters',\n            fields: {\n                category_id: 'Category',\n                height_gte: 'Min height',\n                height_lte: 'Max height',\n                height: 'Height',\n                image: 'Image',\n                price: 'Price',\n                reference: 'Reference',\n                stock_lte: 'Low Stock',\n                stock: 'Stock',\n                thumbnail: 'Thumbnail',\n                width_gte: 'Min width',\n                width_lte: 'Max width',\n                width: 'Width',\n            },\n            tabs: {\n                image: 'Image',\n                details: 'Details',\n                description: 'Description',\n                reviews: 'Reviews',\n            },\n        },\n        categories: {\n            name: 'Category |||| Categories',\n            fields: {\n                products: 'Products',\n            },\n        },\n        reviews: {\n            name: 'Review |||| Reviews',\n            amount: '1 review |||| %{smart_count} reviews',\n            relative_to_poster: 'Review on poster',\n            detail: 'Review detail',\n            fields: {\n                customer_id: 'Customer',\n                command_id: 'Order',\n                product_id: 'Product',\n                date_gte: 'Posted since',\n                date_lte: 'Posted before',\n                date: 'Date',\n                comment: 'Comment',\n                rating: 'Rating',\n            },\n            action: {\n                accept: 'Accept',\n                reject: 'Reject',\n            },\n            notification: {\n                approved_success: 'Review approved',\n                approved_error: 'Error: Review not approved',\n                rejected_success: 'Review rejected',\n                rejected_error: 'Error: Review not rejected',\n            },\n        },\n        segments: {\n            name: 'Segments',\n            fields: {\n                customers: 'Customers',\n                name: 'Name',\n            },\n            data: {\n                compulsive: 'Compulsive',\n                collector: 'Collector',\n                ordered_once: 'Ordered once',\n                regular: 'Regular',\n                returns: 'Returns',\n                reviewer: 'Reviewer',\n            },\n        },\n    },\n};\n\nexport default customEnglishMessages;\n","import React from \"react\";\nimport { useMutation, useRefresh } from \"react-admin\";\nimport classnames from \"classnames\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\nimport { markdownToReact } from \"@react-admin/ra-markdown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\n\nimport { usePlayback } from \"../guide\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    cursor: \"pointer\",\n    margin: 20,\n    opacity: 0.9,\n    transition: \"opacity 0.3s ease-in-out\",\n    \"&:hover,&:focus-within\": {\n      opacity: 1,\n    },\n  },\n  visited: {\n    opacity: 0.6,\n  },\n  media: {\n    height: 140,\n  },\n  rightButton: {\n    marginLeft: \"auto\",\n  },\n  content: {\n    position: \"relative\",\n  },\n  newIcon: {\n    position: \"absolute\",\n    top: 10,\n    right: 10,\n  },\n  actions: {\n    paddingBottom: 0,\n  },\n  buyIcon: {\n    marginLeft: \"auto !important\",\n  },\n  playedOnIndicator: {\n    paddingLeft: 16,\n    paddingTop: 0,\n    paddingBottom: 16,\n  },\n});\n\nexport default ({ record }) => {\n  const classes = useStyles();\n  const refresh = useRefresh();\n  const { start } = usePlayback();\n\n  const [setPlayed] = useMutation(\n    {\n      type: \"update\",\n      resource: \"tours\",\n      payload: { id: record.id, data: { playedOn: new Date() } },\n    },\n    {\n      onSuccess: refresh,\n    }\n  );\n\n  const handlePlayClicked = () => {\n    start(record.tour);\n    setPlayed();\n  };\n\n  return (\n    <Card\n      className={classnames(classes.root, {\n        [classes.visited]: record.playedOn,\n      })}\n      onClick={handlePlayClicked}\n    >\n      <CardMedia\n        className={classes.media}\n        image={`${process.env.PUBLIC_URL}/${record.image}`}\n        title={record.title}\n      ></CardMedia>\n      <CardContent className={classes.content}>\n        {!record.playedOn && (\n          <NewReleasesIcon\n            color=\"error\"\n            fontSize=\"large\"\n            className={classes.newIcon}\n          />\n        )}\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {record.title}\n        </Typography>\n        {markdownToReact(record.comment)}\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button size=\"small\" startIcon={<PlayIcon />} color=\"primary\">\n          Play\n        </Button>\n        <Button\n          size=\"small\"\n          startIcon={<ShoppingCartIcon />}\n          color=\"secondary\"\n          className={classes.buyIcon}\n          href={record.href}\n        >\n          Buy\n        </Button>\n      </CardActions>\n      <div className={classes.playedOnIndicator}>\n        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n          {record.playedOn\n            ? `Last played on ${new Date(record.playedOn).toLocaleString()}`\n            : `Never played before`}\n        </Typography>\n      </div>\n    </Card>\n  );\n};\n","import React, { cloneElement } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\nimport {\n  TopToolbar,\n  Button,\n  sanitizeListRestProps,\n  List,\n  Pagination,\n  useMutation,\n  useRefresh,\n} from \"react-admin\";\n\nimport Tour from \"./Tour\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    background: \"none\",\n    boxShadow: \"none\",\n  },\n}));\n\nconst useListStyles = makeStyles((theme) => ({\n  gridContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n}));\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  ids,\n  ...rest\n}) => {\n  const refresh = useRefresh();\n\n  const [reset, { loading: resetLoading }] = useMutation(\n    {\n      type: \"updateMany\",\n      resource: \"tours\",\n      payload: { ids: ids, data: { playedOn: null } },\n    },\n    {\n      onSuccess: () => {\n        refresh();\n      },\n    }\n  );\n\n  const [markAsPlayed, { loading: markAsPlayedLoading }] = useMutation(\n    {\n      type: \"updateMany\",\n      resource: \"tours\",\n      payload: { ids: ids, data: { playedOn: new Date() } },\n    },\n    {\n      onSuccess: () => {\n        refresh();\n      },\n    }\n  );\n\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: \"button\",\n        })}\n      {/* Add your custom actions */}\n      <Button\n        onClick={markAsPlayed}\n        label=\"Mark all as played\"\n        disabled={markAsPlayedLoading}\n      >\n        <PlaylistAddCheckIcon />\n      </Button>\n      <Button onClick={reset} label=\"Reset\" disabled={resetLoading}>\n        <RotateLeftIcon />\n      </Button>\n    </TopToolbar>\n  );\n};\n\nconst GridList = ({ ids, data, ...rest }) => {\n  const classes = useListStyles();\n  return (\n    <div className={classes.gridContainer}>\n      {ids.map((id) => (\n        <Tour key={id} record={data[id]} />\n      ))}\n    </div>\n  );\n};\n\nconst TourList = (props) => {\n  const classes = useStyles();\n\n  return (\n    <List\n      {...props}\n      perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 40]} />}\n      sort={{ field: \"id\", order: \"ASC\" }}\n      classes={classes}\n      actions={<ListActions />}\n    >\n      <GridList />\n    </List>\n  );\n};\n\nexport default TourList;\n","import DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\n\nimport TourList from './TourList';\n\nexport default {\n    list: TourList,\n    icon: DirectionsBusIcon,\n};\n","export default type => {\n    switch (type) {\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n        default:\n            return import('./rest').then(provider => provider.default);\n    }\n};\n","export default type => {\n    switch (type) {\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n        default:\n            return import('./rest').then(factory => factory.default());\n    }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\n\nimport \"./App.css\";\n\nimport authProvider from \"./authProvider\";\nimport themeReducer from \"./themeReducer\";\nimport { Login, Layout } from \"./layout\";\nimport { Dashboard } from \"./dashboard\";\nimport customRoutes from \"./routes\";\nimport englishMessages from \"./i18n/en\";\n\nimport visitors from \"./visitors\";\nimport orders from \"./orders\";\nimport products from \"./products\";\nimport invoices from \"./invoices\";\nimport categories from \"./categories\";\nimport reviews from \"./reviews\";\nimport tours from \"./tours\";\n\nimport dataProviderFactory from \"./dataProvider\";\nimport fakeServerFactory from \"./fakeServer\";\n\nconst i18nProvider = polyglotI18nProvider((locale) => {\n  if (locale === \"fr\") {\n    return import(\"./i18n/fr\").then((messages) => messages.default);\n  }\n\n  // Always fallback on english\n  return englishMessages;\n}, \"en\");\n\nconst App = () => {\n  const [dataProvider, setDataProvider] = useState(null);\n\n  useEffect(() => {\n    let restoreFetch;\n\n    const fetchDataProvider = async () => {\n      restoreFetch = await fakeServerFactory(\n        process.env.REACT_APP_DATA_PROVIDER\n      );\n      const dataProviderInstance = await dataProviderFactory(\n        process.env.REACT_APP_DATA_PROVIDER\n      );\n      setDataProvider(\n        // GOTCHA: dataProviderInstance can be a function\n        () => dataProviderInstance\n      );\n    };\n\n    fetchDataProvider();\n\n    return restoreFetch;\n  }, []);\n\n  if (!dataProvider) {\n    return (\n      <div className=\"loader-container\">\n        <div className=\"loader\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n      <Admin\n        title=\"\"\n        dataProvider={dataProvider}\n        customReducers={{ theme: themeReducer }}\n        customRoutes={customRoutes}\n        authProvider={authProvider}\n        dashboard={Dashboard}\n        loginPage={Login}\n        layout={Layout}\n        i18nProvider={i18nProvider}\n      >\n        <Resource name=\"customers\" {...visitors} />\n        <Resource name=\"commands\" {...orders} options={{ label: \"Orders\" }} />\n        <Resource name=\"invoices\" {...invoices} />\n        <Resource name=\"products\" {...products} />\n        <Resource name=\"categories\" {...categories} />\n        <Resource name=\"reviews\" {...reviews} />\n        <Resource name=\"tours\" {...tours} />\n      </Admin>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'proxy-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
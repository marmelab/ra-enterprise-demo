{"version":3,"sources":["layout/themes.ts","authProvider.ts","layout/Logo.tsx","layout/AppBar.tsx","ra-enterprise/List.js","segments/data.js","visitors/SegmentsField.tsx","visitors/SegmentInput.tsx","visitors/AvatarField.tsx","visitors/FullNameField.tsx","visitors/CustomerLinkField.tsx","visitors/ColoredNumberField.tsx","visitors/MobileGrid.tsx","visitors/DesktopGrid.tsx","visitors/VisitorList.tsx","visitors/VisitorCreate.tsx","orders/NbItemsField.js","visitors/CustomerReferenceField.tsx","orders/MobileGrid.js","orders/OrderList.js","orders/Basket.tsx","orders/OrderEdit.js","orders/index.js","reviews/BulkAcceptButton.js","reviews/BulkRejectButton.js","reviews/ReviewListMobile.js","products/ProductReferenceField.js","reviews/StarRatingField.tsx","reviews/rowStyle.js","reviews/ReviewListDesktop.js","reviews/ReviewFilter.js","reviews/AcceptButton.js","reviews/RejectButton.js","reviews/ReviewEditToolbar.js","reviews/ReviewEdit.js","reviews/ReviewList.js","reviews/index.js","visitors/Aside.js","visitors/SegmentsInput.tsx","visitors/VisitorEdit.tsx","visitors/index.ts","visitors/AddressField.tsx","invoices/InvoiceShow.tsx","invoices/InvoiceList.tsx","invoices/index.ts","products/GridList.js","products/ProductList.js","products/Poster.js","products/ProductCreate.js","products/ProductEdit.js","products/index.js","categories/LinkToRelatedProducts.tsx","categories/CategoryList.tsx","products/ThumbnailField.tsx","products/ProductRefField.tsx","guides.ts","categories/CategoryEdit.tsx","categories/index.ts","layout/SubMenu.tsx","layout/Menu.tsx","layout/Layout.tsx","layout/Login.tsx","dashboard/Welcome.tsx","dashboard/CardIcon.tsx","dashboard/MonthlyRevenue.tsx","dashboard/NbNewOrders.tsx","dashboard/PendingOrders.tsx","dashboard/PendingReviews.tsx","dashboard/NewCustomers.tsx","dashboard/Dashboard.tsx","dashboard/index.ts","configuration/actions.ts","configuration/Configuration.tsx","segments/LinkToRelatedCustomers.js","segments/Segments.js","routes.js","i18n/en.ts","tours/Tour.js","tours/TourList.js","tours/index.js","dataProvider/index.js","fakeServer/index.js","App.tsx","index.tsx"],"names":["darkTheme","palette","primary","main","type","lightTheme","secondary","light","dark","contrastText","overrides","MuiFilledInput","root","backgroundColor","authProvider","login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","checkAuth","getItem","reject","getPermissions","Logo","props","width","height","viewBox","aria-label","style","lineHeight","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","strokeWidth","fill","d","useStyles","makeStyles","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","forwardRef","ref","translate","useTranslate","MenuItemLink","to","primaryText","leftIcon","onClick","CustomUserMenu","UserMenu","CustomAppBar","classes","version","useVersion","data","useQuery","resource","payload","filter","playedOn","numberOfTours","length","AppBar","userMenu","Typography","variant","color","className","id","IconButton","component","Link","Badge","badgeContent","languages","locale","name","defaultLanguage","menuPaper","padding","menuList","toolContainer","margin","marginTop","marginBottom","columnsList","maxHeight","overflowY","background","ToolContainer","children","ColumnsTool","preferenceKey","defaultColumns","gutterBottom","key","anchorEl","preference","columns","label","GridOrListTool","view","setView","ButtonGroup","Button","Actions","currentSort","filters","displayedFilters","exporter","filterValues","permanentFilter","basePath","hasCreate","showFilter","selectedIds","onUnselectItems","maxResults","total","hasColumnsSelector","hasViewSelector","rest","React","useState","setAnchorEl","open","Boolean","tools","push","TopToolbar","sanitizeListRestProps","cloneElement","context","CreateButton","ExportButton","disabled","sort","aria-controls","aria-haspopup","event","currentTarget","size","keepMounted","onClose","paper","list","map","tool","EnterpriseList","defaultOmittedColumns","defaultView","visibleColumns","useSelectedColumns","preferences","omit","usePreferences","childrenElements","useMemo","List","actions","display","flexWrap","chip","SegmentsField","record","groups","segmentId","segment","segments","find","s","Chip","defaultProps","addLabel","source","input","SegmentInput","SelectInput","choices","AvatarField","Avatar","src","avatar","parseInt","theme","alignItems","marginRight","spacing","PureFullNameField","pure","first_name","last_name","CustomerLinkField","ColoredNumberField","WrappedComponent","Colored","displayName","colored","NumberField","card","flexDirection","cardTitleContent","justifyContent","cardContent","typography","body1","MobileGrid","ids","Card","CardHeader","CardContent","DateField","nb_commands","options","currency","position","editButton","top","right","DesktopGrid","fields","RouterLink","linkToRecord","field","fieldName","VisitorFilter","Filter","SearchInput","alwaysOn","DateInput","NullableBooleanInput","defaultValue","visitorListColumn","customer","last_seen","total_spent","latest_purchase","showTime","has_newsletter","BooleanField","VisitorList","isXsmall","useMediaQuery","breakpoints","down","order","perPage","Datagrid","rowClick","marginLeft","email","address","maxWidth","zipcode","city","comment","password","confirm_password","validatePasswords","errors","requiredValidate","required","SectionTitle","Separator","Box","pt","VisitorCreate","Create","SimpleForm","validate","TextInput","autoFocus","formClassName","validation","fullWidth","multiline","PasswordInput","render","basket","NbItemsField","FunctionField","textAlign","CustomerReferenceField","ReferenceField","reference","useListStyles","cardContentRow","TextField","OrderFilter","ReferenceInput","AutocompleteInput","optionText","choice","useDatagridStyles","TabbedDatagrid","tabs","state","ordered","delivered","cancelled","handleChange","value","setFilters","status","this","isXSmall","Tabs","centered","indicatorColor","onChange","Tab","Divider","optimized","Component","StyledTabbedDatagrid","OrderList","filterDefaultValues","container","minWidth","rightAlignedCell","boldCell","Basket","useQueryWithStore","item","product_id","productId","admin","resources","products","r","reduce","prev","next","loaded","Paper","elevation","Table","TableHead","TableRow","TableCell","TableBody","price","toLocaleString","undefined","quantity","colSpan","total_ex_taxes","delivery_fees","tax_rate","classnames","OrderTitle","useEditStyles","edit","aside","BooleanInput","icon","OrderIcon","BulkAcceptButton","notify","useNotify","redirectTo","useRedirect","unselectAll","useUnselectAll","useUpdateMany","action","CRUD_UPDATE_MANY","undoable","onSuccess","onFailure","approve","loading","BulkRejectButton","link","textDecoration","inline","ReviewMobileList","ListItem","button","ListItemAvatar","linkType","ListItemText","secondaryTypographyProps","noWrap","hasBulkActions","ProductReferenceField","opacity","large","small","StarRatingField","Array","rating","_","i","rowStyle","selectedRow","index","defaultStyle","selected","borderLeftColor","green","borderLeftWidth","borderLeftStyle","orange","red","headerRow","headerCell","rowCell","ReviewListDesktop","useTheme","cellClassName","useFilterStyles","ReviewFilter","AcceptButton","useUpdate","paddingRight","RejectButton","ReviewEditToolbar","handleSubmitWithRedirect","invalid","saving","SaveButton","redirect","submitOnEnter","DeleteButton","paddingTop","form","up","inlineField","ReviewEdit","onCancel","controllerProps","useEditController","save","toolbar","rowsMax","ReviewsBulkActionButtons","BulkDeleteButton","flexGrow","transition","transitions","create","duration","enteringScreen","listWithDrawer","drawerPaper","zIndex","ReviewList","history","useHistory","handleClose","useCallback","path","match","isMatch","params","bulkActionButtons","ReviewListMobile","Drawer","anchor","ReviewIcon","useAsideStyles","EventList","useGetList","page","customer_id","orders","orderIds","reviews","reviewIds","events","mixOrdersAndReviews","m","mb","mr","smart_count","eventsFromOrders","date","eventsFromReviews","concat","e1","e2","Date","useEventStyles","cardHeader","clamp","Order","subheader","Review","EditButton","Tooltip","Aside","SegmentsInput","addField","SelectArrayInput","VisitorTitle","VisitorForm","FormWithRedirect","formProps","md","lg","xs","sm","ml","mt","Toolbar","handleSubmit","VisitorIcon","AddressField","CustomerField","InvoiceShow","useShowController","Grid","align","alignContent","toLocaleDateString","invoices","ListFilters","expand","InvoiceIcon","gridList","tileBar","placeholder","grey","getColsForWidth","LoadingGridList","nbChildren","fn","nbItems","cellHeight","cols","GridListTile","from","LoadedGridList","data-tour-id","thumbnail","alt","GridListTileBar","subtitle","withWidth","useQuickFilterStyles","QuickFilter","ProductFilter","NumberInput","ProductList","pagination","Pagination","rowsPerPageOptions","content","img","Poster","image","styles","stock","widthFormGroup","heightFormGroup","ProductCreate","TabbedForm","FormTab","InputProps","startAdornment","InputAdornment","endAdornment","allowEmpty","ProductTitle","createStyles","ReferenceManyField","target","ProductIcon","LinkToRelatedProducts","pathname","search","stringify","JSON","category_id","CategoryList","ThumbnailField","ProductRefField","min","max","CategoryTitle","minimumFractionDigits","CategoryIcon","sidebarIsOpen","paddingLeft","sidebarIsClosed","SubMenu","handleToggle","isOpen","dense","header","MenuItem","ListItemIcon","placement","Collapse","in","timeout","unmountOnExit","disablePadding","Menu","onMenuClick","menuCatalog","menuSales","menuCustomers","setState","useSelector","ui","sidebarOpen","menu","DashboardMenuItem","categories","ms","setTimeout","guides","before","a","steps","Math","ceil","floor","random","joyrideProps","beacon","after","getAttribute","slice","click","disableBeacon","menuOverlay","document","querySelector","setTourPreferences","arrowColor","CustomSidebar","Sidebar","tourPreferences","initialState","Layout","appBar","sidebar","minHeight","backgroundRepeat","backgroundSize","hint","renderInput","meta","touched","error","inputProps","helperText","Form","withTypes","Login","setLoading","useLogin","location","useLocation","onSubmit","auth","nextPathname","catch","message","values","noValidate","CardActions","CircularProgress","thickness","Notification","LoginWithTheme","ThemeProvider","createMuiTheme","media","mediaUrl","toString","Welcome","CardMedia","href","float","borderRadius","CardIcon","Icon","bgColor","MonthlyRevenue","DollarIcon","NbNewOrders","ShoppingCartIcon","cost","text","PendingOrders","customers","nb_items","customer_name","ListItemSecondaryAction","titleLink","listItemText","WebkitLineClamp","WebkitBoxOrient","query","PendingReviews","nb","CommentIcon","NewCustomers","aMonthAgo","setDate","getDate","setHours","setMinutes","setSeconds","setMilliseconds","has_ordered","first_seen_gte","toISOString","visitors","CustomerIcon","flexColumn","leftCol","rightCol","singleCol","Dashboard","dataProvider","useDataProvider","isSmall","fetchOrders","getList","date_gte","recentOrders","aggregations","stats","revenue","nbNewOrders","pendingOrders","maximumFractionDigits","getMany","pendingOrdersCustomers","fetchReviews","nbPendingReviews","pendingReviews","review","pendingReviewsCustomers","useEffect","changeTheme","Configuration","useLocale","setLocale","useSetLocale","dispatch","useDispatch","Title","LinkToRelatedCustomers","Segments","exact","customEnglishMessages","englishMessages","pos","configuration","language","dashboard","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","items","welcome","aor_button","demo_button","sales","catalog","commands","first_seen","last_seen_gte","birthday","fieldGroups","identity","change_password","delete","password_mismatch","amount","delivery","sum","unit_price","date_lte","total_gte","returned","command_id","height_gte","height_lte","stock_lte","width_gte","width_lte","details","description","relative_to_poster","detail","accept","notification","approved_success","approved_error","rejected_success","rejected_error","compulsive","collector","ordered_once","regular","returns","reviewer","cursor","visited","rightButton","newIcon","paddingBottom","buyIcon","playedOnIndicator","refresh","useRefresh","start","usePlayback","useMutation","setPlayed","tour","process","markdownToReact","startIcon","boxShadow","gridContainer","ListActions","reset","resetLoading","markAsPlayed","markAsPlayedLoading","GridList","Tour","DirectionsBusIcon","then","factory","default","provider","i18nProvider","polyglotI18nProvider","messages","App","setDataProvider","restoreFetch","fakeServerFactory","REACT_APP_DATA_PROVIDER","dataProviderFactory","dataProviderInstance","fetchDataProvider","themeFromType","Admin","customRoutes","loginPage","layout","Resource","tours","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ba0041cc.chunk.js","sourcesContent":["export const darkTheme = {\n    palette: {\n        primary: {\n            main: '#90caf9',\n        },\n        type: 'dark', // Switching the dark mode on is a single property value change.\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n    },\n    overrides: {\n        MuiFilledInput: {\n            root: {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                '&$disabled': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n            },\n        },\n    },\n};\n","import { AuthProvider } from 'ra-core';\n\nconst authProvider: AuthProvider = {\n    login: ({ username }) => {\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    },\n    logout: () => {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    },\n    checkError: () => Promise.resolve(),\n    checkAuth: () =>\n        localStorage.getItem('username') ? Promise.resolve() : Promise.reject(),\n    getPermissions: () => Promise.reject('Unknown method'),\n};\n\nexport default authProvider;\n","import React, { SVGProps } from 'react';\n\nconst Logo = (props: SVGProps<SVGSVGElement>) => (\n    <svg width={234.532} height={20.475} viewBox=\"0 0 62.053 5.417\" {...props}>\n        <g\n            aria-label=\"~Posters Galore~\"\n            style={{\n                lineHeight: 1.25,\n            }}\n            fontWeight={400}\n            fontSize={7.056}\n            fontFamily=\"Permanent Marker\"\n            letterSpacing={0}\n            wordSpacing={0}\n            strokeWidth={0.265}\n            fill=\"#fff\"\n        >\n            <path d=\"M.227 3.659Q.124 3.652.062 3.61 0 3.562 0 3.486q0-.068.062-.124.041-.103.083-.165L.24 3.06q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.103.048.165.09.07.04.131.096.076.04.118.09.048.04.082.089.02.027.083.09.062.061.151.061.083 0 .138-.075.062-.076.124-.131.055-.145.18-.22.055-.028.089-.035l.076-.014q.02-.007.041-.007l.035-.014.075-.007h.09q.117-.034.207-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.09.131l-.137.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.056.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035zM4.417 3.225q.007-.028.027-.021.028 0 .048-.007-.055-.055-.068-.145-.014-.096-.07-.158.014-.035.021-.069.014-.034.062-.028-.02-.151.007-.282.028-.131.083-.248.062-.117.138-.228.082-.117.158-.234.062-.014.076.014.014.02.048-.014.11-.076.152-.165.041-.097.041-.207.062-.179.138-.351.083-.18.186-.331.103-.152.22-.262.118-.117.255-.179.097-.083.242-.152.151-.068.316-.103.173-.041.352-.041.179-.007.33.034.035.014.042-.014Q7.228 0 7.255 0q.345.041.614.138.275.096.468.269.131.206.248.447.117.235.18.496.068.255.061.531-.007.276-.117.551-.241.303-.585.49-.345.179-.745.303-.392.117-.82.193-.42.075-.82.165.007.186 0 .4-.006.206-.048.42-.034.207-.11.406-.069.2-.193.372-.138-.006-.29.028-.144.034-.261.069l-.11-.069q-.049-.028-.124-.034.02-.083-.042-.173-.055-.09-.117-.172-.055-.09-.076-.172-.013-.09.083-.159-.055-.048-.055-.151.028.027.069.027-.014-.124.027-.296.049-.172.076-.338.035-.172.014-.31-.02-.144-.165-.206zm1.791-1.613l-.048.138q-.014.055-.035.103-.02.049-.048.097l-.048.11q.014.042.055.062.041.02.055.062.097-.048.193-.069.097-.027.193-.041.096-.014.193-.035.096-.02.2-.068.103-.049.213-.076l.228-.07q.11-.034.213-.075.104-.048.18-.124-.097-.09-.29-.158-.193-.07-.42-.083-.22-.02-.448.028-.22.048-.386.2zM12.506 3.1q-.007.083.013.16.021.075.049.15.034.07.062.145.027.076.041.152.014.096 0 .214-.014.11-.048.22-.035.103-.09.193-.055.083-.13.124-.097.124-.235.193-.138.069-.255.165-.076.048-.172.07l-.186.04q-.076.042-.18.09l-.213.083q-.11.034-.22.055-.11.014-.193.007-.207.076-.407.096-.193.028-.455-.027-.248.034-.461-.021-.207-.055-.372-.172-.159-.124-.283-.29-.117-.172-.193-.358-.055-.393.028-.71.083-.323.234-.592.159-.276.358-.503.2-.234.386-.455.042.014.062 0 .028-.02.048-.048.021-.035.042-.062.027-.028.062-.035.048-.103.138-.151.096-.055.151-.152.062-.014.104-.041.04-.028.075-.062.042-.035.083-.062.041-.035.097-.048v-.076q.124-.055.179-.124l.144-.18q.062-.006.097-.006.041 0 .117-.014.055-.096.096-.145.049-.048.138-.103.083.041.18.055.103.014.178.09.007.069.042.11.034.034.076.069.041.027.075.062.042.034.056.096.027.007.034-.007.014-.013.041-.007.021.097.049.131.027.028.055.117-.035.07-.055.145-.014.07-.083.104-.007.048.027.055.035 0 .042.034.007.062-.02.09.164.268.295.572.131.296.297.565zm-.862.655q.028-.076.07-.124.048-.048.054-.145-.034-.055-.04-.082-.008-.035-.008-.104-.151-.213-.262-.454-.11-.248-.248-.462-.013.028-.048.055-.034.028-.076-.014-.013.055-.048.083-.034.02-.076.02-.041-.006-.09-.02-.04-.02-.075-.048-.2.158-.4.31-.2.151-.358.351-.028.014-.034.014-.007-.007-.042.007-.055.13-.138.241-.075.103-.151.214-.076.11-.131.234-.055.124-.062.29.117.096.276.116.158.021.323.007.173-.013.331-.041.165-.034.303-.034.29-.07.496-.18.207-.117.434-.234zM12.898 2.067q.049-.145.152-.248.11-.103.234-.172.131-.076.269-.124t.262-.083q.275-.117.585-.22.317-.11.641-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.07.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.076.096.104 0 .18.049.075.048.124.117.048.069.069.151.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.082.09.13.2.014.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.138.007-.075 0-.158-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.44-.014.215-.048.4-.13.187-.083.352-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.076-.02q-.13-.076-.296-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.414-.124-.013-.035-.034-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145z\" />\n            <path d=\"M19.988 1.853q-.172 0-.372.028-.2.02-.392.048-.138.02-.27.035-.123.013-.226.02-.049.152-.097.27-.048.116-.103.226-.055.118-.104.242-.041.117-.082.255-.07.11-.117.206-.042.09-.07.207-.082.103-.123.22-.042.11-.062.193l-.028.083q-.041.041-.048.069-.007.02-.035.041-.007.076-.048.152-.014.034-.02.069-.007.027-.007.041 0 .069-.035.09.007.034 0 .075l-.014.07q-.02.082-.013.13l.034.049q.02.02.028.055.04.027.062.034.027.02.082.048l.062.07q.035.199-.062.316-.103.131-.351.131h-.083q-.034-.034-.041-.055l-.09-.034q-.034-.014-.062-.056-.09-.04-.144-.068l-.062-.035v-.083q-.049-.062-.076-.137-.02-.076-.035-.152-.013-.062-.034-.117-.014-.055-.041-.097-.014-.4.075-.675.09-.275.186-.53l.11-.276q.056-.145.097-.296l.062-.07.076-.178.069-.152q.02-.048.034-.09l.035-.082q-.042 0-.076.007-.035 0-.069.007l-.076.013h-.069q-.048 0-.069-.006-.075.034-.165.034H17.019q-.014-.007-.028-.007-.069 0-.11.02h-.228q-.013 0-.034.008h-.034q-.049 0-.104-.007-.055-.014-.117-.048-.082-.11-.11-.118l-.062-.082q-.007-.042-.02-.076-.014-.041-.028-.09-.028-.069-.055-.144-.021-.083-.021-.193.007-.055.028-.083l.034-.048.02-.104.09.007h.193q.22 0 .448-.013l.469-.042.275-.027.296-.028q.028-.062.056-.117l.068-.034q.124-.007.173.034.055.034.09.069l.302-.028q.159-.02.317-.048.235-.034.469-.062.241-.027.462-.027.096 0 .186.006.09.007.165.021l.069.048q.02.042.055.076l.083.069q.082.076.165.18.083.103.062.302-.055.083-.083.097l-.062.082-.069-.006q-.04 0-.075.013-.035.007-.07.021l-.054.028-.062.013h-.104q-.034-.007-.076-.007z\" />\n            <path d=\"M23.303 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.338.324-.186.082-.407.124-.22.034-.454.075-.228.042-.455.18-.09-.035-.166 0-.068.034-.206.02-.042.042-.104.062-.062.014-.124.035.028.062.021.13 0 .063.02.104.242.02.531-.007.297-.028.58-.034.006.034-.008.048-.014.007-.007.034.049.035.097.09l.096.096q.048.049.097.083.055.028.124.02.027.056.034.125.014.062-.014.13-.11.076-.22.159-.11.076-.234.138-.118.062-.255.103-.131.035-.297.028h-.055q-.014 0-.041-.02-.055.034-.159.02-.096-.014-.151.02-.076-.034-.186-.027-.104 0-.186-.028-.11.145-.2.31-.09.166-.159.352.235.034.386.027.159-.007.297-.02.137-.021.282-.035.145-.02.365-.014.138-.075.324-.096.193-.028.352-.083.055.021.096.076.041.048.076.097.041.04.082.075.042.035.104.028.027.027.034.069.014.034.02.069.008.034.022.062.02.02.062.013-.104.228-.242.352-.13.117-.303.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.04-.014-.096-.014-.158.035-.379.062-.22.028-.448.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.075-.11-.014-.07-.09-.104-.007-.09-.027-.2l-.042-.227q-.02-.124-.034-.24-.007-.118.014-.215.02-.103.082-.186.07-.082.048-.179.035-.007.042-.034.007-.035.055-.028.041-.124.09-.234.048-.11.096-.214.055-.103.103-.206.055-.11.104-.241-.097-.09-.145-.193-.041-.11-.062-.214-.02-.11-.035-.22-.013-.118-.048-.235.07-.103.166-.165.103-.069.22-.11.117-.042.255-.07.138-.027.29-.061.275-.09.489-.138.22-.048.427-.076.213-.034.44-.062.228-.027.518-.083.062.062.117.062.027-.062.062-.034.041.02.034-.041.07.117.172.2.11.075.242.13zM24.185 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.125.02-.034.035-.075.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.014-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.035 0-.056-.048-.02-.049-.048-.097.02-.124.042-.234.02-.11.048-.207.034-.096.055-.193.02-.096-.02-.2.027.021.04-.007.014-.034.021-.082.007-.055.007-.104 0-.055-.007-.09.07-.178.11-.364.049-.193.083-.38.041-.185.083-.364.041-.18.11-.331.076-.014.165.02.097.028.118.076.179-.138.317-.33.137-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.172.104.282.276.056.027.09.062.041.028.097.062v.083q.082.075.13.179.056.096.097.213l.083.228q.04.11.096.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.008.027 0 .076-.02.303-.199.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .02.035.166.103.262.165.097.062.18.103.09.042.186.076.103.028.282.07.18.04.276.068.103.02.186.041l.165.028.248.02q.062.063.104.152.048.083.062.172.013.083.006.166-.006.076-.048.124.007.02.028.02.027-.006.055 0-.041.028-.069.07l-.055.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.406-.165-.152-.076-.27-.145-.11-.075-.206-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.151.206-.069.11-.097.262.242-.027.503-.13.262-.111.496-.208-.027-.213-.151-.344-.117-.13-.248-.172zM27.01 2.067q.048-.145.151-.248.11-.103.234-.172.131-.076.27-.124.137-.048.26-.083.277-.117.587-.22.317-.11.64-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.069.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.077.096.103 0 .179.049.076.048.124.117t.069.151q.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.083.09.13.2.015.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.137.007-.076 0-.159-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.441-.014.214-.048.4-.13.186-.083.351-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.075-.02q-.131-.076-.297-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.413-.124-.014-.035-.035-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145zM32.797 3.535q0-.076.021-.138.02-.062.007-.159.213-.454.482-.84.276-.393.655-.69.062-.047.096-.096.042-.055.076-.103.041-.048.09-.083.048-.041.124-.055.172-.2.413-.365.241-.165.503-.317t.524-.31q.268-.159.482-.345.076.049.117.035.048-.02.097-.007.062.13.158.186.103.048.207.103.11.049.2.124.096.07.144.193-.048 0-.048.035.007.034.02.076.014.04.014.075 0 .035-.062.035 0 .048.049.048.048 0 .048.048 0 .042-.02.07-.015.02 0 .075-.166.11-.373.214l-.427.206q-.22.11-.455.241-.227.124-.455.29-.227.165-.461.365-.228.2-.441.427-.214.22-.4.462-.186.234-.317.461.014.035.035.062.027.028.041.063.262.013.49 0 .227-.021.454.027.028-.02.034-.055.007-.035.042-.048.468-.049.875-.152.406-.11.827-.22-.124-.049-.22-.076-.042-.041 0-.069.047-.034.075-.069-.11-.062-.186-.165-.069-.104-.083-.269.049-.041.049-.096 0-.056-.049-.09-.034-.014-.041 0l-.014.027q0 .014-.014.028-.007.014-.034 0 .007-.076.034-.124.028-.048.042-.117l.572-.38q.09.07.22.146.131.075.276.151.144.076.296.159.152.075.282.151.125.055.214.138.09.076.172.165l.166.166q.082.082.2.138-.014.11.013.179.028.069.014.165-.13.234-.317.4-.186.158-.42.275-.228.117-.49.2-.261.076-.537.152-.275.069-.558.151-.276.076-.544.18-.117 0-.2.006-.083.007-.159.021l-.151.028q-.076.013-.165.02-.035-.007-.049.014-.007.02-.027.035-.138.02-.248.02h-.186q-.097 0-.2.028-.104.027-.193.02-.62-.027-.972-.44-.351-.414-.385-1.137.006-.035-.014-.042-.02-.014-.035-.027z\" />\n            <path d=\"M42.01 4.589q-.042.117-.125.241-.075.117-.186.214-.103.09-.234.151-.13.062-.275.07-.09-.022-.124-.05-.028-.02-.062-.04-.021-.014-.042-.021-.014-.014-.027-.02l-.083-.035.028-.09q.013-.055-.007-.083-.021-.034-.083-.09l-.041-.04q-.021-.021-.035-.042l-.117-.13.186-.049q.172-.048.227-.124.062-.076.049-.255-.138-.027-.235-.007-.09.02-.186.048-.124.035-.255.062-.124.021-.275.021h-.104l-.103-.014-.069-.013q-.014-.076-.027-.083l-.028-.028q-.034-.034-.076-.09-.034-.061-.013-.15-.035-.063-.042-.125-.041.083-.062.172l-.027.07-.07.013q-.013.007-.02.035-.007.02-.007.034l-.034.117-.028.028q-.014.007-.027.02-.014.062-.035.124-.02.062-.041.118-.035.09-.062.179-.02.082-.014.165l-.028.076q-.034.041-.075.069l-.083.041q-.014.014-.041.028l-.035.013-.02.076-.083.014-.11.02q-.028.008-.07.008l-.068-.007-.117-.097q-.042-.041-.097-.076-.062-.082-.069-.124l-.014-.075q-.013-.042-.013-.07-.007-.027-.021-.04l-.09-.083.076-.062.007-.117q.138-.352.29-.676l.323-.661q.056-.11.104-.22l.11-.221q-.007-.02-.007-.048t.014-.062q.076-.118.124-.207l.096-.193q.055-.117.11-.227.063-.11.152-.228l.11-.048.049-.014q.027-.014.062-.014l.103.014q.193-.09.338-.248.144-.165.296-.393l.069-.096.09.055q.034.02.096.041.062.014.13.035.125.027.235.062.11.034.18.103.04.11.047.166.007.055.021.11.02.117.035.234.02.117.027.262.035.117.055.234.028.11.048.228l.07.323q.034.152.089.29.055 0 .069.007.034-.014.069-.021l.09-.014.075-.007.028.07q.007.034.069.068.09.007.13.042.042.027.076.062.028.027.055.04l.104.042-.055.104q-.07.124-.2.24-.124.111-.283.187.007.041.007.082.007.035.02.076.022.117.035.241.014.124 0 .255zm-1.992-1.192q.207-.014.372-.028.173-.02.38-.062-.049-.206-.104-.427-.055-.227-.117-.448l-.042.07q-.137.144-.268.323-.124.18-.214.338l-.083.124q-.04.062-.075.124.041-.007.075-.007.042 0 .076-.007zM44.29 5.092q-.193.062-.42.124-.228.062-.455.062-.344 0-.544-.172-.035-.076-.062-.104l-.042-.055q-.013-.034-.02-.09-.083-.096-.131-.22-.048-.13-.07-.262-.013-.138-.006-.275.014-.138.048-.262.014-.028.014-.055l.014-.062q.027-.11.055-.214.034-.103.09-.179-.028-.062 0-.138.027-.076.061-.138.097-.261.159-.44.069-.187.138-.366.117-.31.22-.613.104-.303.186-.655.055-.034.083-.048.041-.014.069-.02.124.062.29.124.165.055.275.055.055.034.069.055l.027.027q.076.09.131.186.055.09.035.242-.042.062-.062.062-.035.137-.076.234-.035.096-.076.193-.048.103-.09.206-.04.104-.068.255-.028.035-.042.062-.007.028-.02.062-.014.035-.035.076-.014.035-.048.062-.02.18-.069.29-.041.11-.09.22-.082.2-.151.4-.062.2-.076.454.035-.013.062-.013h.062q.062 0 .145.02.207-.11.448-.13.248-.021.489-.028H45q.096 0 .179-.014.062.035.076.041h.055q.048 0 .083.007.082.076.158.11.076.035.159.063.075.027.144.062.076.027.145.082l.048.297q.048.062.041.082 0 .055-.027.083l.014.076q-.104.02-.145.048-.034.027-.069.062-.055.007-.083.007h-.04q-.097 0-.235.034-.186-.062-.386-.062-.076 0-.159.007l-.165.014q-.083.014-.172.02-.083.008-.172.008zM50.25 3.1q-.007.083.014.16.02.075.048.15.035.07.062.145.028.076.041.152.014.096 0 .214-.013.11-.048.22-.034.103-.09.193-.054.083-.13.124-.097.124-.235.193-.137.069-.254.165-.076.048-.173.07l-.186.04q-.076.042-.179.09l-.213.083q-.11.034-.221.055-.11.014-.193.007-.207.076-.406.096-.193.028-.455-.027-.248.034-.462-.021-.207-.055-.372-.172-.158-.124-.282-.29-.118-.172-.193-.358-.055-.393.027-.71.083-.323.235-.592.158-.276.358-.503.2-.234.386-.455.041.014.062 0 .027-.02.048-.048.02-.035.041-.062.028-.028.062-.035.048-.103.138-.151.097-.055.152-.152.062-.014.103-.041.041-.028.076-.062.041-.035.082-.062.042-.035.097-.048v-.076q.124-.055.18-.124l.144-.18q.062-.006.096-.006.042 0 .117-.014.056-.096.097-.145.048-.048.138-.103.082.041.179.055.103.014.179.09.007.069.041.11.035.034.076.069.041.027.076.062.041.034.055.096.028.007.034-.007.014-.013.042-.007.02.097.048.131.028.028.055.117-.034.07-.055.145-.014.07-.083.104-.007.048.028.055.034 0 .041.034.007.062-.02.09.165.268.296.572.13.296.296.565zm-.861.655q.027-.076.069-.124.048-.048.055-.145-.035-.055-.041-.082-.007-.035-.007-.104-.152-.213-.262-.454-.11-.248-.248-.462-.014.028-.048.055-.035.028-.076-.014-.014.055-.048.083-.035.02-.076.02-.042-.006-.09-.02-.041-.02-.076-.048-.2.158-.4.31-.2.151-.358.351-.027.014-.034.014-.007-.007-.041.007-.055.13-.138.241-.076.103-.152.214-.076.11-.13.234-.056.124-.063.29.118.096.276.116.158.021.324.007.172-.013.33-.041.166-.034.304-.034.29-.07.496-.18.207-.117.434-.234zM51.78 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.124.02-.035.035-.076.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.013-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.034 0-.055-.048-.02-.049-.048-.097.02-.124.04-.234.022-.11.05-.207.034-.096.054-.193.02-.096-.02-.2.027.021.04-.007.015-.034.022-.082.007-.055.007-.104 0-.055-.007-.09.068-.178.11-.364.048-.193.082-.38l.083-.364q.041-.18.11-.331.076-.014.166.02.096.028.117.076.179-.138.317-.33.138-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.173.104.283.276.055.027.09.062.04.028.096.062v.083q.083.075.13.179.056.096.097.213.042.11.083.228.041.11.097.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.007.027 0 .076-.02.303-.2.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .021.035.166.103.262.165.097.062.18.103.089.042.185.076.104.028.283.07.179.04.275.068.104.02.186.041l.166.028.248.02q.062.063.103.152.048.083.062.172.014.083.007.166-.007.076-.048.124.007.02.028.02.027-.006.055 0-.042.028-.07.07l-.054.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.407-.165-.151-.076-.268-.145-.11-.075-.207-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.15.206-.07.11-.097.262.24-.027.503-.13.261-.111.496-.208-.028-.213-.152-.344-.117-.13-.248-.172zM58.332 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.337.324-.186.082-.407.124-.22.034-.455.075-.227.042-.454.18-.09-.035-.166 0-.069.034-.207.02-.04.042-.103.062-.062.014-.124.035.028.062.02.13 0 .063.021.104.242.02.531-.007.296-.028.579-.034.007.034-.007.048-.014.007-.007.034.048.035.096.09l.097.096q.048.049.096.083.055.028.124.02.028.056.035.125.014.062-.014.13-.11.076-.22.159-.11.076-.235.138-.117.062-.255.103-.13.035-.296.028h-.055q-.014 0-.041-.02-.056.034-.159.02-.096-.014-.152.02-.075-.034-.186-.027-.103 0-.186-.028-.11.145-.2.31-.089.166-.158.352.234.034.386.027.158-.007.296-.02.138-.021.283-.035.144-.02.365-.014.138-.075.324-.096.193-.028.351-.083.055.021.097.076.041.048.075.097.042.04.083.075.041.035.104.028.027.027.034.069.014.034.02.069.008.034.021.062.021.02.062.013-.103.228-.24.352-.132.117-.304.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.041-.014-.096-.014-.159.035-.38.062-.22.028-.447.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.076-.11-.013-.07-.09-.104-.006-.09-.027-.2l-.041-.227q-.02-.124-.035-.24-.007-.118.014-.215.02-.103.083-.186.069-.082.048-.179.035-.007.041-.034.007-.035.056-.028.04-.124.09-.234.047-.11.096-.214.055-.103.103-.206.055-.11.103-.241-.096-.09-.144-.193-.042-.11-.062-.214-.021-.11-.035-.22-.014-.118-.048-.235.069-.103.165-.165.104-.069.22-.11.118-.042.256-.07.138-.027.29-.061.275-.09.488-.138.22-.048.427-.076.214-.034.441-.062.228-.027.517-.083.062.062.117.062.028-.062.062-.034.042.02.035-.041.069.117.172.2.11.075.241.13zM58.394 3.659q-.103-.007-.165-.049-.062-.048-.062-.124 0-.068.062-.124.041-.103.083-.165l.096-.138q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.104.048.166.09.068.04.13.096.076.04.118.09.048.04.082.089.021.027.083.09.062.061.152.061.082 0 .137-.075.062-.076.124-.131.056-.145.18-.22.055-.028.09-.035l.075-.014q.02-.007.041-.007.021-.007.035-.014l.076-.007h.09q.116-.034.206-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.089.131l-.138.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.055.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035z\" />\n        </g>\n    </svg>\n);\n\nexport default Logo;\n","import React, { forwardRef } from \"react\";\nimport {\n  AppBar,\n  UserMenu,\n  MenuItemLink,\n  useTranslate,\n  useQuery,\n  useVersion,\n} from \"react-admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  ToggleThemeButton,\n  LanguageSwitcher,\n} from \"@react-admin/ra-preferences\";\n\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport TourIcon from \"@material-ui/icons/HelpOutline\";\n\nimport Logo from \"./Logo\";\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\nconst ConfigurationMenu = forwardRef<any, any>((props, ref) => {\n  const translate = useTranslate();\n  return (\n    <MenuItemLink\n      ref={ref}\n      to=\"/configuration\"\n      primaryText={translate(\"pos.configuration\")}\n      leftIcon={<SettingsIcon />}\n      onClick={props.onClick}\n    />\n  );\n});\n\nconst CustomUserMenu = (props: any) => (\n  <UserMenu {...props}>\n    <ConfigurationMenu />\n  </UserMenu>\n);\n\nconst CustomAppBar = (props: any) => {\n  const classes = useStyles();\n\n  const version = useVersion();\n  const { data } = useQuery(\n    {\n      type: \"getList\",\n      resource: \"tours\",\n      payload: { filter: { playedOn: null } },\n    },\n    {\n      version,\n    }\n  );\n\n  let numberOfTours = 0;\n  if (data) {\n    numberOfTours = data.length;\n  }\n\n  return (\n    <AppBar {...props} userMenu={<CustomUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      <Logo />\n      <span className={classes.spacer} />\n      <IconButton to=\"tours\" component={Link} color=\"inherit\">\n        <Badge badgeContent={numberOfTours} color=\"error\" variant=\"dot\">\n          <TourIcon />\n        </Badge>\n      </IconButton>\n      <ToggleThemeButton />\n      <LanguageSwitcher\n        languages={[\n          { locale: \"en\", name: \"English\" },\n          { locale: \"fr\", name: \"Français\" },\n        ]}\n        defaultLanguage=\"English\"\n      />\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import React, { cloneElement, useMemo } from \"react\";\n\nimport {\n  List,\n  Button,\n  TopToolbar,\n  CreateButton,\n  sanitizeListRestProps,\n  ExportButton,\n} from \"react-admin\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  SelectColumnsMenu,\n  useSelectedColumns,\n  usePreferences,\n} from \"@react-admin/ra-preferences\";\n\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles({\n  menuPaper: {\n    padding: \"1rem 0\",\n  },\n  menuList: {\n    \"&> * > *\": {\n      padding: \"0 2rem\",\n    },\n  },\n  toolContainer: {\n    margin: \"20px 0\",\n    \"&:first-child\": {\n      marginTop: 0,\n    },\n    \"&:last-child\": {\n      marginBottom: 0,\n    },\n  },\n  columnsList: {\n    maxHeight: \"250px\",\n    overflowY: \"auto\",\n    margin: 0,\n    background: \"#eee\",\n  },\n});\n\nconst ToolContainer = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.toolContainer}>{children}</div>;\n};\n\nconst ColumnsTool = ({ preferenceKey, defaultColumns }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography\n        variant=\"overline\"\n        gutterBottom\n        key=\"columns-selector-tool-title\"\n        component=\"div\"\n      >\n        Columns to display\n      </Typography>\n      <SelectColumnsMenu\n        key=\"columns-selector-tool-menu\"\n        anchorEl\n        preference={preferenceKey}\n        columns={defaultColumns}\n        label=\"\"\n        className={classes.columnsList}\n      />\n    </>\n  );\n};\n\nconst GridOrListTool = ({ preferenceKey, view, setView }) => (\n  <>\n    <Typography\n      variant=\"overline\"\n      gutterBottom\n      key=\"view-selector-tool-title\"\n      component=\"div\"\n    >\n      Layout\n    </Typography>\n\n    <ButtonGroup key=\"view-selector-tool-menu\">\n      <Button\n        color={view === \"table\" ? \"primary\" : \"default\"}\n        onClick={() => setView(\"table\")}\n        label=\"table\"\n      >\n        <TableChartIcon />\n      </Button>\n      <Button\n        color={view === \"grid\" ? \"primary\" : \"default\"}\n        onClick={() => setView(\"grid\")}\n        label=\"grid\"\n      >\n        <AppsIcon />\n      </Button>\n    </ButtonGroup>\n  </>\n);\n\nconst Actions = ({\n  preferenceKey,\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  hasColumnsSelector,\n  defaultColumns,\n  hasViewSelector,\n  view,\n  setView,\n  ...rest\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const tools = [];\n\n  if (hasViewSelector) {\n    tools.push(\n      <GridOrListTool\n        preferenceKey={preferenceKey}\n        view={view}\n        setView={setView}\n      />\n    );\n  }\n\n  if (hasColumnsSelector) {\n    tools.push(\n      <ColumnsTool\n        preferenceKey={preferenceKey}\n        defaultColumns={defaultColumns}\n      />\n    );\n  }\n\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: \"button\",\n        })}\n      <CreateButton basePath={basePath} />\n      {exporter && (\n        <ExportButton\n          disabled={total === 0}\n          resource={resource}\n          sort={currentSort}\n          filter={{ ...filterValues, ...permanentFilter }}\n          exporter={exporter}\n          maxResults={maxResults}\n        />\n      )}\n\n      {tools.length && (\n        <>\n          <IconButton\n            aria-label=\"more\"\n            aria-controls=\"user-preference-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            size=\"small\"\n          >\n            <MoreVertIcon />\n          </IconButton>\n          <Menu\n            id=\"user-preference-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={handleClose}\n            classes={{ paper: classes.menuPaper, list: classes.menuList }}\n          >\n            {tools.map((tool) => (\n              <ToolContainer>{tool}</ToolContainer>\n            ))}\n          </Menu>\n        </>\n      )}\n    </TopToolbar>\n  );\n};\nconst elementHasProp = (element, name, value) =>\n  element.props[name] && element.props[name] === value;\n\nconst hasChildren = (element, type, props) => {\n  if (!React.isValidElement(element)) return false;\n\n  let hasChildrenOfType = false;\n\n  React.Children.map(element, (child) => {\n    if (hasChildrenOfType) return;\n    if (!React.isValidElement(child)) return;\n\n    if (\n      child.type.name === type &&\n      Object.keys(props).every((propName) =>\n        elementHasProp(child, propName, props[propName])\n      )\n    ) {\n      hasChildrenOfType = true;\n      return;\n    }\n\n    hasChildrenOfType = hasChildren(child.props.children, type, props);\n  });\n\n  return hasChildrenOfType;\n};\n\nconst EnterpriseList = (props) => {\n  const {\n    preferenceKey,\n\n    hasColumnsSelector = true,\n    defaultColumns = [],\n    defaultOmittedColumns = [],\n\n    hasViewSelector = true,\n    defaultView = \"small\",\n\n    children,\n    ...rest\n  } = props;\n  const visibleColumns = useSelectedColumns({\n    preferences: `${preferenceKey}.columns`,\n    columns: defaultColumns,\n    omit: defaultOmittedColumns,\n  });\n\n  const [view, setView] = usePreferences(`${preferenceKey}.view`, defaultView);\n\n  const childrenElements = useMemo(\n    () => children({ ...rest, columns: visibleColumns, view }),\n    [visibleColumns, view, children, rest]\n  );\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (\n      hasColumnsSelector &&\n      hasChildren(childrenElements, \"Datagrid\", { optimized: true })\n    ) {\n      throw new Error(\n        \"Columns selector is not compatible with optimized Datagrids, please remove the optimized prop\"\n      );\n    }\n  }\n\n  return (\n    <List\n      {...rest}\n      actions={\n        <Actions\n          preferenceKey={`${preferenceKey}.columns`}\n          hasColumnsSelector={hasColumnsSelector}\n          defaultColumns={defaultColumns}\n          hasViewSelector={hasViewSelector}\n          view={view}\n          setView={setView}\n        />\n      }\n    >\n      {childrenElements}\n    </List>\n  );\n};\n\nexport default EnterpriseList;\n","export default [\n    { id: 'compulsive', name: 'resources.segments.data.compulsive' },\n    { id: 'collector', name: 'resources.segments.data.collector' },\n    { id: 'ordered_once', name: 'resources.segments.data.ordered_once' },\n    { id: 'regular', name: 'resources.segments.data.regular' },\n    { id: 'returns', name: 'resources.segments.data.returns' },\n    { id: 'reviewer', name: 'resources.segments.data.reviewer' },\n];\n","import React, { FC } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { useTranslate } from 'react-admin';\nimport segments from '../segments/data';\nimport { FieldProps, Customer } from '../types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    main: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: -8,\n        marginBottom: -8,\n    },\n    chip: { margin: 4 },\n});\n\nconst SegmentsField: FC<FieldProps<Customer>> = ({ record }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    return record ? (\n        <span className={classes.main}>\n            {record.groups &&\n                record.groups.map(segmentId => {\n                    const segment = segments.find(s => s.id === segmentId);\n\n                    return segment ? (\n                        <Chip\n                            key={segment.id}\n                            className={classes.chip}\n                            label={translate(segment.name)}\n                        />\n                    ) : null;\n                })}\n        </span>\n    ) : null;\n};\n\nSegmentsField.defaultProps = {\n    addLabel: true,\n    source: 'groups',\n};\n\nexport default SegmentsField;\n","import React, { FC } from 'react';\nimport { useTranslate, SelectInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InputProps } from 'ra-core';\n\nimport segments from '../segments/data';\n\nconst useStyles = makeStyles({\n    input: { width: 150 },\n});\n\ninterface Props extends Omit<InputProps, 'source'> {\n    source?: string;\n}\n\nconst SegmentInput: FC<Props> = props => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <SelectInput\n            {...props}\n            choices={segments.map(segment => ({\n                id: segment.id,\n                name: translate(segment.name),\n            }))}\n            className={classes.input}\n        />\n    );\n};\n\nSegmentInput.defaultProps = {\n    source: 'groups',\n};\n\nexport default SegmentInput;\n","import React, { FC } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Customer, FieldProps } from '../types';\n\ninterface Props extends FieldProps<Customer> {\n    className?: string;\n    size?: string;\n}\n\nconst AvatarField: FC<Props> = ({ record, size = '25', className }) =>\n    record ? (\n        <Avatar\n            src={`${record.avatar}?size=${size}x${size}`}\n            style={{ width: parseInt(size, 10), height: parseInt(size, 10) }}\n            className={className}\n        />\n    ) : null;\n\nexport default AvatarField;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport pure from 'recompose/pure';\n\nimport AvatarField from './AvatarField';\nimport { FieldProps, Customer } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n    },\n    avatar: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props extends FieldProps<Customer> {\n    size?: string;\n}\n\nconst FullNameField: FC<Props> = ({ record, size }) => {\n    const classes = useStyles();\n    return record ? (\n        <div className={classes.root}>\n            <AvatarField\n                className={classes.avatar}\n                record={record}\n                size={size}\n            />\n            {record.first_name} {record.last_name}\n        </div>\n    ) : null;\n};\n\nconst PureFullNameField = pure(FullNameField);\n\nPureFullNameField.defaultProps = {\n    source: 'last_name',\n    label: 'resources.customers.fields.name',\n};\n\nexport default PureFullNameField;\n","import React, { FC } from 'react';\nimport { Link } from 'react-admin';\n\nimport FullNameField from './FullNameField';\nimport { FieldProps, Customer } from '../types';\n\nconst CustomerLinkField: FC<FieldProps<Customer>> = props =>\n    props.record ? (\n        <Link to={`/customers/${props.record.id}`}>\n            <FullNameField {...props} />\n        </Link>\n    ) : null;\n\nCustomerLinkField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerLinkField;\n","import React, { ComponentType } from 'react';\nimport { NumberField } from 'react-admin';\nimport { FieldProps } from '../types';\n\nconst colored = <T extends FieldProps>(\n    WrappedComponent: ComponentType<T>\n): ComponentType<T> => {\n    const Colored = (props: T) =>\n        props.record && props.source ? (\n            props.record[props.source] > 500 ? (\n                <span style={{ color: 'red' }}>\n                    <WrappedComponent {...props} />\n                </span>\n            ) : (\n                <WrappedComponent {...props} />\n            )\n        ) : null;\n\n    Colored.displayName = `Colored(${WrappedComponent.displayName})`;\n\n    return Colored;\n};\n\nconst ColoredNumberField = colored<typeof NumberField>(NumberField);\nColoredNumberField.defaultProps = NumberField.defaultProps;\n\nexport default ColoredNumberField;\n","// in src/comments.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DateField, EditButton, useTranslate, NumberField } from 'react-admin';\n\nimport AvatarField from './AvatarField';\nimport ColoredNumberField from './ColoredNumberField';\nimport SegmentsField from './SegmentsField';\nimport { Identifier } from 'ra-core';\nimport { Customer } from '../types';\nimport { FC } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    root: { margin: '1em' },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: {\n        ...theme.typography.body1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\ninterface Props {\n    ids?: Identifier[];\n    data?: { [key: string]: Customer };\n    basePath?: string;\n}\n\nconst MobileGrid: FC<Props> = ({ ids, data, basePath }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    if (!ids || !data) {\n        return null;\n    }\n\n    return (\n        <div className={classes.root}>\n            {ids.map(id => (\n                <Card key={id} className={classes.card}>\n                    <CardHeader\n                        title={\n                            <div className={classes.cardTitleContent}>\n                                <h2>{`${data[id].first_name} ${\n                                    data[id].last_name\n                                }`}</h2>\n                                <EditButton\n                                    resource=\"visitors\"\n                                    basePath={basePath}\n                                    record={data[id]}\n                                />\n                            </div>\n                        }\n                        avatar={<AvatarField record={data[id]} size=\"45\" />}\n                    />\n                    <CardContent className={classes.cardContent}>\n                        <div>\n                            {translate(\n                                'resources.customers.fields.last_seen_gte'\n                            )}\n                            &nbsp;\n                            <DateField\n                                record={data[id]}\n                                source=\"last_seen\"\n                                type=\"date\"\n                            />\n                        </div>\n                        <div>\n                            {translate(\n                                'resources.commands.name',\n                                data[id].nb_commands || 1\n                            )}\n                            &nbsp;:&nbsp;\n                            <NumberField\n                                record={data[id]}\n                                source=\"nb_commands\"\n                                label=\"resources.customers.fields.commands\"\n                            />\n                        </div>\n                        <div>\n                            {translate(\n                                'resources.customers.fields.total_spent'\n                            )}\n                            &nbsp; :{' '}\n                            <ColoredNumberField\n                                record={data[id]}\n                                source=\"total_spent\"\n                                options={{ style: 'currency', currency: 'USD' }}\n                            />\n                        </div>\n                    </CardContent>\n                    {data[id].groups && data[id].groups.length > 0 && (\n                        <CardContent className={classes.cardContent}>\n                            <SegmentsField record={data[id]} />\n                        </CardContent>\n                    )}\n                </Card>\n            ))}\n        </div>\n    );\n};\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nexport default MobileGrid;\n","import React, { FC, cloneElement } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { useTranslate } from \"react-admin\";\n\nimport AvatarField from \"./AvatarField\";\nimport { Identifier, linkToRecord } from \"ra-core\";\nimport { Customer } from \"../types\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"1em\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"stretch\",\n    justifyContent: \"space-between\",\n  },\n  card: {\n    width: 265,\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"0.5rem 0\",\n  },\n  cardTitleContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\",\n  },\n  editButton: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n  },\n  cardContent: {\n    ...theme.typography.body1,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\ninterface Props {\n  ids?: Identifier[];\n  data?: { [key: string]: Customer };\n  basePath?: string;\n  fields: any;\n}\n\nconst DesktopGrid: FC<Props> = ({ ids, data, basePath, fields }) => {\n  const translate = useTranslate();\n  const classes = useStyles();\n\n  if (!ids || !data) {\n    return null;\n  }\n\n  return (\n    <div className={classes.root}>\n      {ids.map((id) => (\n        <Card key={id} className={classes.card}>\n          <CardContent className={classes.cardContent}>\n            <div className={classes.cardTitleContent}>\n              <AvatarField record={data[id]} size=\"120\" />\n              <h2>{`${data[id].first_name} ${data[id].last_name}`}</h2>\n\n              <IconButton\n                color=\"secondary\"\n                aria-label=\"Edit\"\n                component={RouterLink}\n                className={classes.editButton}\n                to={linkToRecord(basePath, id)}\n              >\n                <EditIcon />\n              </IconButton>\n            </div>\n            {fields\n              .filter((field) => field.props.source !== \"customer_id\") // we already display customer up there\n              .filter((field) => !!data[id][field.props.source])\n              .map((field) => {\n                const fieldName = field.props.source;\n\n                return (\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                    <div\n                      style={{\n                        marginRight: \"1em\",\n                        marginBottom: \"0.5em\",\n                        marginTop: \"1em\",\n                      }}\n                    >\n                      {translate(`resources.customers.fields.${fieldName}`)}\n                    </div>\n                    <div\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        marginBottom: \"0.5em\",\n                        marginTop: \"1em\",\n                      }}\n                    >\n                      {cloneElement(field, {\n                        record: data[id],\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nDesktopGrid.defaultProps = {\n  data: {},\n  ids: [],\n};\n\nexport default DesktopGrid;\n","import React from \"react\";\nimport {\n  BooleanField,\n  Datagrid,\n  DateField,\n  DateInput,\n  Filter,\n  NullableBooleanInput,\n  NumberField,\n  SearchInput,\n} from \"react-admin\";\n\nimport { useMediaQuery, Theme } from \"@material-ui/core\";\n\nimport EnterpriseList from \"../ra-enterprise/List\";\nimport SegmentsField from \"./SegmentsField\";\nimport SegmentInput from \"./SegmentInput\";\nimport CustomerLinkField from \"./CustomerLinkField\";\nimport ColoredNumberField from \"./ColoredNumberField\";\nimport MobileGrid from \"./MobileGrid\";\nimport DesktopGrid from \"./DesktopGrid\";\n\nconst VisitorFilter = (props: any) => (\n  <Filter {...props}>\n    <SearchInput source=\"q\" alwaysOn />\n    <DateInput source=\"last_seen_gte\" />\n    <NullableBooleanInput source=\"has_ordered\" />\n    <NullableBooleanInput source=\"has_newsletter\" defaultValue />\n    <SegmentInput />\n  </Filter>\n);\n\nconst visitorListColumn = {\n  customer: <CustomerLinkField />,\n  last_seen: <DateField source=\"last_seen\" />,\n  nb_commands: (\n    <NumberField\n      source=\"nb_commands\"\n      label=\"resources.customers.fields.commands\"\n    />\n  ),\n  total_spent: (\n    <ColoredNumberField\n      source=\"total_spent\"\n      options={{ style: \"currency\", currency: \"USD\" }}\n    />\n  ),\n  latest_purchase: <DateField source=\"latest_purchase\" showTime />,\n  has_newsletter: <BooleanField source=\"has_newsletter\" label=\"News.\" />,\n  segments: <SegmentsField />,\n};\n\nconst VisitorList = (props: any) => {\n  const isXsmall = useMediaQuery<Theme>((theme) =>\n    theme.breakpoints.down(\"xs\")\n  );\n\n  return (\n    <EnterpriseList\n      {...props}\n      preferenceKey=\"visitors.list\"\n      hasColumnsSelector\n      defaultColumns={visitorListColumn}\n      defaultOmittedColumns={[\"last_seen\"]}\n      hasViewSelector\n      defaultView\n      filters={<VisitorFilter />}\n      sort={{ field: \"last_seen\", order: \"DESC\" }}\n      perPage={25}\n    >\n      {({ columns, view, ...rest }) => {\n        if (isXsmall) {\n          return <MobileGrid />;\n        }\n        if (view === \"grid\") {\n          return <DesktopGrid fields={columns} />;\n        }\n        return (\n          <Datagrid rowClick=\"edit\" {...rest}>\n            {columns}\n          </Datagrid>\n        );\n      }}\n    </EnterpriseList>\n  );\n};\n\nexport default VisitorList;\n","import React from 'react';\nimport {\n    Create,\n    DateInput,\n    SimpleForm,\n    TextInput,\n    useTranslate,\n    PasswordInput,\n    required,\n} from 'react-admin';\nimport { Typography, Box } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Styles } from '@material-ui/styles/withStyles';\n\nexport const styles: Styles<Theme, any> = {\n    first_name: { display: 'inline-block' },\n    last_name: { display: 'inline-block', marginLeft: 32 },\n    email: { width: 544 },\n    address: { maxWidth: 544 },\n    zipcode: { display: 'inline-block' },\n    city: { display: 'inline-block', marginLeft: 32 },\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    password: { display: 'inline-block' },\n    confirm_password: { display: 'inline-block', marginLeft: 32 },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport const validatePasswords = ({\n    password,\n    confirm_password,\n}: {\n    password: string;\n    confirm_password: string;\n}) => {\n    const errors = {} as any;\n\n    if (password && confirm_password && password !== confirm_password) {\n        errors.confirm_password = [\n            'resources.customers.errors.password_mismatch',\n        ];\n    }\n\n    return errors;\n};\n\nconst VisitorCreate = (props: any) => {\n    const classes = useStyles();\n\n    return (\n        <Create {...props}>\n            <SimpleForm validate={validatePasswords}>\n                <SectionTitle label=\"resources.customers.fieldGroups.identity\" />\n                <TextInput\n                    autoFocus\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                    validate={requiredValidate}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                    validate={requiredValidate}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                    validate={requiredValidate}\n                />\n                <DateInput source=\"birthday\" />\n                <Separator />\n                <SectionTitle label=\"resources.customers.fieldGroups.address\" />\n                <TextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                    multiline={true}\n                    fullWidth={true}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n                <Separator />\n                <SectionTitle label=\"resources.customers.fieldGroups.password\" />\n                <PasswordInput\n                    source=\"password\"\n                    formClassName={classes.password}\n                />\n                <PasswordInput\n                    source=\"confirm_password\"\n                    formClassName={classes.confirm_password}\n                />\n            </SimpleForm>\n        </Create>\n    );\n};\n\nconst requiredValidate = [required()];\n\nconst SectionTitle = ({ label }: { label: string }) => {\n    const translate = useTranslate();\n\n    return (\n        <Typography variant=\"h6\" gutterBottom>\n            {translate(label)}\n        </Typography>\n    );\n};\n\nconst Separator = () => <Box pt=\"1em\" />;\n\nexport default VisitorCreate;\n","import React from 'react';\nimport { FunctionField } from 'react-admin';\n\nconst render = record => record.basket.length;\n\nconst NbItemsField = props => <FunctionField {...props} render={render} />;\n\nNbItemsField.defaultProps = {\n    label: 'Nb Items',\n    textAlign: 'right',\n};\n\nexport default NbItemsField;\n","import React, { FC } from 'react';\nimport { ReferenceField } from 'react-admin';\n\nimport FullNameField from './FullNameField';\nimport { FieldProps } from '../types';\n\nconst CustomerReferenceField: FC<FieldProps> = props => (\n    <ReferenceField source=\"customer_id\" reference=\"customers\" {...props}>\n        <FullNameField />\n    </ReferenceField>\n);\n\nCustomerReferenceField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerReferenceField;\n","// in src/comments.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    DateField,\n    EditButton,\n    NumberField,\n    TextField,\n    BooleanField,\n    useTranslate,\n} from 'react-admin';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\n\nconst useListStyles = makeStyles(theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: theme.typography.body1,\n    cardContentRow: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        margin: '0.5rem 0',\n    },\n}));\n\nconst MobileGrid = ({ ids, data, basePath }) => {\n    const translate = useTranslate();\n    const classes = useListStyles();\n    return (\n        <div style={{ margin: '1em' }}>\n            {ids.map(id => (\n                <Card key={id} className={classes.card}>\n                    <CardHeader\n                        title={\n                            <div className={classes.cardTitleContent}>\n                                <span>\n                                    {translate('resources.commands.name', 1)}\n                                    :&nbsp;\n                                    <TextField\n                                        record={data[id]}\n                                        source=\"reference\"\n                                    />\n                                </span>\n                                <EditButton\n                                    resource=\"commands\"\n                                    basePath={basePath}\n                                    record={data[id]}\n                                />\n                            </div>\n                        }\n                    />\n                    <CardContent className={classes.cardContent}>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.customers.name', 1)}:&nbsp;\n                            <CustomerReferenceField\n                                record={data[id]}\n                                basePath={basePath}\n                            />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.reviews.fields.date')}:&nbsp;\n                            <DateField\n                                record={data[id]}\n                                source=\"date\"\n                                showTime\n                            />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate(\n                                'resources.commands.fields.basket.total'\n                            )}\n                            :&nbsp;\n                            <NumberField\n                                record={data[id]}\n                                source=\"total\"\n                                options={{ style: 'currency', currency: 'USD' }}\n                                className={classes.total}\n                            />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.commands.fields.status')}\n                            :&nbsp;\n                            <TextField source=\"status\" record={data[id]} />\n                        </span>\n                        <span className={classes.cardContentRow}>\n                            {translate('resources.commands.fields.returned')}\n                            :&nbsp;\n                            <BooleanField record={data[id]} source=\"returned\" />\n                        </span>\n                    </CardContent>\n                </Card>\n            ))}\n        </div>\n    );\n};\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nexport default MobileGrid;\n","import React, { Fragment } from 'react';\nimport {\n    AutocompleteInput,\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceInput,\n    SearchInput,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport {\n    makeStyles,\n    useMediaQuery,\n    Divider,\n    Tabs,\n    Tab,\n} from '@material-ui/core';\n\nimport NbItemsField from './NbItemsField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport MobileGrid from './MobileGrid';\n\nconst OrderFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    choice.first_name && choice.last_name\n                        ? `${choice.first_name} ${choice.last_name}`\n                        : ''\n                }\n            />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n        <TextInput source=\"total_gte\" />\n        <NullableBooleanInput source=\"returned\" />\n    </Filter>\n);\n\nconst useDatagridStyles = makeStyles({\n    total: { fontWeight: 'bold' },\n});\n\nclass TabbedDatagrid extends React.Component {\n    tabs = [\n        { id: 'ordered', name: 'ordered' },\n        { id: 'delivered', name: 'delivered' },\n        { id: 'cancelled', name: 'cancelled' },\n    ];\n\n    state = { ordered: [], delivered: [], cancelled: [] };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.ids !== state[props.filterValues.status]) {\n            return { ...state, [props.filterValues.status]: props.ids };\n        }\n        return null;\n    }\n\n    handleChange = (event, value) => {\n        const { filterValues, setFilters } = this.props;\n        setFilters({ ...filterValues, status: value });\n    };\n\n    render() {\n        const { isXSmall, classes, filterValues, ...props } = this.props;\n\n        return (\n            <Fragment>\n                <Tabs\n                    variant=\"fullWidth\"\n                    centered\n                    value={filterValues.status}\n                    indicatorColor=\"primary\"\n                    onChange={this.handleChange}\n                >\n                    {this.tabs.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.id}\n                        />\n                    ))}\n                </Tabs>\n                <Divider />\n                {isXSmall ? (\n                    <MobileGrid\n                        {...props}\n                        ids={this.state[filterValues.status]}\n                    />\n                ) : (\n                    <div>\n                        {filterValues.status === 'ordered' && (\n                            <Datagrid\n                                {...props}\n                                ids={this.state.ordered}\n                                optimized\n                                rowClick=\"edit\"\n                            >\n                                <DateField source=\"date\" showTime />\n                                <TextField source=\"reference\" />\n                                <CustomerReferenceField />\n                                <NbItemsField />\n                                <NumberField\n                                    source=\"total\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                    className={classes.total}\n                                />\n                            </Datagrid>\n                        )}\n                        {filterValues.status === 'delivered' && (\n                            <Datagrid {...props} ids={this.state.delivered}>\n                                <DateField source=\"date\" showTime />\n                                <TextField source=\"reference\" />\n                                <CustomerReferenceField />\n                                <NbItemsField />\n                                <NumberField\n                                    source=\"total\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                    className={classes.total}\n                                />\n                                <BooleanField source=\"returned\" />\n                                <EditButton />\n                            </Datagrid>\n                        )}\n                        {filterValues.status === 'cancelled' && (\n                            <Datagrid {...props} ids={this.state.cancelled}>\n                                <DateField source=\"date\" showTime />\n                                <TextField source=\"reference\" />\n                                <CustomerReferenceField />\n                                <NbItemsField />\n                                <NumberField\n                                    source=\"total\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                    className={classes.total}\n                                />\n                                <BooleanField source=\"returned\" />\n                                <EditButton />\n                            </Datagrid>\n                        )}\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nconst StyledTabbedDatagrid = props => {\n    const classes = useDatagridStyles();\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n    return <TabbedDatagrid classes={classes} isXSmall={isXSmall} {...props} />;\n};\n\nconst OrderList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filterDefaultValues={{ status: 'ordered' }}\n        sort={{ field: 'date', order: 'DESC' }}\n        perPage={25}\n        filters={<OrderFilter />}\n    >\n        <StyledTabbedDatagrid />\n    </List>\n);\n\nexport default OrderList;\n","import React, { FC } from 'react';\nimport classnames from 'classnames';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, useTranslate, useQueryWithStore } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldProps, AppState, Order, Product } from '../types';\n\nconst useStyles = makeStyles({\n    container: { minWidth: '35em', marginLeft: '1em' },\n    rightAlignedCell: { textAlign: 'right' },\n    boldCell: { fontWeight: 'bold' },\n});\n\nconst Basket: FC<FieldProps<Order>> = ({ record }) => {\n    const classes = useStyles();\n    const translate = useTranslate();\n\n    const { loaded, data: products } = useQueryWithStore(\n        {\n            type: 'getMany',\n            resource: 'products',\n            payload: {\n                ids: record ? record.basket.map(item => item.product_id) : [],\n            },\n        },\n        {},\n        (state: AppState) => {\n            const productIds = record\n                ? record.basket.map(item => item.product_id)\n                : [];\n\n            return productIds\n                .map<Product>(\n                    (productId: string) =>\n                        state.admin.resources.products.data[\n                            productId\n                        ] as Product\n                )\n                .filter(r => typeof r !== 'undefined')\n                .reduce(\n                    (prev, next) => {\n                        prev[next.id] = next;\n                        return prev;\n                    },\n                    {} as { [key: string]: Product }\n                );\n        }\n    );\n\n    if (!loaded || !record) return null;\n\n    return (\n        <Paper className={classes.container} elevation={2}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            {translate(\n                                'resources.commands.fields.basket.reference'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {translate(\n                                'resources.commands.fields.basket.unit_price'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {translate(\n                                'resources.commands.fields.basket.quantity'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {translate(\n                                'resources.commands.fields.basket.total'\n                            )}\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {record.basket.map(\n                        (item: any) =>\n                            products[item.product_id] && (\n                                <TableRow key={item.product_id}>\n                                    <TableCell>\n                                        <Link\n                                            to={`/products/${item.product_id}`}\n                                        >\n                                            {\n                                                products[item.product_id]\n                                                    .reference\n                                            }\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.rightAlignedCell}\n                                    >\n                                        {products[\n                                            item.product_id\n                                        ].price.toLocaleString(undefined, {\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        })}\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.rightAlignedCell}\n                                    >\n                                        {item.quantity}\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.rightAlignedCell}\n                                    >\n                                        {(\n                                            products[item.product_id].price *\n                                            item.quantity\n                                        ).toLocaleString(undefined, {\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        })}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                    )}\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>\n                            {translate('resources.commands.fields.basket.sum')}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {record.total_ex_taxes.toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>\n                            {translate(\n                                'resources.commands.fields.basket.delivery'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {record.delivery_fees.toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>\n                            {translate(\n                                'resources.commands.fields.basket.tax_rate'\n                            )}\n                        </TableCell>\n                        <TableCell className={classes.rightAlignedCell}>\n                            {record.tax_rate.toLocaleString(undefined, {\n                                style: 'percent',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell className={classes.boldCell}>\n                            {translate(\n                                'resources.commands.fields.basket.total'\n                            )}\n                        </TableCell>\n                        <TableCell\n                            className={classnames(\n                                classes.boldCell,\n                                classes.rightAlignedCell\n                            )}\n                        >\n                            {record.total.toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                            })}\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\n\nexport default Basket;\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    BooleanInput,\n    DateInput,\n    Edit,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    useTranslate,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Basket from './Basket';\n\nconst OrderTitle = ({ record }) => {\n    const translate = useTranslate();\n    return (\n        <span>\n            {translate('resources.commands.title', {\n                reference: record.reference,\n            })}\n        </span>\n    );\n};\n\nconst useEditStyles = makeStyles({\n    root: { alignItems: 'flex-start' },\n});\n\nconst OrderEdit = props => {\n    const classes = useEditStyles();\n    return (\n        <Edit\n            title={<OrderTitle />}\n            aside={<Basket />}\n            classes={classes}\n            {...props}\n        >\n            <SimpleForm>\n                <DateInput source=\"date\" />\n                <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                    <AutocompleteInput\n                        optionText={choice =>\n                            `${choice.first_name} ${choice.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n                <SelectInput\n                    source=\"status\"\n                    choices={[\n                        { id: 'delivered', name: 'delivered' },\n                        { id: 'ordered', name: 'ordered' },\n                        { id: 'cancelled', name: 'cancelled' },\n                        {\n                            id: 'unknown',\n                            name: 'unknown',\n                            disabled: true,\n                        },\n                    ]}\n                />\n                <BooleanInput source=\"returned\" />\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nexport default OrderEdit;\n","import OrderIcon from '@material-ui/icons/AttachMoney';\n\nimport OrderList from './OrderList';\nimport OrderEdit from './OrderEdit';\n\nexport default {\n    list: OrderList,\n    edit: OrderEdit,\n    icon: OrderIcon,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport {\n    Button,\n    useUpdateMany,\n    useNotify,\n    useRedirect,\n    useUnselectAll,\n    CRUD_UPDATE_MANY,\n} from 'react-admin';\n\nconst BulkAcceptButton = ({ selectedIds }) => {\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n    const unselectAll = useUnselectAll('reviews');\n\n    const [approve, { loading }] = useUpdateMany(\n        'reviews',\n        selectedIds,\n        { status: 'accepted' },\n        {\n            action: CRUD_UPDATE_MANY,\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.approved_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n                unselectAll();\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.approved_error',\n                    'warning'\n                );\n            },\n        }\n    );\n\n    return (\n        <Button\n            label=\"resources.reviews.action.accept\"\n            onClick={approve}\n            disabled={loading}\n        >\n            <ThumbUp />\n        </Button>\n    );\n};\n\nBulkAcceptButton.propTypes = {\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default BulkAcceptButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport {\n    Button,\n    useUpdateMany,\n    useNotify,\n    useRedirect,\n    useUnselectAll,\n    CRUD_UPDATE_MANY,\n} from 'react-admin';\n\nconst BulkRejectButton = ({ selectedIds }) => {\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n    const unselectAll = useUnselectAll('reviews');\n\n    const [reject, { loading }] = useUpdateMany(\n        'reviews',\n        selectedIds,\n        { status: 'rejected' },\n        {\n            action: CRUD_UPDATE_MANY,\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.approved_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n                unselectAll();\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.approved_error',\n                    'warning'\n                );\n            },\n        }\n    );\n\n    return (\n        <Button\n            label=\"resources.reviews.action.reject\"\n            onClick={reject}\n            disabled={loading}\n        >\n            <ThumbDown />\n        </Button>\n    );\n};\n\nBulkRejectButton.propTypes = {\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default BulkRejectButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport {\n    linkToRecord,\n    ReferenceField,\n    FunctionField,\n    TextField,\n} from 'react-admin';\n\nimport AvatarField from '../visitors/AvatarField';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n    inline: {\n        display: 'inline',\n    },\n});\n\nconst ReviewMobileList = ({ basePath, data, ids, loading, total }) => {\n    const classes = useStyles();\n    return (\n        (loading || total > 0) && (\n            <List className={classes.root}>\n                {ids.map(id => (\n                    <Link\n                        to={linkToRecord(basePath, id)}\n                        className={classes.link}\n                        key={id}\n                    >\n                        <ListItem button>\n                            <ListItemAvatar>\n                                <ReferenceField\n                                    record={data[id]}\n                                    source=\"customer_id\"\n                                    reference=\"customers\"\n                                    basePath={basePath}\n                                    linkType={false}\n                                >\n                                    <AvatarField size={40} />\n                                </ReferenceField>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <Fragment>\n                                        <ReferenceField\n                                            record={data[id]}\n                                            source=\"customer_id\"\n                                            reference=\"customers\"\n                                            basePath={basePath}\n                                            linkType={false}\n                                        >\n                                            <FunctionField\n                                                render={record =>\n                                                    `${record.first_name} ${\n                                                        record.last_name\n                                                    }`\n                                                }\n                                                variant=\"subtitle1\"\n                                                className={classes.inline}\n                                            />\n                                        </ReferenceField>{' '}\n                                        on{' '}\n                                        <ReferenceField\n                                            record={data[id]}\n                                            source=\"product_id\"\n                                            reference=\"products\"\n                                            basePath={basePath}\n                                            linkType={false}\n                                        >\n                                            <TextField\n                                                source=\"reference\"\n                                                variant=\"subtitle1\"\n                                                className={classes.inline}\n                                            />\n                                        </ReferenceField>\n                                    </Fragment>\n                                }\n                                secondary={data[id].comment}\n                                secondaryTypographyProps={{ noWrap: true }}\n                            />\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        )\n    );\n};\n\nReviewMobileList.propTypes = {\n    basePath: PropTypes.string,\n    data: PropTypes.object,\n    hasBulkActions: PropTypes.bool.isRequired,\n    ids: PropTypes.array,\n    leftAvatar: PropTypes.func,\n    leftIcon: PropTypes.func,\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n        .isRequired,\n    onToggleItem: PropTypes.func,\n    primaryText: PropTypes.func,\n    rightAvatar: PropTypes.func,\n    rightIcon: PropTypes.func,\n    secondaryText: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    tertiaryText: PropTypes.func,\n};\n\nReviewMobileList.defaultProps = {\n    linkType: 'edit',\n    hasBulkActions: false,\n    selectedIds: [],\n};\n\nexport default ReviewMobileList;\n","import React from 'react';\nimport { ReferenceField, TextField } from 'react-admin';\n\nconst ProductReferenceField = props => (\n    <ReferenceField\n        label=\"Product\"\n        source=\"product_id\"\n        reference=\"products\"\n        {...props}\n    >\n        <TextField source=\"reference\" />\n    </ReferenceField>\n);\n\nProductReferenceField.defaultProps = {\n    source: 'product_id',\n    addLabel: true,\n};\n\nexport default ProductReferenceField;\n","import React, { FC } from 'react';\nimport Icon from '@material-ui/icons/Stars';\nimport { makeStyles } from '@material-ui/core';\n\nimport { FieldProps } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        opacity: 0.87,\n        whiteSpace: 'nowrap',\n    },\n    large: {\n        width: 20,\n        height: 20,\n    },\n    small: {\n        width: 15,\n        height: 15,\n    },\n});\n\ninterface OwnProps {\n    size: 'large' | 'small';\n}\n\nconst StarRatingField: FC<FieldProps & OwnProps> = ({\n    record,\n    size = 'large',\n}) => {\n    const classes = useStyles();\n    return record ? (\n        <span>\n            {Array(record.rating)\n                .fill(true)\n                .map((_, i) => (\n                    <Icon\n                        key={i}\n                        className={\n                            size === 'large' ? classes.large : classes.small\n                        }\n                    />\n                ))}\n        </span>\n    ) : null;\n};\n\nStarRatingField.defaultProps = {\n    label: 'resources.reviews.fields.rating',\n    source: 'rating',\n    addLabel: true,\n};\n\nexport default StarRatingField;\n","import green from '@material-ui/core/colors/green';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\nconst rowStyle = (selectedRow, theme) => (record, index, defaultStyle = {}) => {\n    let style = defaultStyle;\n    if (selectedRow === record.id) {\n        style = {\n            ...style,\n            backgroundColor: theme.palette.action.selected,\n        };\n    }\n    if (record.status === 'accepted')\n        return {\n            ...style,\n            borderLeftColor: green[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'pending')\n        return {\n            ...style,\n            borderLeftColor: orange[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'rejected')\n        return {\n            ...style,\n            borderLeftColor: red[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    return style;\n};\n\nexport default rowStyle;\n","import React from 'react';\nimport { Datagrid, DateField, TextField } from 'react-admin';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\n\nimport rowStyle from './rowStyle';\n\nconst useListStyles = makeStyles({\n    headerRow: {\n        borderLeftColor: 'white',\n        borderLeftWidth: 5,\n        borderLeftStyle: 'solid',\n    },\n    headerCell: {\n        padding: '6px 8px 6px 8px',\n    },\n    rowCell: {\n        padding: '6px 8px 6px 8px',\n    },\n    comment: {\n        maxWidth: '18em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n});\n\nconst ReviewListDesktop = ({ selectedRow, ...props }) => {\n    const classes = useListStyles();\n    const theme = useTheme();\n    return (\n        <Datagrid\n            rowClick=\"edit\"\n            rowStyle={rowStyle(selectedRow, theme)}\n            classes={{\n                headerRow: classes.headerRow,\n                headerCell: classes.headerCell,\n                rowCell: classes.rowCell,\n            }}\n            optimized\n            {...props}\n        >\n            <DateField source=\"date\" />\n            <CustomerReferenceField link={false} />\n            <ProductReferenceField link={false} />\n            <StarRatingField size=\"small\" />\n            <TextField source=\"comment\" cellClassName={classes.comment} />\n            <TextField source=\"status\" />\n        </Datagrid>\n    );\n};\n\nexport default ReviewListDesktop;\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    DateInput,\n    Filter,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useFilterStyles = makeStyles({\n    status: { width: 150 },\n});\n\nconst ReviewFilter = props => {\n    const classes = useFilterStyles();\n    return (\n        <Filter {...props}>\n            <SearchInput source=\"q\" alwaysOn />\n            <SelectInput\n                source=\"status\"\n                choices={[\n                    { id: 'accepted', name: 'Accepted' },\n                    { id: 'pending', name: 'Pending' },\n                    { id: 'rejected', name: 'Rejected' },\n                ]}\n                className={classes.status}\n            />\n            <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                <AutocompleteInput\n                    optionText={choice =>\n                        `${choice.first_name} ${choice.last_name}`\n                    }\n                />\n            </ReferenceInput>\n            <ReferenceInput source=\"product_id\" reference=\"products\">\n                <AutocompleteInput optionText=\"reference\" />\n            </ReferenceInput>\n            <DateInput source=\"date_gte\" />\n            <DateInput source=\"date_lte\" />\n        </Filter>\n    );\n};\n\nexport default ReviewFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport { useTranslate, useUpdate, useNotify, useRedirect } from 'react-admin';\n\n/**\n * This custom button demonstrate using useUpdate to update data\n */\nconst AcceptButton = ({ record }) => {\n    const translate = useTranslate();\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n\n    const [approve, { loading }] = useUpdate(\n        'reviews',\n        record.id,\n        { status: 'accepted' },\n        record,\n        {\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.approved_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.approved_error',\n                    'warning'\n                );\n            },\n        }\n    );\n    return record && record.status === 'pending' ? (\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={approve}\n            disabled={loading}\n        >\n            <ThumbUp\n                color=\"primary\"\n                style={{ paddingRight: '0.5em', color: 'green' }}\n            />\n            {translate('resources.reviews.action.accept')}\n        </Button>\n    ) : (\n        <span />\n    );\n};\n\nAcceptButton.propTypes = {\n    record: PropTypes.object,\n};\n\nexport default AcceptButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport { useTranslate, useUpdate, useNotify, useRedirect } from 'react-admin';\n\n/**\n * This custom button demonstrate using a custom action to update data\n */\nconst RejectButton = ({ record }) => {\n    const translate = useTranslate();\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n\n    const [reject, { loading }] = useUpdate(\n        'reviews',\n        record.id,\n        { status: 'rejected' },\n        record,\n        {\n            undoable: true,\n            onSuccess: () => {\n                notify(\n                    'resources.reviews.notification.rejected_success',\n                    'info',\n                    {},\n                    true\n                );\n                redirectTo('/reviews');\n            },\n            onFailure: () => {\n                notify(\n                    'resources.reviews.notification.rejected_error',\n                    'warning'\n                );\n            },\n        }\n    );\n\n    return record && record.status === 'pending' ? (\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={reject}\n            disabled={loading}\n        >\n            <ThumbDown\n                color=\"primary\"\n                style={{ paddingRight: '0.5em', color: 'red' }}\n            />\n            {translate('resources.reviews.action.reject')}\n        </Button>\n    ) : (\n        <span />\n    );\n};\n\nRejectButton.propTypes = {\n    record: PropTypes.object,\n};\n\nexport default RejectButton;\n","import React, { Fragment } from 'react';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SaveButton, DeleteButton } from 'react-admin';\nimport AcceptButton from './AcceptButton';\nimport RejectButton from './RejectButton';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n\nconst ReviewEditToolbar = ({\n    basePath,\n    handleSubmitWithRedirect,\n    invalid,\n    record,\n    resource,\n    saving,\n}) => {\n    const classes = useStyles();\n    return (\n        <MuiToolbar className={classes.root}>\n            {record.status === 'pending' ? (\n                <Fragment>\n                    <AcceptButton record={record} />\n                    <RejectButton record={record} />\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <SaveButton\n                        handleSubmitWithRedirect={handleSubmitWithRedirect}\n                        invalid={invalid}\n                        saving={saving}\n                        redirect=\"list\"\n                        submitOnEnter={true}\n                    />\n                    <DeleteButton\n                        basePath={basePath}\n                        record={record}\n                        resource={resource}\n                    />\n                </Fragment>\n            )}\n        </MuiToolbar>\n    );\n};\n\nexport default ReviewEditToolbar;\n","import React from 'react';\nimport {\n    useEditController,\n    useTranslate,\n    TextInput,\n    SimpleForm,\n    DateField,\n} from 'react-admin';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport ReviewEditToolbar from './ReviewEditToolbar';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: 40,\n    },\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        margin: '1em',\n    },\n    form: {\n        [theme.breakpoints.up('xs')]: {\n            width: 400,\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: '100vw',\n            marginTop: -30,\n        },\n    },\n    inlineField: {\n        display: 'inline-block',\n        width: '50%',\n    },\n}));\n\nconst ReviewEdit = ({ onCancel, ...props }) => {\n    const classes = useStyles();\n    const controllerProps = useEditController(props);\n    const translate = useTranslate();\n    if (!controllerProps.record) {\n        return null;\n    }\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant=\"h6\">\n                    {translate('resources.reviews.detail')}\n                </Typography>\n                <IconButton onClick={onCancel}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <SimpleForm\n                className={classes.form}\n                basePath={controllerProps.basePath}\n                record={controllerProps.record}\n                save={controllerProps.save}\n                version={controllerProps.version}\n                redirect=\"list\"\n                resource=\"reviews\"\n                toolbar={<ReviewEditToolbar />}\n            >\n                <CustomerReferenceField formClassName={classes.inlineField} />\n\n                <ProductReferenceField formClassName={classes.inlineField} />\n                <DateField source=\"date\" formClassName={classes.inlineField} />\n                <StarRatingField formClassName={classes.inlineField} />\n                <TextInput source=\"comment\" rowsMax={15} multiline fullWidth />\n            </SimpleForm>\n        </div>\n    );\n};\n\nexport default ReviewEdit;\n","import React, { Fragment, useCallback } from 'react';\nimport classnames from 'classnames';\nimport { BulkDeleteButton, List } from 'react-admin';\nimport { Route, useHistory } from 'react-router-dom';\nimport { Drawer, useMediaQuery, makeStyles } from '@material-ui/core';\nimport BulkAcceptButton from './BulkAcceptButton';\nimport BulkRejectButton from './BulkRejectButton';\nimport ReviewListMobile from './ReviewListMobile';\nimport ReviewListDesktop from './ReviewListDesktop';\nimport ReviewFilter from './ReviewFilter';\nimport ReviewEdit from './ReviewEdit';\n\nconst ReviewsBulkActionButtons = props => (\n    <Fragment>\n        <BulkAcceptButton {...props} />\n        <BulkRejectButton {...props} />\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    list: {\n        flexGrow: 1,\n        transition: theme.transitions.create(['all'], {\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n    listWithDrawer: {\n        marginRight: 400,\n    },\n    drawerPaper: {\n        zIndex: 100,\n    },\n}));\n\nconst ReviewList = props => {\n    const classes = useStyles();\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n    const history = useHistory();\n\n    const handleClose = useCallback(() => {\n        history.push('/reviews');\n    }, [history]);\n\n    return (\n        <div className={classes.root}>\n            <Route path=\"/reviews/:id\">\n                {({ match }) => {\n                    const isMatch = !!(\n                        match &&\n                        match.params &&\n                        match.params.id !== 'create'\n                    );\n\n                    return (\n                        <Fragment>\n                            <List\n                                {...props}\n                                className={classnames(classes.list, {\n                                    [classes.listWithDrawer]: isMatch,\n                                })}\n                                bulkActionButtons={<ReviewsBulkActionButtons />}\n                                filters={<ReviewFilter />}\n                                perPage={25}\n                                sort={{ field: 'date', order: 'DESC' }}\n                            >\n                                {isXSmall ? (\n                                    <ReviewListMobile />\n                                ) : (\n                                    <ReviewListDesktop\n                                        selectedRow={\n                                            isMatch &&\n                                            parseInt(match.params.id, 10)\n                                        }\n                                    />\n                                )}\n                            </List>\n                            <Drawer\n                                variant=\"persistent\"\n                                open={isMatch}\n                                anchor=\"right\"\n                                onClose={handleClose}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                            >\n                                {/* To avoid any errors if the route does not match, we don't render at all the component in this case */}\n                                {isMatch ? (\n                                    <ReviewEdit\n                                        id={match.params.id}\n                                        onCancel={handleClose}\n                                        {...props}\n                                    />\n                                ) : null}\n                            </Drawer>\n                        </Fragment>\n                    );\n                }}\n            </Route>\n        </div>\n    );\n};\n\nexport default ReviewList;\n","import ReviewIcon from '@material-ui/icons/Comment';\nimport ReviewList from './ReviewList';\n\nexport default {\n    icon: ReviewIcon,\n    list: ReviewList,\n};\n","import React from 'react';\nimport {\n    NumberField,\n    TextField,\n    DateField,\n    useTranslate,\n    useGetList,\n    linkToRecord,\n} from 'react-admin';\nimport PropTypes from 'prop-types';\nimport {\n    Tooltip,\n    Typography,\n    Card,\n    CardContent,\n    CardHeader,\n    Avatar,\n    IconButton,\n    Box,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport ContentCreate from '@material-ui/icons/Create';\nimport order from '../orders';\nimport review from '../reviews';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\n\nconst useAsideStyles = makeStyles(theme => ({\n    root: {\n        width: 400,\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nconst Aside = ({ record, basePath }) => {\n    const classes = useAsideStyles();\n    return (\n        <div className={classes.root}>\n            {record && <EventList record={record} basePath={basePath} />}\n        </div>\n    );\n};\n\nAside.propTypes = {\n    record: PropTypes.any,\n    basePath: PropTypes.string,\n};\n\nconst EventList = ({ record, basePath }) => {\n    const translate = useTranslate();\n    const { data: orders, ids: orderIds } = useGetList(\n        'commands',\n        { page: 1, perPage: 100 },\n        { field: 'date', order: 'DESC' },\n        { customer_id: record && record.id }\n    );\n    const { data: reviews, ids: reviewIds } = useGetList(\n        'reviews',\n        { page: 1, perPage: 100 },\n        { field: 'date', order: 'DESC' },\n        { customer_id: record && record.id }\n    );\n    const events = mixOrdersAndReviews(orders, orderIds, reviews, reviewIds);\n\n    return (\n        <>\n            <Box m=\"0 0 1em 1em\">\n                <Card>\n                    <CardContent>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {translate(\n                                'resources.customers.fieldGroups.history'\n                            )}\n                        </Typography>\n                        <Box display=\"flex\">\n                            <Box flexGrow={1}>\n                                <Box display=\"flex\" mb=\"1em\">\n                                    <Box mr=\"1em\">\n                                        <AccessTimeIcon\n                                            fontSize=\"small\"\n                                            color=\"disabled\"\n                                        />\n                                    </Box>\n                                    <Box flexGrow={1}>\n                                        <Typography>\n                                            {translate(\n                                                'resources.customers.fields.first_seen'\n                                            )}\n                                        </Typography>\n                                        <DateField\n                                            record={record}\n                                            source=\"first_seen\"\n                                        />\n                                    </Box>\n                                </Box>\n                                {orderIds.length > 0 && (\n                                    <Box display=\"flex\">\n                                        <Box mr=\"1em\">\n                                            <order.icon\n                                                fontSize=\"small\"\n                                                color=\"disabled\"\n                                            />\n                                        </Box>\n                                        <Box flexGrow={1}>\n                                            <Typography>\n                                                {translate(\n                                                    'resources.commands.amount',\n                                                    {\n                                                        smart_count:\n                                                            orderIds.length,\n                                                    }\n                                                )}\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box flexGrow={1}>\n                                <Box display=\"flex\" mb=\"1em\">\n                                    <Box mr=\"1em\">\n                                        <AccessTimeIcon\n                                            fontSize=\"small\"\n                                            color=\"disabled\"\n                                        />\n                                    </Box>\n                                    <Box flexGrow={1}>\n                                        <Typography>\n                                            {translate(\n                                                'resources.customers.fields.last_seen'\n                                            )}\n                                        </Typography>\n                                        <DateField\n                                            record={record}\n                                            source=\"last_seen\"\n                                        />\n                                    </Box>\n                                </Box>\n                                {reviewIds.length > 0 && (\n                                    <Box display=\"flex\">\n                                        <Box mr=\"1em\">\n                                            <review.icon\n                                                fontSize=\"small\"\n                                                color=\"disabled\"\n                                            />\n                                        </Box>\n                                        <Box flexGrow={1}>\n                                            <Typography>\n                                                {translate(\n                                                    'resources.reviews.amount',\n                                                    {\n                                                        smart_count:\n                                                            reviewIds.length,\n                                                    }\n                                                )}\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n\n            {events.map(event =>\n                event.type === 'order' ? (\n                    <Order\n                        record={event.data}\n                        key={`event_${event.data.id}`}\n                        basePath={basePath}\n                    />\n                ) : (\n                    <Review\n                        record={event.data}\n                        key={`review_${event.data.id}`}\n                        basePath={basePath}\n                    />\n                )\n            )}\n        </>\n    );\n};\n\nconst mixOrdersAndReviews = (orders, orderIds, reviews, reviewIds) => {\n    const eventsFromOrders = orderIds.map(id => ({\n        type: 'order',\n        date: orders[id].date,\n        data: orders[id],\n    }));\n    const eventsFromReviews = reviewIds.map(id => ({\n        type: 'review',\n        date: reviews[id].date,\n        data: reviews[id],\n    }));\n    const events = eventsFromOrders.concat(eventsFromReviews);\n    events.sort((e1, e2) => new Date(e1.date) - new Date(e2.date));\n    return events;\n};\n\nconst useEventStyles = makeStyles({\n    card: {\n        margin: '0 0 1em 1em',\n    },\n    cardHeader: {\n        alignItems: 'flex-start',\n    },\n    clamp: {\n        display: '-webkit-box',\n        '-webkit-line-clamp': 3,\n        '-webkit-box-orient': 'vertical',\n        overflow: 'hidden',\n    },\n});\n\nconst Order = ({ record, basePath }) => {\n    const translate = useTranslate();\n    const classes = useEventStyles();\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                avatar={\n                    <Avatar\n                        aria-label={translate('resources.commands.name', {\n                            smart_count: 1,\n                        })}\n                        className={classes.avatar}\n                    >\n                        <order.icon />\n                    </Avatar>\n                }\n                action={<EditButton record={record} basePath=\"/commands\" />}\n                title={`${translate('resources.commands.name', {\n                    smart_count: 1,\n                })} #${record.reference}`}\n                subheader={\n                    <>\n                        <Typography variant=\"body2\">{record.date}</Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            {translate('resources.commands.nb_items', {\n                                smart_count: record.basket.length,\n                                _: '1 item |||| %{smart_count} items',\n                            })}\n                            &nbsp;-&nbsp;\n                            <NumberField\n                                source=\"total\"\n                                options={{\n                                    style: 'currency',\n                                    currency: 'USD',\n                                }}\n                                record={record}\n                                basePath={basePath}\n                            />\n                            &nbsp;-&nbsp;\n                            <TextField\n                                source=\"status\"\n                                record={record}\n                                basePath={basePath}\n                            />\n                        </Typography>\n                    </>\n                }\n            />\n        </Card>\n    );\n};\n\nconst Review = ({ record, basePath }) => {\n    const translate = useTranslate();\n    const classes = useEventStyles();\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                avatar={\n                    <Avatar\n                        aria-label={translate('resources.reviews.name', {\n                            smart_count: 1,\n                        })}\n                        className={classes.avatar}\n                    >\n                        <review.icon />\n                    </Avatar>\n                }\n                action={<EditButton record={record} basePath=\"/reviews\" />}\n                title={\n                    <span>\n                        {translate('resources.reviews.relative_to_poster')}{' '}\n                        <ProductReferenceField\n                            resource=\"reviews\"\n                            record={record}\n                            basePath={basePath}\n                        />\n                    </span>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"body2\">{record.date}</Typography>\n                        <StarRatingField record={record} />\n                        <Typography variant=\"inherit\" className={classes.clamp}>\n                            {record.comment}\n                        </Typography>\n                    </>\n                }\n            />\n        </Card>\n    );\n};\n\nconst EditButton = ({ record, basePath }) => {\n    const translate = useTranslate();\n    return (\n        <Tooltip title={translate('ra.action.edit')}>\n            <IconButton\n                aria-label={translate('ra.action.edit')}\n                component={Link}\n                to={linkToRecord(basePath, record && record.id)}\n            >\n                <ContentCreate />\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default Aside;\n","import React, { FC } from 'react';\nimport { useTranslate, SelectArrayInput } from 'react-admin';\nimport { InputProps } from 'ra-core';\n\nimport segments from '../segments/data';\n\ninterface Props extends Omit<InputProps, 'source'> {\n    source?: string;\n}\n\nconst SegmentsInput: FC<Props> = ({ addField, ...rest }) => {\n    const translate = useTranslate();\n    return (\n        <SelectArrayInput\n            {...rest}\n            choices={segments.map(segment => ({\n                id: segment.id,\n                name: translate(segment.name),\n            }))}\n        />\n    );\n};\n\nSegmentsInput.defaultProps = {\n    addField: true,\n    source: 'groups',\n    resource: 'customers',\n};\n\nexport default SegmentsInput;\n","import React, { FC } from 'react';\nimport {\n    DateInput,\n    Edit,\n    NullableBooleanInput,\n    TextInput,\n    PasswordInput,\n    Toolbar,\n    useTranslate,\n    FormWithRedirect,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport Aside from './Aside';\nimport FullNameField from './FullNameField';\nimport SegmentsInput from './SegmentsInput';\nimport { validatePasswords } from './VisitorCreate';\nimport { Customer, FieldProps } from '../types';\n\nconst VisitorEdit = (props: any) => {\n    return (\n        <Edit\n            title={<VisitorTitle />}\n            aside={<Aside />}\n            component=\"div\"\n            {...props}\n        >\n            <VisitorForm />\n        </Edit>\n    );\n};\n\nconst VisitorTitle: FC<FieldProps<Customer>> = ({ record }) =>\n    record ? <FullNameField record={record} size=\"32\" /> : null;\n\nconst VisitorForm = (props: any) => {\n    const translate = useTranslate();\n\n    return (\n        <FormWithRedirect\n            {...props}\n            validate={validatePasswords}\n            render={(formProps: any) => (\n                <Card>\n                    <form>\n                        <CardContent>\n                            <Box display={{ md: 'block', lg: 'flex' }}>\n                                <Box flex={2} mr={{ md: 0, lg: '1em' }}>\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.identity'\n                                        )}\n                                    </Typography>\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"first_name\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={1}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"last_name\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                    </Box>\n                                    <TextInput\n                                        type=\"email\"\n                                        source=\"email\"\n                                        resource=\"customers\"\n                                        validation={{ email: true }}\n                                        fullWidth\n                                    />\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <DateInput\n                                                source=\"birthday\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={2}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        />\n                                    </Box>\n\n                                    <Box mt=\"1em\" />\n\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.address'\n                                        )}\n                                    </Typography>\n                                    <TextInput\n                                        source=\"address\"\n                                        resource=\"customers\"\n                                        multiline\n                                        fullWidth\n                                    />\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"zipcode\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={2}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <TextInput\n                                                source=\"city\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                    </Box>\n\n                                    <Box mt=\"1em\" />\n\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.change_password'\n                                        )}\n                                    </Typography>\n                                    <Box display={{ xs: 'block', sm: 'flex' }}>\n                                        <Box\n                                            flex={1}\n                                            mr={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <PasswordInput\n                                                source=\"password\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                        <Box\n                                            flex={1}\n                                            ml={{ xs: 0, sm: '0.5em' }}\n                                        >\n                                            <PasswordInput\n                                                source=\"confirm_password\"\n                                                resource=\"customers\"\n                                                fullWidth\n                                            />\n                                        </Box>\n                                    </Box>\n                                </Box>\n                                <Box\n                                    flex={1}\n                                    ml={{ xs: 0, lg: '1em' }}\n                                    mt={{ xs: '1em', lg: 0 }}\n                                >\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {translate(\n                                            'resources.customers.fieldGroups.stats'\n                                        )}\n                                    </Typography>\n                                    <div>\n                                        <SegmentsInput fullWidth />\n                                    </div>\n                                    <div>\n                                        <NullableBooleanInput\n                                            source=\"has_newsletter\"\n                                            resource=\"customers\"\n                                        />\n                                    </div>\n                                </Box>\n                            </Box>\n                        </CardContent>\n                        <Toolbar\n                            record={formProps.record}\n                            basePath={formProps.basePath}\n                            undoable={true}\n                            invalid={formProps.invalid}\n                            handleSubmit={formProps.handleSubmit}\n                            saving={formProps.saving}\n                            resource=\"customers\"\n                        />\n                    </form>\n                </Card>\n            )}\n        />\n    );\n};\n\nexport default VisitorEdit;\n","import VisitorIcon from '@material-ui/icons/People';\n\nimport VisitorList from './VisitorList';\nimport VisitorCreate from './VisitorCreate';\nimport VisitorEdit from './VisitorEdit';\n\nexport default {\n    list: VisitorList,\n    create: VisitorCreate,\n    edit: VisitorEdit,\n    icon: VisitorIcon,\n};\n","import React, { FC } from 'react';\nimport { FieldProps, Customer } from '../types';\n\nconst AddressField: FC<FieldProps<Customer>> = ({ record }) =>\n    record ? (\n        <span>\n            {record.address}, {record.city} {record.zipcode}\n        </span>\n    ) : null;\n\nexport default AddressField;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useShowController, ReferenceField, TextField } from 'react-admin';\n\nimport Basket from '../orders/Basket';\nimport { FieldProps, Customer } from '../types';\n\nconst CustomerField: FC<FieldProps<Customer>> = ({ record }) =>\n    record ? (\n        <Typography>\n            {record.first_name} {record.last_name}\n            <br />\n            {record.address}\n            <br />\n            {record.city}, {record.zipcode}\n        </Typography>\n    ) : null;\n\nconst InvoiceShow = (props: any) => {\n    const { record } = useShowController(props);\n    const classes = useStyles();\n\n    if (!record) return null;\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Posters Galore\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" gutterBottom align=\"right\">\n                            Invoice {record.id}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} container alignContent=\"flex-end\">\n                        <ReferenceField\n                            resource=\"invoices\"\n                            reference=\"customers\"\n                            source=\"customer_id\"\n                            basePath=\"/invoices\"\n                            record={record}\n                            link={false}\n                        >\n                            <CustomerField />\n                        </ReferenceField>\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer}>&nbsp;</div>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\n                            Date{' '}\n                        </Typography>\n                        <Typography gutterBottom align=\"center\">\n                            {new Date(record.date).toLocaleDateString()}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={5}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\n                            Order\n                        </Typography>\n                        <ReferenceField\n                            resource=\"invoices\"\n                            reference=\"commands\"\n                            source=\"command_id\"\n                            basePath=\"/invoices\"\n                            record={record}\n                            link={false}\n                        >\n                            <TextField\n                                source=\"reference\"\n                                align=\"center\"\n                                component=\"p\"\n                                gutterBottom\n                            />\n                        </ReferenceField>\n                    </Grid>\n                </Grid>\n                <div className={classes.invoices}>\n                    <ReferenceField\n                        resource=\"invoices\"\n                        reference=\"commands\"\n                        source=\"command_id\"\n                        basePath=\"/invoices\"\n                        record={record}\n                        link={false}\n                    >\n                        <Basket />\n                    </ReferenceField>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default InvoiceShow;\n\nconst useStyles = makeStyles({\n    root: { width: 600, margin: 'auto' },\n    spacer: { height: 20 },\n    invoices: { margin: '10px 0' },\n});\n","import React from 'react';\nimport {\n    List,\n    Datagrid,\n    TextField,\n    DateField,\n    ReferenceField,\n    NumberField,\n    Filter,\n    DateInput,\n} from 'react-admin';\n\nimport FullNameField from '../visitors/FullNameField';\nimport AddressField from '../visitors/AddressField';\nimport InvoiceShow from './InvoiceShow';\n\nconst ListFilters = (props: any) => (\n    <Filter {...props}>\n        <DateInput source=\"date_gte\" alwaysOn />\n        <DateInput source=\"date_lte\" alwaysOn />\n    </Filter>\n);\n\nconst InvoiceList = (props: any) => (\n    <List {...props} filters={<ListFilters />} perPage={25}>\n        <Datagrid rowClick=\"expand\" expand={<InvoiceShow />}>\n            <TextField source=\"id\" />\n            <DateField source=\"date\" />\n            <ReferenceField source=\"customer_id\" reference=\"customers\">\n                <FullNameField />\n            </ReferenceField>\n            <ReferenceField\n                source=\"customer_id\"\n                reference=\"customers\"\n                link={false}\n                label=\"resources.invoices.fields.address\"\n            >\n                <AddressField />\n            </ReferenceField>\n            <ReferenceField source=\"command_id\" reference=\"commands\">\n                <TextField source=\"reference\" />\n            </ReferenceField>\n            <NumberField source=\"total_ex_taxes\" />\n            <NumberField source=\"delivery_fees\" />\n            <NumberField source=\"taxes\" />\n            <NumberField source=\"total\" />\n        </Datagrid>\n    </List>\n);\n\nexport default InvoiceList;\n","import InvoiceIcon from '@material-ui/icons/LibraryBooks';\n\nimport InvoiceList from './InvoiceList';\n\nexport default {\n    list: InvoiceList,\n    icon: InvoiceIcon,\n};\n","import React from 'react';\nimport MuiGridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport { Link } from 'react-router-dom';\nimport { NumberField } from 'react-admin';\nimport { linkToRecord } from 'ra-core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: '-2px',\n    },\n    gridList: {\n        width: '100%',\n        margin: 0,\n    },\n    tileBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.4) 70%,rgba(0,0,0,0) 100%)',\n    },\n    placeholder: {\n        backgroundColor: theme.palette.grey[300],\n        height: '100%',\n    },\n    price: {\n        display: 'inline',\n        fontSize: '1em',\n    },\n    link: {\n        color: '#fff',\n    },\n}));\n\nconst getColsForWidth = width => {\n    if (width === 'xs') return 2;\n    if (width === 'sm') return 3;\n    if (width === 'md') return 4;\n    if (width === 'lg') return 5;\n    return 6;\n};\n\nconst times = (nbChildren, fn) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = ({ width, nbItems = 10 }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <MuiGridList\n                cellHeight={180}\n                cols={getColsForWidth(width)}\n                className={classes.gridList}\n            >\n                {' '}\n                {times(nbItems, key => (\n                    <GridListTile key={key}>\n                        <div className={classes.placeholder} />\n                    </GridListTile>\n                ))}\n            </MuiGridList>\n        </div>\n    );\n};\n\nconst LoadedGridList = ({ ids, data, basePath, width }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <MuiGridList\n                cellHeight={180}\n                cols={getColsForWidth(width)}\n                className={classes.gridList}\n            >\n                {ids.map(id => (\n                    <GridListTile\n                        component={Link}\n                        key={id}\n                        to={linkToRecord(basePath, data[id].id)}\n                        data-tour-id=\"grid-line\"\n                    >\n                        <img src={data[id].thumbnail} alt=\"\" />\n                        <GridListTileBar\n                            className={classes.tileBar}\n                            title={data[id].reference}\n                            subtitle={\n                                <span>\n                                    {data[id].width}x{data[id].height},{' '}\n                                    <NumberField\n                                        className={classes.price}\n                                        source=\"price\"\n                                        record={data[id]}\n                                        color=\"inherit\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                    />\n                                </span>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </MuiGridList>\n        </div>\n    );\n};\n\nconst GridList = ({ loaded, ...props }) =>\n    loaded ? <LoadedGridList {...props} /> : <LoadingGridList {...props} />;\n\nexport default withWidth()(GridList);\n","import React from 'react';\nimport {\n    Filter,\n    List,\n    NumberInput,\n    Pagination,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n    useTranslate,\n} from 'react-admin';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from './GridList';\n\nconst useQuickFilterStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst QuickFilter = ({ label }) => {\n    const translate = useTranslate();\n    const classes = useQuickFilterStyles();\n    return <Chip className={classes.root} label={translate(label)} />;\n};\n\nexport const ProductFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput\n            source=\"category_id\"\n            reference=\"categories\"\n            sort={{ field: 'id', order: 'ASC' }}\n        >\n            <SelectInput source=\"name\" />\n        </ReferenceInput>\n        <NumberInput source=\"width_gte\" />\n        <NumberInput source=\"width_lte\" />\n        <NumberInput source=\"height_gte\" />\n        <NumberInput source=\"height_lte\" />\n        <QuickFilter\n            label=\"resources.products.fields.stock_lte\"\n            source=\"stock_lte\"\n            defaultValue={10}\n        />\n    </Filter>\n);\n\nconst ProductList = props => (\n    <List\n        {...props}\n        filters={<ProductFilter />}\n        perPage={20}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 40]} />}\n        sort={{ field: 'id', order: 'ASC' }}\n    >\n        <GridList />\n    </List>\n);\n\nexport default ProductList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: { display: 'inline-block', marginTop: '1em', zIndex: 2 },\n    content: { padding: 0, '&:last-child': { padding: 0 } },\n    img: {\n        width: 'initial',\n        minWidth: 'initial',\n        maxWidth: '42em',\n        maxHeight: '15em',\n    },\n});\n\nconst Poster = ({ record }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardContent className={classes.content}>\n                <img src={record.image} alt=\"\" className={classes.img} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Poster;\n","import React from 'react';\nimport {\n    Create,\n    FormTab,\n    NumberInput,\n    ReferenceInput,\n    SelectInput,\n    TabbedForm,\n    TextInput,\n    required,\n} from 'react-admin';\nimport { InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MarkdownInput } from '@react-admin/ra-markdown';\n\nexport const styles = {\n    price: { width: '7em' },\n    width: { width: '7em' },\n    height: { width: '7em' },\n    stock: { width: '7em' },\n    widthFormGroup: { display: 'inline-block' },\n    heightFormGroup: { display: 'inline-block', marginLeft: 32 },\n};\n\nconst useStyles = makeStyles(styles);\n\nconst ProductCreate = props => {\n    const classes = useStyles();\n    return (\n        <Create {...props}>\n            <TabbedForm>\n                <FormTab label=\"resources.products.tabs.image\">\n                    <TextInput\n                        autoFocus\n                        source=\"image\"\n                        fullWidth\n                        validate={required()}\n                    />\n                    <TextInput\n                        source=\"thumbnail\"\n                        fullWidth\n                        validate={required()}\n                    />\n                </FormTab>\n                <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                    <TextInput source=\"reference\" validate={required()} />\n                    <NumberInput\n                        source=\"price\"\n                        validate={required()}\n                        className={classes.price}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    €\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"width\"\n                        validate={required()}\n                        className={classes.width}\n                        formClassName={classes.widthFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"height\"\n                        validate={required()}\n                        className={classes.height}\n                        formClassName={classes.heightFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <ReferenceInput\n                        source=\"category_id\"\n                        reference=\"categories\"\n                        allowEmpty\n                    >\n                        <SelectInput source=\"name\" />\n                    </ReferenceInput>\n                    <NumberInput\n                        source=\"stock\"\n                        validate={required()}\n                        className={classes.stock}\n                    />\n                </FormTab>\n                <FormTab\n                    label=\"resources.products.tabs.description\"\n                    path=\"description\"\n                >\n                    <MarkdownInput source=\"description\" label=\"\" />\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    );\n};\n\nexport default ProductCreate;\n","import React from 'react';\nimport {\n    Datagrid,\n    DateField,\n    Edit,\n    EditButton,\n    FormTab,\n    NumberInput,\n    Pagination,\n    ReferenceInput,\n    ReferenceManyField,\n    SelectInput,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport { InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MarkdownInput } from '@react-admin/ra-markdown';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport Poster from './Poster';\nimport { styles as createStyles } from './ProductCreate';\n\nconst ProductTitle = ({ record }) => <span>Poster #{record.reference}</span>;\n\nconst styles = {\n    ...createStyles,\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst useStyles = makeStyles(styles);\n\nconst ProductEdit = props => {\n    const classes = useStyles();\n    return (\n        <Edit {...props} title={<ProductTitle />}>\n            <TabbedForm>\n                <FormTab label=\"resources.products.tabs.image\">\n                    <Poster />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput source=\"thumbnail\" fullWidth />\n                </FormTab>\n                <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                    <TextInput source=\"reference\" />\n                    <NumberInput\n                        source=\"price\"\n                        className={classes.price}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    €\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"width\"\n                        className={classes.width}\n                        formClassName={classes.widthFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <NumberInput\n                        source=\"height\"\n                        className={classes.height}\n                        formClassName={classes.heightFormGroup}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"start\">\n                                    cm\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <ReferenceInput source=\"category_id\" reference=\"categories\">\n                        <SelectInput source=\"name\" />\n                    </ReferenceInput>\n                    <NumberInput source=\"stock\" className={classes.stock} />\n                </FormTab>\n                <FormTab\n                    label=\"resources.products.tabs.description\"\n                    path=\"description\"\n                    data-tour-id=\"description-tab\"\n                >\n                    <MarkdownInput source=\"description\" label=\"\" />\n                </FormTab>\n                <FormTab label=\"resources.products.tabs.reviews\" path=\"reviews\">\n                    <ReferenceManyField\n                        reference=\"reviews\"\n                        target=\"product_id\"\n                        addLabel={false}\n                        pagination={<Pagination />}\n                        fullWidth\n                    >\n                        <Datagrid>\n                            <DateField source=\"date\" />\n                            <CustomerReferenceField />\n                            <StarRatingField />\n                            <TextField\n                                source=\"comment\"\n                                cellClassName={classes.comment}\n                            />\n                            <TextField source=\"status\" />\n                            <EditButton />\n                        </Datagrid>\n                    </ReferenceManyField>\n                </FormTab>\n            </TabbedForm>\n        </Edit>\n    );\n};\n\nexport default ProductEdit;\n","import ProductIcon from '@material-ui/icons/Collections';\nimport ProductList from './ProductList';\nimport ProductEdit from './ProductEdit';\nimport ProductCreate from './ProductCreate';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    icon: ProductIcon,\n};\n","import React, { FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport products from '../products';\nimport { FieldProps, Category } from '../types';\n\nconst useStyles = makeStyles({\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n});\n\nconst LinkToRelatedProducts: FC<FieldProps<Category>> = ({ record }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return record ? (\n        <Button\n            size=\"small\"\n            color=\"primary\"\n            component={Link}\n            to={{\n                pathname: '/products',\n                search: stringify({\n                    page: 1,\n                    perPage: 25,\n                    sort: 'id',\n                    order: 'DESC',\n                    filter: JSON.stringify({ category_id: record.id }),\n                }),\n            }}\n            className={classes.link}\n        >\n            <products.icon className={classes.icon} />\n            {translate('resources.categories.fields.products')}\n        </Button>\n    ) : null;\n};\n\nexport default LinkToRelatedProducts;\n","import React from 'react';\nimport { Datagrid, EditButton, List, TextField } from 'react-admin';\n\nimport LinkToRelatedProducts from './LinkToRelatedProducts';\n\nconst CategoryList = (props: any) => (\n    <List {...props} sort={{ field: 'name', order: 'ASC' }}>\n        <Datagrid>\n            <TextField source=\"name\" />\n            <LinkToRelatedProducts />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport default CategoryList;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldProps, Product } from '../types';\n\nconst useStyles = makeStyles({\n    root: { width: 25, maxWidth: 25, maxHeight: 25 },\n});\n\nconst ThumbnailField: FC<FieldProps<Product>> = ({ record }) => {\n    const classes = useStyles();\n    return record ? (\n        <img src={record.thumbnail} className={classes.root} alt=\"\" />\n    ) : null;\n};\n\nexport default ThumbnailField;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FieldProps, Product } from '../types';\n\nconst ProductRefField: FC<FieldProps<Product>> = ({ record }) =>\n    record ? (\n        <Link to={`products/${record.id}`}>{record.reference}</Link>\n    ) : null;\n\nProductRefField.defaultProps = {\n    source: 'id',\n    label: 'Reference',\n};\n\nexport default ProductRefField;\n","import { GuideType } from \"@react-admin/ra-tour-guide\";\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n\nconst timeout = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst guides: { [id: string]: GuideType } = {\n  \"ra-markdown\": {\n    before: async ({ notify, redirect }) => {\n      notify(\"Taking you to the product page\");\n      redirect(\"/products\");\n      await timeout(1000); // would be so awesome if redirect was awaitable!\n    },\n    steps: [\n      {\n        target: `[data-tour-id='grid-line']:nth-child(${getRandomInt(1, 5)})`,\n        event: \"hover\",\n        content:\n          \"This is a poster, one of the products our shop is selling, let's go to its details\",\n        joyrideProps: {\n          styles: {\n            beacon: {\n              marginTop: -100,\n            },\n          },\n        },\n        after: ({ target, redirect }) => {\n          const productUrl = target.getAttribute(\"href\").slice(1);\n          redirect(productUrl);\n        },\n      },\n      {\n        target: \"[data-tour-id='description-tab']\",\n        content: \"The markdown editor is in the description tab\",\n        after: ({ target }) => {\n          target.click();\n        },\n      },\n    ],\n  },\n  \"ra-preferences\": {\n    steps: [\n      {\n        target: \"button[aria-label='Toggle Theme']\",\n        disableBeacon: true,\n        content:\n          \"ra-preferences comes with a lot of built-in modules, like this theme switcher. Try it: it works!\",\n      },\n      {\n        target: \"button[aria-label='Toggle Theme'] + button\",\n        content: \"Or this language switcher...\",\n        after: ({ redirect }) => {\n          redirect(\"/customers\");\n        },\n      },\n      {\n        target: \"button[aria-controls=user-preference-menu]\",\n        content: \"Even more advanced ones like this list customization tool.\",\n        disableBeacon: false,\n        after: ({ target }) => {\n          target.click();\n        },\n      },\n      {\n        target: \"#user-preference-menu .MuiPaper-root\",\n        content:\n          \"Where you can select how you want the list to be displayed, or the information you want to see.\",\n        joyrideProps: {\n          styles: {\n            options: {\n              zIndex: 10000,\n            },\n          },\n        },\n        after: () => {\n          const menuOverlay: HTMLElement | null = document.querySelector(\n            \"body > .MuiPopover-root div[aria-hidden=true]\"\n          );\n          if (!menuOverlay) {\n            return;\n          }\n          menuOverlay.click();\n        },\n      },\n      {\n        before: ({ setTourPreferences, state }) => {\n          setTourPreferences(state);\n        },\n        target: \"body\",\n        content:\n          \"It exposes simple hooks so that you can actually save whatever you want, too. For instance, the state of this particular step. Try to reload the page!\",\n        joyrideProps: {\n          styles: {\n            options: {\n              arrowColor: \"transparent\",\n            },\n          },\n        },\n        after: ({ setTourPreferences }) => {\n          setTourPreferences({});\n        },\n      },\n    ],\n  },\n};\n\nexport default guides;\n","import React, { FC } from 'react';\nimport {\n    Datagrid,\n    Edit,\n    EditButton,\n    NumberField,\n    ReferenceManyField,\n    SimpleForm,\n    TextInput,\n    useTranslate,\n} from 'react-admin';\n\nimport ThumbnailField from '../products/ThumbnailField';\nimport ProductRefField from '../products/ProductRefField';\nimport { FieldProps, Category } from '../types';\n\nconst CategoryTitle: FC<FieldProps<Category>> = ({ record }) => {\n    const translate = useTranslate();\n    return record ? (\n        <span>\n            {translate('resources.categories.name', { smart_count: 1 })} &quot;\n            {record.name}&quot;\n        </span>\n    ) : null;\n};\n\nconst CategoryEdit = (props: any) => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n            <ReferenceManyField\n                reference=\"products\"\n                target=\"category_id\"\n                label=\"resources.categories.fields.products\"\n                perPage={5}\n            >\n                <Datagrid>\n                    <ThumbnailField />\n                    <ProductRefField source=\"reference\" />\n                    <NumberField\n                        source=\"price\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <NumberField\n                        source=\"width\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField\n                        source=\"height\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField source=\"stock\" />\n                    <EditButton />\n                </Datagrid>\n            </ReferenceManyField>\n        </SimpleForm>\n    </Edit>\n);\n\nexport default CategoryEdit;\n","import CategoryIcon from '@material-ui/icons/Bookmark';\n\nimport CategoryList from './CategoryList';\nimport CategoryEdit from './CategoryEdit';\n\nexport default {\n    list: CategoryList,\n    edit: CategoryEdit,\n    icon: CategoryIcon,\n};\n","import React, { FC, Fragment, ReactElement } from 'react';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        paddingLeft: 25,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n    sidebarIsClosed: {\n        paddingLeft: 0,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n}));\n\ninterface Props {\n    dense: boolean;\n    handleToggle: () => void;\n    icon: ReactElement;\n    isOpen: boolean;\n    name: string;\n    sidebarIsOpen: boolean;\n}\n\nconst SubMenu: FC<Props> = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense,\n}) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n                <Divider />\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default SubMenu;\n","import React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { useMediaQuery, Theme } from '@material-ui/core';\nimport { useTranslate, DashboardMenuItem, MenuItemLink } from 'react-admin';\n\nimport visitors from '../visitors';\nimport orders from '../orders';\nimport invoices from '../invoices';\nimport products from '../products';\nimport categories from '../categories';\nimport reviews from '../reviews';\nimport SubMenu from './SubMenu';\nimport { AppState } from '../types';\n\ntype MenuName = 'menuCatalog' | 'menuSales' | 'menuCustomers';\n\ninterface Props {\n    dense: boolean;\n    logout: () => void;\n    onMenuClick: () => void;\n}\n\nconst Menu: FC<Props> = ({ onMenuClick, dense, logout }) => {\n    const [state, setState] = useState({\n        menuCatalog: false,\n        menuSales: false,\n        menuCustomers: false,\n    });\n    const translate = useTranslate();\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('xs')\n    );\n    const open = useSelector((state: AppState) => state.admin.ui.sidebarOpen);\n    useSelector((state: AppState) => state.theme); // force rerender on theme change\n\n    const handleToggle = (menu: MenuName) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    return (\n        <div>\n            {' '}\n            <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n            <SubMenu\n                handleToggle={() => handleToggle('menuSales')}\n                isOpen={state.menuSales}\n                sidebarIsOpen={open}\n                name=\"pos.menu.sales\"\n                icon={<orders.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/commands`}\n                    primaryText={translate(`resources.commands.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<orders.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/invoices`}\n                    primaryText={translate(`resources.invoices.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<invoices.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuCatalog')}\n                isOpen={state.menuCatalog}\n                sidebarIsOpen={open}\n                name=\"pos.menu.catalog\"\n                icon={<products.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/products`}\n                    primaryText={translate(`resources.products.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<products.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/categories`}\n                    primaryText={translate(`resources.categories.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<categories.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuCustomers')}\n                isOpen={state.menuCustomers}\n                sidebarIsOpen={open}\n                name=\"pos.menu.customers\"\n                icon={<visitors.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={`/customers`}\n                    primaryText={translate(`resources.customers.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<visitors.icon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={`/segments`}\n                    primaryText={translate(`resources.segments.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<LabelIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            </SubMenu>\n            <MenuItemLink\n                to={`/reviews`}\n                primaryText={translate(`resources.reviews.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={<reviews.icon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n            />\n            {isXSmall && (\n                <MenuItemLink\n                    to=\"/configuration\"\n                    primaryText={translate('pos.configuration')}\n                    leftIcon={<SettingsIcon />}\n                    onClick={onMenuClick}\n                    sidebarIsOpen={open}\n                    dense={dense}\n                />\n            )}\n            {isXSmall && logout}\n        </div>\n    );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport { Layout, Sidebar, useNotify, useRedirect } from \"react-admin\";\n\nimport { SidebarOpenPreferenceSync } from \"@react-admin/ra-preferences\";\n\nimport AppBar from \"./AppBar\";\nimport Menu from \"./Menu\";\n\nimport { GuideProvider } from \"@react-admin/ra-tour-guide\";\nimport { usePreferences } from \"@react-admin/ra-preferences\";\n\nimport guides from \"../guides\";\n\nconst CustomSidebar = (props: any) => <Sidebar {...props} size={200} />;\n\nexport default (props: any) => {\n  const notify = useNotify();\n  const redirect = useRedirect();\n  const [tourPreferences, setTourPreferences] = usePreferences(\"tour\");\n  return (\n    <GuideProvider\n      guides={guides}\n      tools={{ notify, redirect, setTourPreferences }}\n      initialState={tourPreferences}\n    >\n      <>\n        <SidebarOpenPreferenceSync />\n        <Layout\n          {...props}\n          appBar={AppBar}\n          sidebar={CustomSidebar}\n          menu={Menu}\n        />\n      </>\n    </GuideProvider>\n  );\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, withTypes } from 'react-final-form';\nimport { useLocation } from 'react-router-dom';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport { Notification } from 'react-admin';\nimport { useTranslate, useLogin, useNotify } from 'ra-core';\nimport { lightTheme } from './themes';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        background: 'url(https://source.unsplash.com/random/1600x900)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n    },\n}));\n\nconst renderInput = ({\n    meta: { touched, error } = { touched: false, error: undefined },\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    username?: string;\n    password?: string;\n}\n\nconst { Form } = withTypes<FormValues>();\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false);\n    const translate = useTranslate();\n    const classes = useStyles();\n    const notify = useNotify();\n    const login = useLogin();\n    const location = useLocation<{ nextPathname: string } | null>();\n\n    const handleSubmit = (auth: FormValues) => {\n        setLoading(true);\n        login(auth, location.state ? location.state.nextPathname : '/').catch(\n            (error: Error) => {\n                setLoading(false);\n                notify(\n                    typeof error === 'string'\n                        ? error\n                        : typeof error === 'undefined' || !error.message\n                        ? 'ra.auth.sign_in_error'\n                        : error.message,\n                    'warning'\n                );\n            }\n        );\n    };\n\n    const validate = (values: FormValues) => {\n        const errors: FormValues = {};\n        if (!values.username) {\n            errors.username = translate('ra.validation.required');\n        }\n        if (!values.password) {\n            errors.password = translate('ra.validation.required');\n        }\n        return errors;\n    };\n\n    return (\n        <Form\n            onSubmit={handleSubmit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className={classes.main}>\n                        <Card className={classes.card}>\n                            <div className={classes.avatar}>\n                                <Avatar className={classes.icon}>\n                                    <LockIcon />\n                                </Avatar>\n                            </div>\n                            <div className={classes.hint}>\n                                Hint: demo / demo\n                            </div>\n                            <div className={classes.form}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        name=\"username\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                    />\n                                </div>\n                                <div className={classes.input}>\n                                    <Field\n                                        name=\"password\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                    />\n                                </div>\n                            </div>\n                            <CardActions className={classes.actions}>\n                                <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    fullWidth\n                                >\n                                    {loading && (\n                                        <CircularProgress\n                                            size={25}\n                                            thickness={2}\n                                        />\n                                    )}\n                                    {translate('ra.auth.sign_in')}\n                                </Button>\n                            </CardActions>\n                        </Card>\n                        <Notification />\n                    </div>\n                </form>\n            )}\n        />\n    );\n};\n\nLogin.propTypes = {\n    authProvider: PropTypes.func,\n    previousRoute: PropTypes.string,\n};\n\n// We need to put the ThemeProvider decoration in another component\n// Because otherwise the useStyles() hook used in Login won't get\n// the right theme\nconst LoginWithTheme = (props: any) => (\n    <ThemeProvider theme={createMuiTheme(lightTheme)}>\n        <Login {...props} />\n    </ThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles({\n    media: {\n        height: '18em',\n    },\n});\n\nconst mediaUrl = `https://marmelab.com/posters/beard-${parseInt(\n    (Math.random() * 10).toString(),\n    10\n) + 1}.jpeg`;\n\nconst Welcome: FC = () => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardMedia image={mediaUrl} className={classes.media} />\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {translate('pos.dashboard.welcome.title')}\n                </Typography>\n                <Typography component=\"p\">\n                    {translate('pos.dashboard.welcome.subtitle')}\n                </Typography>\n            </CardContent>\n            <CardActions style={{ justifyContent: 'flex-end' }}>\n                <Button href=\"https://marmelab.com/react-admin\">\n                    <HomeIcon style={{ paddingRight: '0.5em' }} />\n                    {translate('pos.dashboard.welcome.aor_button')}\n                </Button>\n                <Button href=\"https://github.com/marmelab/react-admin/tree/master/examples/demo\">\n                    <CodeIcon style={{ paddingRight: '0.5em' }} />\n                    {translate('pos.dashboard.welcome.demo_button')}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default Welcome;\n","import React, { FC, ComponentType } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\n\ninterface Props {\n    bgColor: string;\n    Icon: ComponentType<SvgIconProps>;\n}\n\nconst useStyles = makeStyles({\n    card: {\n        float: 'left',\n        margin: '-20px 20px 0 15px',\n        zIndex: 100,\n        borderRadius: 3,\n    },\n    icon: {\n        float: 'right',\n        width: 54,\n        height: 54,\n        padding: 14,\n        color: '#fff',\n    },\n});\n\nconst CardIcon: FC<Props> = ({ Icon, bgColor }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card} style={{ backgroundColor: bgColor }}>\n            <Icon className={classes.icon} />\n        </Card>\n    );\n};\n\nexport default CardIcon;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport DollarIcon from '@material-ui/icons/AttachMoney';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\ninterface Props {\n    value?: number;\n}\n\nconst useStyles = makeStyles({\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n    title: {},\n});\n\nconst MonthlyRevenue: FC<Props> = ({ value }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={DollarIcon} bgColor=\"#31708f\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.monthly_revenue')}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {value}\n                </Typography>\n            </Card>\n        </div>\n    );\n};\n\nexport default MonthlyRevenue;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\ninterface Props {\n    value?: number;\n}\n\nconst useStyles = makeStyles({\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n    title: {},\n});\n\nconst NbNewOrders: FC<Props> = ({ value }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={ShoppingCartIcon} bgColor=\"#ff9800\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.new_orders')}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {value}\n                </Typography>\n            </Card>\n        </div>\n    );\n};\n\nexport default NbNewOrders;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\nimport { Customer, Order } from '../types';\n\ninterface Props {\n    orders?: Order[];\n    customers?: { [key: string]: Customer };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flex: 1,\n    },\n    cost: {\n        marginRight: '1em',\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst PendingOrders: FC<Props> = ({ orders = [], customers = {} }) => {\n    const classes = useStyles();\n    const translate = useTranslate();\n    return (\n        <Card className={classes.root}>\n            <CardHeader title={translate('pos.dashboard.pending_orders')} />\n            <List dense={true}>\n                {orders.map(record => (\n                    <ListItem\n                        key={record.id}\n                        button\n                        component={Link}\n                        to={`/commands/${record.id}`}\n                    >\n                        <ListItemAvatar>\n                            {customers[record.customer_id] ? (\n                                <Avatar\n                                    src={`${\n                                        customers[record.customer_id].avatar\n                                    }?size=32x32`}\n                                />\n                            ) : (\n                                <Avatar />\n                            )}\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={new Date(record.date).toLocaleString(\n                                'en-GB'\n                            )}\n                            secondary={translate('pos.dashboard.order.items', {\n                                smart_count: record.basket.length,\n                                nb_items: record.basket.length,\n                                customer_name: customers[record.customer_id]\n                                    ? `${\n                                          customers[record.customer_id]\n                                              .first_name\n                                      } ${\n                                          customers[record.customer_id]\n                                              .last_name\n                                      }`\n                                    : '',\n                            })}\n                        />\n                        <ListItemSecondaryAction>\n                            <span className={classes.cost}>\n                                {record.total}$\n                            </span>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))}\n            </List>\n        </Card>\n    );\n};\n\nexport default PendingOrders;\n","import React, { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nimport StarRatingField from '../reviews/StarRatingField';\nimport { Customer, Review } from '../types';\n\ninterface Props {\n    reviews?: Review[];\n    customers?: { [key: string]: Customer };\n    nb?: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    titleLink: { textDecoration: 'none', color: 'inherit' },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n    avatar: {\n        background: theme.palette.background.paper,\n    },\n    listItemText: {\n        overflowY: 'hidden',\n        height: '4em',\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n    },\n}));\n\nconst location = {\n    pathname: 'reviews',\n    query: { filter: JSON.stringify({ status: 'pending' }) },\n};\n\nconst PendingReviews: FC<Props> = ({ reviews = [], customers = {}, nb }) => {\n    const classes = useStyles();\n    const translate = useTranslate();\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={CommentIcon} bgColor=\"#f44336\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.pending_reviews')}\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                    className={classes.value}\n                >\n                    <Link to={location} className={classes.titleLink}>\n                        {nb}\n                    </Link>\n                </Typography>\n                <Divider />\n                <List>\n                    {reviews.map((record: Review) => (\n                        <ListItem\n                            key={record.id}\n                            button\n                            component={Link}\n                            to={`/reviews/${record.id}`}\n                            alignItems=\"flex-start\"\n                        >\n                            <ListItemAvatar>\n                                {customers[record.customer_id] ? (\n                                    <Avatar\n                                        src={`${\n                                            customers[record.customer_id].avatar\n                                        }?size=32x32`}\n                                        className={classes.avatar}\n                                    />\n                                ) : (\n                                    <Avatar />\n                                )}\n                            </ListItemAvatar>\n\n                            <ListItemText\n                                primary={\n                                    <StarRatingField\n                                        record={record}\n                                        size=\"small\"\n                                    />\n                                }\n                                secondary={record.comment}\n                                className={classes.listItemText}\n                                style={{ paddingRight: 0 }}\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            </Card>\n        </div>\n    );\n};\n\nexport default PendingReviews;\n","import React, { useMemo } from 'react';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CustomerIcon from '@material-ui/icons/PersonAdd';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useQueryWithStore } from 'react-admin';\n\nimport CardIcon from './CardIcon';\nimport { Customer } from '../types';\n\nconst useStyles = makeStyles({\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n});\n\nconst NewCustomers = () => {\n    const classes = useStyles();\n    const translate = useTranslate();\n    const aMonthAgo = useMemo(() => {\n        const date = new Date();\n        date.setDate(date.getDate() - 30);\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n    }, []);\n\n    const { loaded, data: visitors } = useQueryWithStore({\n        type: 'getList',\n        resource: 'customers',\n        payload: {\n            filter: {\n                has_ordered: true,\n                first_seen_gte: aMonthAgo.toISOString(),\n            },\n            sort: { field: 'first_seen', order: 'DESC' },\n            pagination: { page: 1, perPage: 100 },\n        },\n    });\n\n    if (!loaded) return null;\n\n    const nb = visitors ? visitors.reduce((nb: number) => ++nb, 0) : 0;\n    return (\n        <div className={classes.main}>\n            <CardIcon Icon={CustomerIcon} bgColor=\"#4caf50\" />\n            <Card className={classes.card}>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    {translate('pos.dashboard.new_customers')}\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                    className={classes.value}\n                >\n                    {nb}\n                </Typography>\n                <Divider />\n                <List>\n                    {visitors\n                        ? visitors.map((record: Customer) => (\n                              <ListItem\n                                  button\n                                  to={`/customers/${record.id}`}\n                                  component={Link}\n                                  key={record.id}\n                              >\n                                  <ListItemAvatar>\n                                      <Avatar\n                                          src={`${record.avatar}?size=32x32`}\n                                      />\n                                  </ListItemAvatar>\n                                  <ListItemText\n                                      primary={`${record.first_name} ${\n                                          record.last_name\n                                      }`}\n                                  />\n                              </ListItem>\n                          ))\n                        : null}\n                </List>\n            </Card>\n        </div>\n    );\n};\n\nexport default NewCustomers;\n","import React, {\n    useState,\n    useEffect,\n    useCallback,\n    FC,\n    CSSProperties,\n} from 'react';\nimport { useVersion, useDataProvider } from 'react-admin';\nimport { useMediaQuery, Theme } from '@material-ui/core';\n\nimport Welcome from './Welcome';\nimport MonthlyRevenue from './MonthlyRevenue';\nimport NbNewOrders from './NbNewOrders';\nimport PendingOrders from './PendingOrders';\nimport PendingReviews from './PendingReviews';\nimport NewCustomers from './NewCustomers';\n\nimport { Customer, Order, Review } from '../types';\n\ninterface OrderStats {\n    revenue: number;\n    nbNewOrders: number;\n    pendingOrders: Order[];\n}\n\ninterface CustomerData {\n    [key: string]: Customer;\n}\n\ninterface State {\n    nbNewOrders?: number;\n    nbPendingReviews?: number;\n    pendingOrders?: Order[];\n    pendingOrdersCustomers?: CustomerData;\n    pendingReviews?: Review[];\n    pendingReviewsCustomers?: CustomerData;\n    revenue?: number;\n}\n\nconst styles = {\n    flex: { display: 'flex' },\n    flexColumn: { display: 'flex', flexDirection: 'column' },\n    leftCol: { flex: 1, marginRight: '1em' },\n    rightCol: { flex: 1, marginLeft: '1em' },\n    singleCol: { marginTop: '2em', marginBottom: '2em' },\n};\n\nconst Dashboard: FC = () => {\n    const [state, setState] = useState<State>({});\n    const version = useVersion();\n    const dataProvider = useDataProvider();\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('xs')\n    );\n    const isSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n\n    const fetchOrders = useCallback(async () => {\n        const aMonthAgo = new Date();\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\n        const { data: recentOrders } = await dataProvider.getList('commands', {\n            filter: { date_gte: aMonthAgo.toISOString() },\n            sort: { field: 'date', order: 'DESC' },\n            pagination: { page: 1, perPage: 50 },\n        });\n        const aggregations = recentOrders\n            .filter((order: Order) => order.status !== 'cancelled')\n            .reduce(\n                (stats: OrderStats, order: Order) => {\n                    if (order.status !== 'cancelled') {\n                        stats.revenue += order.total;\n                        stats.nbNewOrders++;\n                    }\n                    if (order.status === 'ordered') {\n                        stats.pendingOrders.push(order);\n                    }\n                    return stats;\n                },\n                {\n                    revenue: 0,\n                    nbNewOrders: 0,\n                    pendingOrders: [],\n                }\n            );\n        setState(state => ({\n            ...state,\n            revenue: aggregations.revenue.toLocaleString(undefined, {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            }),\n            nbNewOrders: aggregations.nbNewOrders,\n            pendingOrders: aggregations.pendingOrders,\n        }));\n        const { data: customers } = await dataProvider.getMany('customers', {\n            ids: aggregations.pendingOrders.map(\n                (order: Order) => order.customer_id\n            ),\n        });\n        setState(state => ({\n            ...state,\n            pendingOrdersCustomers: customers.reduce(\n                (prev: CustomerData, customer: Customer) => {\n                    prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                    return prev;\n                },\n                {}\n            ),\n        }));\n    }, [dataProvider]);\n\n    const fetchReviews = useCallback(async () => {\n        const { data: reviews } = await dataProvider.getList('reviews', {\n            filter: { status: 'pending' },\n            sort: { field: 'date', order: 'DESC' },\n            pagination: { page: 1, perPage: 100 },\n        });\n        const nbPendingReviews = reviews.reduce((nb: number) => ++nb, 0);\n        const pendingReviews = reviews.slice(0, Math.min(10, reviews.length));\n        setState(state => ({ ...state, pendingReviews, nbPendingReviews }));\n        const { data: customers } = await dataProvider.getMany('customers', {\n            ids: pendingReviews.map((review: Review) => review.customer_id),\n        });\n        setState(state => ({\n            ...state,\n            pendingReviewsCustomers: customers.reduce(\n                (prev: CustomerData, customer: Customer) => {\n                    prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                    return prev;\n                },\n                {}\n            ),\n        }));\n    }, [dataProvider]);\n\n    useEffect(() => {\n        fetchOrders();\n        fetchReviews();\n    }, [version]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const {\n        nbNewOrders,\n        nbPendingReviews,\n        pendingOrders,\n        pendingOrdersCustomers,\n        pendingReviews,\n        pendingReviewsCustomers,\n        revenue,\n    } = state;\n    return isXSmall ? (\n        <div>\n            <div style={styles.flexColumn as CSSProperties}>\n                <div style={{ marginBottom: '2em' }}>\n                    <Welcome />\n                </div>\n                <div style={styles.flex}>\n                    <MonthlyRevenue value={revenue} />\n                    <NbNewOrders value={nbNewOrders} />\n                </div>\n                <div style={styles.singleCol}>\n                    <PendingOrders\n                        orders={pendingOrders}\n                        customers={pendingOrdersCustomers}\n                    />\n                </div>\n            </div>\n        </div>\n    ) : isSmall ? (\n        <div style={styles.flexColumn as CSSProperties}>\n            <div style={styles.singleCol}>\n                <Welcome />\n            </div>\n            <div style={styles.flex}>\n                <MonthlyRevenue value={revenue} />\n                <NbNewOrders value={nbNewOrders} />\n            </div>\n            <div style={styles.singleCol}>\n                <PendingOrders\n                    orders={pendingOrders}\n                    customers={pendingOrdersCustomers}\n                />\n            </div>\n        </div>\n    ) : (\n        <div style={styles.flex}>\n            <div style={styles.leftCol}>\n                <div style={styles.flex}>\n                    <MonthlyRevenue value={revenue} />\n                    <NbNewOrders value={nbNewOrders} />\n                </div>\n                <div style={styles.singleCol}>\n                    <Welcome />\n                </div>\n                <div style={styles.singleCol}>\n                    <PendingOrders\n                        orders={pendingOrders}\n                        customers={pendingOrdersCustomers}\n                    />\n                </div>\n            </div>\n            <div style={styles.rightCol}>\n                <div style={styles.flex}>\n                    <PendingReviews\n                        nb={nbPendingReviews}\n                        reviews={pendingReviews}\n                        customers={pendingReviewsCustomers}\n                    />\n                    <NewCustomers />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import DashboardComponent from './Dashboard';\n\nexport const Dashboard = DashboardComponent;\n","import { ThemeName } from '../types';\n\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme: ThemeName) => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { useTranslate, useLocale, useSetLocale, Title } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { changeTheme } from './actions';\nimport { AppState } from '../types';\n\nconst useStyles = makeStyles({\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n});\n\nconst Configuration = () => {\n    const translate = useTranslate();\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    const theme = useSelector((state: AppState) => state.theme);\n    const dispatch = useDispatch();\n    return (\n        <Card>\n            <Title title={translate('pos.configuration')} />\n            <CardContent>\n                <div className={classes.label}>\n                    {translate('pos.theme.name')}\n                </div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'light' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('light'))}\n                >\n                    {translate('pos.theme.light')}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'dark' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('dark'))}\n                >\n                    {translate('pos.theme.dark')}\n                </Button>\n            </CardContent>\n            <CardContent>\n                <div className={classes.label}>{translate('pos.language')}</div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'en' ? 'primary' : 'default'}\n                    onClick={() => setLocale('en')}\n                >\n                    en\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'fr' ? 'primary' : 'default'}\n                    onClick={() => setLocale('fr')}\n                >\n                    fr\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Configuration;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport visitors from '../visitors';\n\nconst useStyles = makeStyles({\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n});\n\nconst LinkToRelatedCustomers = ({ segment }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <Button\n            size=\"small\"\n            color=\"primary\"\n            component={Link}\n            to={{\n                pathname: '/customers',\n                search: stringify({\n                    page: 1,\n                    perPage: 25,\n                    filter: JSON.stringify({ groups: segment }),\n                }),\n            }}\n            className={classes.link}\n        >\n            <visitors.icon className={classes.icon} />\n            {translate('resources.segments.fields.customers')}\n        </Button>\n    );\n};\n\nexport default LinkToRelatedCustomers;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate, Title } from 'react-admin';\n\nimport LinkToRelatedCustomers from './LinkToRelatedCustomers';\nimport segments from './data';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 16,\n    },\n});\n\nconst Segments = () => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <Title title={translate('resources.segments.name')} />\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            {translate('resources.segments.fields.name')}\n                        </TableCell>\n                        <TableCell />\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {segments.map(segment => (\n                        <TableRow key={segment.id}>\n                            <TableCell>{translate(segment.name)}</TableCell>\n                            <TableCell>\n                                <LinkToRelatedCustomers segment={segment.id} />\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Card>\n    );\n};\n\nexport default Segments;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Configuration from './configuration/Configuration';\nimport Segments from './segments/Segments';\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\n    <Route exact path=\"/segments\" render={() => <Segments />} />,\n];\n","import { TranslationMessages } from 'ra-core';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n    ...englishMessages,\n    pos: {\n        search: 'Search',\n        configuration: 'Configuration',\n        language: 'Language',\n        theme: {\n            name: 'Theme',\n            light: 'Light',\n            dark: 'Dark',\n        },\n        dashboard: {\n            monthly_revenue: 'Monthly Revenue',\n            new_orders: 'New Orders',\n            pending_reviews: 'Pending Reviews',\n            new_customers: 'New Customers',\n            pending_orders: 'Pending Orders',\n            order: {\n                items:\n                    'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',\n            },\n            welcome: {\n                title: 'Welcome to react-admin demo',\n                subtitle:\n                    \"This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n                aor_button: 'react-admin site',\n                demo_button: 'Source for this demo',\n            },\n        },\n        menu: {\n            sales: 'Sales',\n            catalog: 'Catalog',\n            customers: 'Customers',\n        },\n    },\n    resources: {\n        customers: {\n            name: 'Customer |||| Customers',\n            fields: {\n                commands: 'Orders',\n                first_seen: 'First seen',\n                groups: 'Segments',\n                last_seen: 'Last seen',\n                last_seen_gte: 'Visited Since',\n                name: 'Name',\n                total_spent: 'Total spent',\n                password: 'Password',\n                confirm_password: 'Confirm password',\n                address: 'Address',\n                birthday: 'Birthday',\n                city: 'City',\n                first_name: 'First name',\n                has_newsletter: 'Has Newsletter',\n                has_ordered: 'Has ordered',\n                last_name: 'Last name',\n                latest_purchase: 'Latest purchase',\n                zipcode: 'Postal code',\n                nb_commands: 'Orders',\n            },\n            fieldGroups: {\n                identity: 'Identity',\n                address: 'Address',\n                stats: 'Stats',\n                history: 'History',\n                password: 'Password',\n                change_password: 'Change Password',\n            },\n            page: {\n                delete: 'Delete Customer',\n            },\n            errors: {\n                password_mismatch:\n                    'The password confirmation is not the same as the password.',\n            },\n        },\n        commands: {\n            name: 'Order |||| Orders',\n            amount: '1 order |||| %{smart_count} orders',\n            title: 'Order %{reference}',\n            fields: {\n                basket: {\n                    delivery: 'Delivery',\n                    reference: 'Reference',\n                    quantity: 'Quantity',\n                    sum: 'Sum',\n                    tax_rate: 'Tax Rate',\n                    total: 'Total',\n                    unit_price: 'Unit Price',\n                },\n                customer_id: 'Customer',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                status: 'Status',\n                returned: 'Returned',\n            },\n        },\n        invoices: {\n            name: 'Invoice |||| Invoices',\n            fields: {\n                date: 'Invoice date',\n                customer_id: 'Customer',\n                command_id: 'Order',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                address: 'Address',\n            },\n        },\n        products: {\n            name: 'Poster |||| Posters',\n            fields: {\n                category_id: 'Category',\n                height_gte: 'Min height',\n                height_lte: 'Max height',\n                height: 'Height',\n                image: 'Image',\n                price: 'Price',\n                reference: 'Reference',\n                stock_lte: 'Low Stock',\n                stock: 'Stock',\n                thumbnail: 'Thumbnail',\n                width_gte: 'Min width',\n                width_lte: 'Max width',\n                width: 'Width',\n            },\n            tabs: {\n                image: 'Image',\n                details: 'Details',\n                description: 'Description',\n                reviews: 'Reviews',\n            },\n        },\n        categories: {\n            name: 'Category |||| Categories',\n            fields: {\n                products: 'Products',\n            },\n        },\n        reviews: {\n            name: 'Review |||| Reviews',\n            amount: '1 review |||| %{smart_count} reviews',\n            relative_to_poster: 'Review on poster',\n            detail: 'Review detail',\n            fields: {\n                customer_id: 'Customer',\n                command_id: 'Order',\n                product_id: 'Product',\n                date_gte: 'Posted since',\n                date_lte: 'Posted before',\n                date: 'Date',\n                comment: 'Comment',\n                rating: 'Rating',\n            },\n            action: {\n                accept: 'Accept',\n                reject: 'Reject',\n            },\n            notification: {\n                approved_success: 'Review approved',\n                approved_error: 'Error: Review not approved',\n                rejected_success: 'Review rejected',\n                rejected_error: 'Error: Review not rejected',\n            },\n        },\n        segments: {\n            name: 'Segments',\n            fields: {\n                customers: 'Customers',\n                name: 'Name',\n            },\n            data: {\n                compulsive: 'Compulsive',\n                collector: 'Collector',\n                ordered_once: 'Ordered once',\n                regular: 'Regular',\n                returns: 'Returns',\n                reviewer: 'Reviewer',\n            },\n        },\n    },\n};\n\nexport default customEnglishMessages;\n","import React from \"react\";\nimport { useMutation, useRefresh } from \"react-admin\";\nimport classnames from \"classnames\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\nimport { markdownToReact } from \"@react-admin/ra-markdown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\n\nimport { usePlayback } from \"@react-admin/ra-tour-guide\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    cursor: \"pointer\",\n    margin: 20,\n    opacity: 0.9,\n    transition: \"opacity 0.3s ease-in-out\",\n    \"&:hover,&:focus-within\": {\n      opacity: 1,\n    },\n  },\n  visited: {\n    opacity: 0.6,\n  },\n  media: {\n    height: 140,\n  },\n  rightButton: {\n    marginLeft: \"auto\",\n  },\n  content: {\n    position: \"relative\",\n  },\n  newIcon: {\n    position: \"absolute\",\n    top: 10,\n    right: 10,\n  },\n  actions: {\n    paddingBottom: 0,\n  },\n  buyIcon: {\n    marginLeft: \"auto !important\",\n  },\n  playedOnIndicator: {\n    paddingLeft: 16,\n    paddingTop: 0,\n    paddingBottom: 16,\n  },\n});\n\nexport default ({ record }) => {\n  const classes = useStyles();\n  const refresh = useRefresh();\n  const { start } = usePlayback();\n\n  const [setPlayed] = useMutation(\n    {\n      type: \"update\",\n      resource: \"tours\",\n      payload: { id: record.id, data: { playedOn: new Date() } },\n    },\n    {\n      onSuccess: refresh,\n    }\n  );\n\n  const handlePlayClicked = () => {\n    start(record.tour);\n    setPlayed();\n  };\n\n  return (\n    <Card\n      className={classnames(classes.root, {\n        [classes.visited]: record.playedOn,\n      })}\n      onClick={handlePlayClicked}\n    >\n      <CardMedia\n        className={classes.media}\n        image={`${process.env.PUBLIC_URL}/${record.image}`}\n        title={record.title}\n      ></CardMedia>\n      <CardContent className={classes.content}>\n        {!record.playedOn && (\n          <NewReleasesIcon\n            color=\"error\"\n            fontSize=\"large\"\n            className={classes.newIcon}\n          />\n        )}\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {record.title}\n        </Typography>\n        {markdownToReact(record.comment)}\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button size=\"small\" startIcon={<PlayIcon />} color=\"primary\">\n          Play\n        </Button>\n        <Button\n          size=\"small\"\n          startIcon={<ShoppingCartIcon />}\n          color=\"secondary\"\n          className={classes.buyIcon}\n          href={record.href}\n        >\n          Buy\n        </Button>\n      </CardActions>\n      <div className={classes.playedOnIndicator}>\n        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n          {record.playedOn\n            ? `Last played on ${new Date(record.playedOn).toLocaleString()}`\n            : `Never played before`}\n        </Typography>\n      </div>\n    </Card>\n  );\n};\n","import React, { cloneElement } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\nimport {\n  TopToolbar,\n  Button,\n  sanitizeListRestProps,\n  List,\n  Pagination,\n  useMutation,\n  useRefresh,\n} from \"react-admin\";\n\nimport Tour from \"./Tour\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    background: \"none\",\n    boxShadow: \"none\",\n  },\n}));\n\nconst useListStyles = makeStyles((theme) => ({\n  gridContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n}));\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  ids,\n  ...rest\n}) => {\n  const refresh = useRefresh();\n\n  const [reset, { loading: resetLoading }] = useMutation(\n    {\n      type: \"updateMany\",\n      resource: \"tours\",\n      payload: { ids: ids, data: { playedOn: null } },\n    },\n    {\n      onSuccess: () => {\n        refresh();\n      },\n    }\n  );\n\n  const [markAsPlayed, { loading: markAsPlayedLoading }] = useMutation(\n    {\n      type: \"updateMany\",\n      resource: \"tours\",\n      payload: { ids: ids, data: { playedOn: new Date() } },\n    },\n    {\n      onSuccess: () => {\n        refresh();\n      },\n    }\n  );\n\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: \"button\",\n        })}\n      {/* Add your custom actions */}\n      <Button\n        onClick={markAsPlayed}\n        label=\"Mark all as played\"\n        disabled={markAsPlayedLoading}\n      >\n        <PlaylistAddCheckIcon />\n      </Button>\n      <Button onClick={reset} label=\"Reset\" disabled={resetLoading}>\n        <RotateLeftIcon />\n      </Button>\n    </TopToolbar>\n  );\n};\n\nconst GridList = ({ ids, data, ...rest }) => {\n  const classes = useListStyles();\n  return (\n    <div className={classes.gridContainer}>\n      {ids.map((id) => (\n        <Tour key={id} record={data[id]} />\n      ))}\n    </div>\n  );\n};\n\nconst TourList = (props) => {\n  const classes = useStyles();\n\n  return (\n    <List\n      {...props}\n      perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 40]} />}\n      sort={{ field: \"id\", order: \"ASC\" }}\n      classes={classes}\n      actions={<ListActions />}\n    >\n      <GridList />\n    </List>\n  );\n};\n\nexport default TourList;\n","import DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\n\nimport TourList from './TourList';\n\nexport default {\n    list: TourList,\n    icon: DirectionsBusIcon,\n};\n","export default type => {\n    switch (type) {\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n        default:\n            return import('./rest').then(provider => provider.default);\n    }\n};\n","export default type => {\n    switch (type) {\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n        default:\n            return import('./rest').then(factory => factory.default());\n    }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\n\nimport { PreferencesBasedThemeProvider } from \"@react-admin/ra-preferences\";\n\nimport \"./App.css\";\n\nimport { darkTheme, lightTheme } from \"./layout/themes\";\nimport authProvider from \"./authProvider\";\nimport { Login, Layout } from \"./layout\";\nimport { Dashboard } from \"./dashboard\";\nimport customRoutes from \"./routes\";\nimport englishMessages from \"./i18n/en\";\n\nimport visitors from \"./visitors\";\nimport orders from \"./orders\";\nimport products from \"./products\";\nimport invoices from \"./invoices\";\nimport categories from \"./categories\";\nimport reviews from \"./reviews\";\nimport tours from \"./tours\";\n\nimport dataProviderFactory from \"./dataProvider\";\nimport fakeServerFactory from \"./fakeServer\";\n\nconst i18nProvider = polyglotI18nProvider((locale) => {\n  if (locale === \"fr\") {\n    return import(\"./i18n/fr\").then((messages) => messages.default);\n  }\n\n  // Always fallback on english\n  return englishMessages;\n}, \"en\");\n\nconst App = () => {\n  const [dataProvider, setDataProvider] = useState(null);\n\n  useEffect(() => {\n    let restoreFetch;\n\n    const fetchDataProvider = async () => {\n      restoreFetch = await fakeServerFactory(\n        process.env.REACT_APP_DATA_PROVIDER\n      );\n      const dataProviderInstance = await dataProviderFactory(\n        process.env.REACT_APP_DATA_PROVIDER\n      );\n      setDataProvider(\n        // GOTCHA: dataProviderInstance can be a function\n        () => dataProviderInstance\n      );\n    };\n\n    fetchDataProvider();\n\n    return restoreFetch;\n  }, []);\n\n  if (!dataProvider) {\n    return (\n      <div className=\"loader-container\">\n        <div className=\"loader\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <PreferencesBasedThemeProvider\n      themeFromType={(type) => (type === \"dark\" ? darkTheme : lightTheme)}\n    >\n      <Admin\n        title=\"\"\n        dataProvider={dataProvider}\n        customRoutes={customRoutes}\n        authProvider={authProvider}\n        dashboard={Dashboard}\n        loginPage={Login}\n        layout={Layout}\n        i18nProvider={i18nProvider}\n      >\n        <Resource name=\"customers\" {...visitors} />\n        <Resource name=\"commands\" {...orders} options={{ label: \"Orders\" }} />\n        <Resource name=\"invoices\" {...invoices} />\n        <Resource name=\"products\" {...products} />\n        <Resource name=\"categories\" {...categories} />\n        <Resource name=\"reviews\" {...reviews} />\n        <Resource name=\"tours\" {...tours} />\n      </Admin>\n    </PreferencesBasedThemeProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'proxy-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
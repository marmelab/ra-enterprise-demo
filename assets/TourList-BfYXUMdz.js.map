{"version":3,"file":"TourList-BfYXUMdz.js","sources":["../../src/tours/Tour.tsx","../../src/tours/TourList.tsx"],"sourcesContent":["import React from 'react';\nimport { RaRecord, useTranslate } from 'react-admin';\nimport { useTour } from '@react-admin/ra-tour';\nimport {\n    Box,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    Button,\n    Typography,\n} from '@mui/material';\nimport PlayIcon from '@mui/icons-material/PlayArrow';\nimport NewReleasesIcon from '@mui/icons-material/NewReleases';\nimport { useTourState } from './useTourState';\n\nconst Tour = ({ record }: { record: RaRecord }) => {\n    const translate = useTranslate();\n    const [playedOn, tourStateActions] = useTourState(record.id.toString());\n    // eslint-disable-next-line no-unused-vars\n    const [, { start }] = useTour();\n\n    const handlePlayClicked = (): void => {\n        if (start) {\n            start(record.tour);\n        }\n        tourStateActions.markAsPlayed();\n    };\n\n    const basePath = import.meta.env.BASE_URL;\n\n    return (\n        <Card\n            sx={{\n                cursor: 'pointer',\n                opacity: playedOn ? 0.6 : 0.9,\n                transition: 'opacity 0.3s ease-in-out',\n                '&:hover,&:focus-within': {\n                    opacity: 1,\n                },\n                height: '100%',\n            }}\n            onClick={handlePlayClicked}\n        >\n            <CardMedia\n                sx={{\n                    height: 140,\n                    filter: 'brightness(0.9) drop-shadow(0 0 0 blue)',\n                }}\n                image={`${basePath}${record.image}`}\n                title={record.title}\n            />\n            <CardContent sx={{ position: 'relative' }}>\n                {!playedOn && (\n                    <NewReleasesIcon\n                        color=\"error\"\n                        fontSize=\"large\"\n                        sx={{\n                            position: 'absolute',\n                            top: 10,\n                            right: 10,\n                        }}\n                    />\n                )}\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {record.title}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                    {translate(record.comment, { _: record.comment })}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" startIcon={<PlayIcon />} color=\"primary\">\n                    {translate('tours.action.play')}\n                </Button>\n                <Box\n                    sx={{\n                        pl: 1,\n                    }}\n                >\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                        {!!playedOn\n                            ? translate('tours.message.played_on', {\n                                  date: new Date(playedOn).toLocaleString(),\n                              })\n                            : translate('tours.message.never_played')}\n                    </Typography>\n                </Box>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default Tour;\n","import React, { ReactElement } from 'react';\nimport { Grid } from '@mui/material';\nimport PlaylistAddCheckIcon from '@mui/icons-material/PlaylistAddCheck';\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft';\nimport { TopToolbar, Button } from 'react-admin';\nimport tours from './data';\n\nimport Tour from './Tour';\nimport { useTourStates } from './useTourState';\nimport { useDefineAppLocation } from '@react-admin/ra-navigation';\n\nconst ListActions = (): ReactElement => {\n    const [, tourStatesActions] = useTourStates();\n\n    return (\n        <TopToolbar>\n            <Button\n                label=\"Mark all as played\"\n                onClick={(): void => tourStatesActions.markAllAsPlayed()}\n            >\n                <PlaylistAddCheckIcon />\n            </Button>\n            <Button\n                label=\"Reset\"\n                onClick={(): void => tourStatesActions.resetAll()}\n            >\n                <RotateLeftIcon />\n            </Button>\n        </TopToolbar>\n    );\n};\n\nconst TourList = (): ReactElement => {\n    useDefineAppLocation('tours');\n    return (\n        <>\n            <ListActions />\n            <Grid\n                container\n                spacing={2}\n                data-testid=\"tourlist\"\n                sx={{\n                    alignItems: 'stretch',\n                    px: 1,\n                }}\n            >\n                {tours.map(tour => (\n                    <Grid\n                        key={tour.id}\n                        size={{\n                            xs: 12,\n                            sm: 6,\n                            md: 4,\n                            lg: 3,\n                        }}\n                    >\n                        <Tour record={tour} />\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    );\n};\n\nexport default TourList;\n"],"names":["Tour","__name","record","translate","useTranslate","playedOn","tourStateActions","useTourState","start","useTour","handlePlayClicked","jsxs","Card","jsx","CardMedia","CardContent","NewReleasesIcon","Typography","CardActions","Button","PlayIcon","Box","ListActions","tourStatesActions","useTourStates","TopToolbar","PlaylistAddCheckIcon","RotateLeftIcon","TourList","useDefineAppLocation","Fragment","Grid","tours","tour"],"mappings":"mQAgBA,MAAMA,EAAOC,EAAA,CAAC,CAAE,OAAAC,KAAmC,CAC/C,MAAMC,EAAYC,EAAa,EACzB,CAACC,EAAUC,CAAgB,EAAIC,EAAaL,EAAO,GAAG,UAAU,EAEhE,EAAG,CAAE,MAAAM,EAAO,EAAIC,EAAQ,EAExBC,EAAoBT,EAAA,IAAY,CAC9BO,GACAA,EAAMN,EAAO,IAAI,EAErBI,EAAiB,aAAa,CAClC,EAL0B,qBAUtB,OAAAK,EAAA,KAACC,EAAA,CACG,GAAI,CACA,OAAQ,UACR,QAASP,EAAW,GAAM,GAC1B,WAAY,2BACZ,yBAA0B,CACtB,QAAS,CACb,EACA,OAAQ,MACZ,EACA,QAASK,EAET,SAAA,CAAAG,EAAA,IAACC,EAAA,CACG,GAAI,CACA,OAAQ,IACR,OAAQ,yCACZ,EACA,MAAO,KAAcZ,EAAO,KAAK,GACjC,MAAOA,EAAO,KAAA,CAClB,SACCa,EAAY,CAAA,GAAI,CAAE,SAAU,YACxB,SAAA,CAAA,CAACV,GACEQ,EAAA,IAACG,EAAA,CACG,MAAM,QACN,SAAS,QACT,GAAI,CACA,SAAU,WACV,IAAK,GACL,MAAO,EAAA,CACX,CACJ,EAEHH,EAAAA,IAAAI,GAAW,QAAQ,KAAK,UAAU,KAAK,aAAY,GAC/C,SAAAf,EAAO,KAAA,CACZ,QACCe,EAAA,CAAW,QAAQ,QAAQ,aAAY,GACnC,SAAAd,EAAUD,EAAO,QAAS,CAAE,EAAGA,EAAO,OAAQ,CAAC,CACpD,CAAA,CAAA,EACJ,SACCgB,EACG,CAAA,SAAA,OAACC,EAAA,CAAO,KAAK,QAAQ,UAAYN,EAAAA,IAAAO,EAAS,CAAA,CAAA,EAAI,MAAM,UAC/C,SAAUjB,EAAA,mBAAmB,EAClC,EACAU,EAAA,IAACQ,EAAA,CACG,GAAI,CACA,GAAI,CACR,EAEA,SAAAR,EAAAA,IAACI,EAAW,CAAA,QAAQ,UAAU,MAAM,gBAC/B,SAAEZ,EACGF,EAAU,0BAA2B,CACjC,KAAM,IAAI,KAAKE,CAAQ,EAAE,eAAe,CAAA,CAC3C,EACDF,EAAU,4BAA4B,CAChD,CAAA,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,CAER,EA3Ea,QCLPmB,EAAcrB,EAAA,IAAoB,CACpC,KAAM,CAAG,CAAAsB,CAAiB,EAAIC,EAAc,EAE5C,cACKC,EACG,CAAA,SAAA,CAAAZ,EAAA,IAACM,EAAA,CACG,MAAM,qBACN,QAASlB,EAAA,IAAYsB,EAAkB,gBAAgB,EAA9C,WAET,eAACG,EAAqB,CAAA,CAAA,CAAA,CAC1B,EACAb,EAAA,IAACM,EAAA,CACG,MAAM,QACN,QAASlB,EAAA,IAAYsB,EAAkB,SAAS,EAAvC,WAET,eAACI,EAAe,CAAA,CAAA,CAAA,CAAA,CACpB,EACJ,CAER,EAnBoB,eAqBdC,EAAW3B,EAAA,KACb4B,EAAqB,OAAO,EAGpBlB,EAAA,KAAAmB,WAAA,CAAA,SAAA,CAAAjB,EAAA,IAACS,EAAY,EAAA,EACbT,EAAA,IAACkB,EAAA,CACG,UAAS,GACT,QAAS,EACT,cAAY,WACZ,GAAI,CACA,WAAY,UACZ,GAAI,CACR,EAEC,SAAAC,EAAM,IACHC,GAAApB,EAAA,IAACkB,EAAA,CAEG,KAAM,CACF,GAAI,GACJ,GAAI,EACJ,GAAI,EACJ,GAAI,CACR,EAEA,SAAAlB,EAAAA,IAACb,EAAK,CAAA,OAAQiC,CAAM,CAAA,CAAA,EARfA,EAAK,EAUjB,CAAA,CAAA,CAAA,CACL,EACJ,GA5BS"}